/////////////////////////////////////////////////////////////
///\file J_visualCharacterTool.mel
///\brief 动画关键帧浏览工具
///
///\author 桔
///\version 1.0
///\date  18:45 2019/8/21
///History:  
///
///////////////////////////////////////////////////////////////

///打开主界面窗口
///\return success
global proc  string J_visualCharacterTool()
{
    if (`window -ex J_visualCharacterToolWin`)
        deleteUI -window J_visualCharacterToolWin;
    window -w 300 -h 250 -title "虚拟角色工具箱" J_visualCharacterToolWin;
    formLayout  -nd 100   J_visualCharacterToolWin_mainFormLayout;

    string $button01=`button -l "导出fbx" -c "J_visualCharacterTool_exportFbx()"`;
    string $button02=`button -l "导出abc" -c "J_visualCharacterTool_exportAbc()"`;
    string $button03=`button -l "导入meta&ak数据" -c "J_visualCharacterTool_importJson()"`;
    string $button04=`button -l "导入训练数据" -c "J_visualCharacterTool_importAIJson()"`;
    string $button05=`button -l "导入训练数据2" -c "J_visualCharacterTool_importAIJson2()"`;
    textField    J_tex;
    string $button06=`button -l "读取音视频帧数" -c "J_visualCharacterTool_loadFrame()"`;
    string $button07=`button -l "过滤动画数据" -c "J_visualCharacterTool_deleteFrame()"`;
    string $button08=`button -l "绑定BS控制器" -c "J_visualCharacterTool_bindBSController()"`;

    formLayout  -e
        -af $button01 top 3
        -af $button01 left 2
        -af $button01 right 2

        -ac $button02 top 3 $button01
        -af $button02 left 2
        -af $button02 right 2

        -ac $button03 top 3 $button02
        -af $button03 left 2
        -af $button03 right 2
        
        -ac $button04 top 3 $button03
        -af $button04 left 2
        -af $button04 right 2        

        -ac $button05 top 3 $button04
        -af $button05 left 2
        -af $button05 right 2

        -ac J_tex top 3 $button05
        -af J_tex left 2
        -af J_tex right 2

        -ac $button06 top 3 J_tex
        -af $button06 left 2
        -af $button06 right 2

        -ac $button07 top 3 $button06
        -af $button07 left 2
        -af $button07 right 2

        -ac $button08 top 3 $button07
        -af $button08 left 2
        -af $button08 right 2

        J_visualCharacterToolWin_mainFormLayout;

    showWindow J_visualCharacterToolWin;
    return "success";
}
global proc J_visualCharacterTool_exportFbx()
{
    python("import os");
    string $filePath=python("os.path.dirname(maya.cmds.file(query=True,sceneName=True))")+"/";
    if (size ($filePath)<3)
        $filePath= "c:/temp/";
    string $sel[]=`ls -sl`;  
    if (size($sel)>0)
    {
    string $outPath=$filePath+$sel[0]+".fbx";
    print $outPath;
    int $startFrame=`playbackOptions -query -minTime`;
    int $endFrame=`playbackOptions -query -maxTime`+1;
    FBXResetExport ;
    FBXExportInAscii  -v true;
    FBXExportBakeComplexAnimation -v 1;    
    FBXExportBakeComplexStart -v $startFrame;
    FBXExportBakeComplexEnd -v $endFrame;
    FBXExportBakeResampleAnimation -v 1;
    FBXExportInAscii -v 1;
    FBXExportIncludeChildren -v 1;
    FBXExportSplitAnimationIntoTakes -clear;    
    FBXExportDeleteOriginalTakeOnSplitAnimation -v true;
    FBXExportSplitAnimatiaaaonIntoTakes -v "cam" $startFrame $endFrame;
    FBXExport -f $outPath -s ;
    }
}
global proc J_visualCharacterTool_exportAbc()
{
    python("JpyModules.public.J_exportAbc(1)");
}
global proc J_visualCharacterTool_importJson()
{
    python("JpyModules.animation.J_visualCharacterTool.J_loadJsonKeyFrame()");
}
global proc J_visualCharacterTool_importAIJson()
{
    python("JpyModules.animation.J_visualCharacterTool.J_loadAIJsonKeyFrame()");
}
global proc J_visualCharacterTool_importAIJson2()
{
    python("JpyModules.animation.J_visualCharacterTool.J_loadAIJsonKeyFrame2()");
}
global proc J_visualCharacterTool_loadFrame()
{
    python("JpyModules.animation.J_visualCharacterTool.J_loadVideoFrame()");
}

global proc J_visualCharacterTool_deleteFrame()
{
    
    string $sel[]=`ls -sl`;
    string $his[]=`listConnections  $sel`;
    string $allAni[]=`ls -type animCurve $his`;
    if (size($sel)<1)
    {
    	$allAni=`ls -type animCurve`;
    }
    float $tv =`textField -q -tx J_tex`;
    int $startFrame=`playbackOptions -q -minTime`;
    int $endFrame=`playbackOptions -q -maxTime`;
    for ($item in $allAni)
    {
        for ($i =$startFrame;$i<=$endFrame;$i++)
        {
            float $temp[]=`keyframe -t $i -q -valueChange  $item`;
            if ($temp[0]<$tv)
            {
                cutKey -t $i $item;
            }
            else
            {
            	setKeyframe -t ($i-1)  -v 0  $item;

            	break;
            }
        }
    }
}
global proc J_visualCharacterTool_bindBSController()
{
    python("JpyModules.animation.J_visualCharacterTool.J_bindBsController()");
}
//J_visualCharacterTool()