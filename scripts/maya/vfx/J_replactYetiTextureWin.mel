/////////////////////////////////////////////////////////////
///\file J_replactYetiTextureWin.mel
///
///\brief    yeti¸ÄÌùÍ¼
///
///\author ½Û
///\version 1.0
///\date  15:23 2018/3/6
///History:  
///
///////////////////////////////////////////////////////////////

global proc J_replactYetiTextureWin()
{
/////////////////////////////////////////////////////////////Éú³É´°Ìå
string $checkBoxs[];
int $winWidth=300;
int $count=10;
if (`window -ex J_yetiTexturePath`)
    deleteUI -window J_yetiTexturePath;
    window -w 300 -h 600 -title "yeti Ìæ»»ÌùÍ¼Â·¾¶" J_yetiTexturePath;
        frameLayout -cll 1 -cl 0 -h ($count*20) -l " "  myColum;        
        formLayout  -numberOfDivisions 100  checkNodesLayout;
        textField  -w 260 -h 25 pathText;
        button -l "Ñ¡ÔñÂ·¾¶"   -h 30 -c  "J_yeti_GetPath" buPath ;
        button -l "Ìæ»»"  -h 30 -c  "J_yeti_buUpRun" buUp ;
    /////////////////////////////////////////////////////////±à¼­´°Ìå   
    int $apx=5;
    int $apy=5;

    formLayout -e 
        -ap pathText left 0 1 
        -af pathText top 0
        -ap pathText right 0 99  
        
        -af buPath left $apx 
        -ac buPath top $apy pathText
        -ap buPath right 0 49
        
        -ac buUp left $apx buPath
        -ac buUp top $apy pathText
        -ap buUp right 0 99
        
        checkNodesLayout;
        
showWindow J_yetiTexturePath;

}

proc J_yeti_GetPath()//ÉèÖÃÂ·¾¶
{
    string $temp[];
   //if(!catch($temp=`fileDialog2 -fm 0`))
   //{
    $temp=`fileDialog2 -fm 3 `;
   //}
    textField -e -tx $temp[0] -w 260 -h 25 pathText;
}

proc J_yeti_buUpRun()
{
    string $path=`textField -q -tx pathText`;
    J_replactYetiTexture($path);
}


global proc J_replactYetiTexture(string $newPath)
{
//string $newPath="E:/sources/maque/2017-12-20/";
string $yeti[]=`ls -type pgYetiMaya`;
for ($item in $yeti)
{
    string $textures[]=`pgYetiGraph -listNodes -type "texture" $item`;
    for ($itemL1 in $textures)
    {
    string $textureFileName=getFileName($item,$itemL1);
    if ($textureFileName=="")
    {
        print ($item +"  "+"file not found in "+$itemL1+"node \n");
    }
    else
    {
        if(J_findFile($newPath,$textureFileName)!="")
            {
                string $temp=$newPath+"/"+$textureFileName;
                pgYetiGraph -node $itemL1 -param "file_name" -setParamValueString $temp $item;
            }
        else{print ($item+"  "+$itemL1+"  "+"file not found in "+ $newPath+"\n");}
    }
    }
}

}
proc string getFileName(string $yetiNode,string $textureNode) 
{
    string $oldFileName=`pgYetiGraph -node $textureNode -param "file_name" -getParamValue $yetiNode`;
    string $buffer[];
    $numTokens = `tokenize $oldFileName "/" $buffer`;
    return $buffer[size($buffer)-1];
}
proc string J_findFile(string $orgPath,string $destinationFile)
{
    string $allFilesInPath[]=`getFileList -folder  $orgPath`;
    for ($item in $allFilesInPath)
    {
        if(`gmatch $item "*.*"`)
        {
            if ($item==$destinationFile)
            {
                return ($destinationFile);
            }
        }
        else{print ($item+" is dir\n");}
    }
    return "";
}
