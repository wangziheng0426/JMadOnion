/////////////////////////////////////////////////////////////
///\file J_CFXWorkFlow.mel
///
///\brief    毛发流程工具  
///
///\author 桔
///\version 1.0
///\date  15:23 2018/11/2
///History:  
///
///////////////////////////////////////////////////////////////
global proc J_CFXWorkFlow()//主程序
{
/////////////////////////////////////////////////////////////生成窗体
string $checkBoxs[];
if (`window -ex J_CFXWorkFlow`)
    deleteUI -window J_CFXWorkFlow;
    window -w 300 -h 360 -title "CFX工具" J_CFXWorkFlow;
        int $ButtonW=80;
        int $ButtonH=30;
        formLayout  -numberOfDivisions 100  J_cfxWorkFlowMain;
        frameLayout -cll 1 -cl 0 -h 140-l "毛发工具"  J_hairFrameLayout;
            formLayout  -numberOfDivisions 100  J_hairFormLayout;
                textScrollList  -sc "J_CFXWorkFlow_selectitem(\"J_allHairSystemNode\")"  -allowMultiSelection 1 -h 110 J_allHairSystemNode;
                button -l "选择毛发" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_selNode(\"hairSystem\")" J_buHairMark;
                button -l "导出毛发" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_hairOut()" J_buHairOut;
                button -l "导入毛发" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_hairIn()" J_buHairIn;
            setParent ..;
        setParent ..;
        ///////////////////////////布料
        frameLayout -cll 1 -cl 0  -l "布料工具"  J_nClothFrameLayout;
            formLayout  -numberOfDivisions 100  J_nClothFormLayout;
                textScrollList  -sc "J_CFXWorkFlow_selectitem(\"J_allnClothSystemNode\")"  -allowMultiSelection 1 -h 163 J_allnClothSystemNode;
                textScrollList  -sc "J_CFXWorkFlow_selectitem(\"J_allnNucleusNode\")"  -allowMultiSelection 1 -h 100 J_allnNucleusNode;
                button -l "选择布料" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_selNode(\"nCloth\")" J_buNClothMark;
                button -l "导出变型布料" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_outInBetweenGeo()" J_buNClothOut;
                button -l "导出abc布料" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_outAbcGeo()" J_buNClothOutAbc;
                button -l "导出独立abc" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_outAbcGeoSep()" J_buNClothOutAbcSep;
                button -l "导入布料" -w $ButtonW  -h $ButtonH -c  "J_CFXWorkFlow_nClothIn()" J_buNClothIn;
            setParent ..;
        setParent ..;
        frameLayout -cll 1 -cl 0 -l "缓存工具"  J_nCacheFrameLayout;
            formLayout  -numberOfDivisions 100  J_nCacheFormLayout;
                button -l "融合blend" -w $ButtonW  -h $ButtonH -c  "J_JoinBlend()" J_buCreateBlend;
                button -l "添加随机颜色" -w $ButtonW  -h $ButtonH -c  "J_randomColor()" J_buCreateColor;
                button -l "一键缓存拍屏" -w $ButtonW  -h $ButtonH -c  "J_CreateCachePlayBlast()" J_buCachePB;
            setParent ..;
        setParent ..;
        frameLayout -cll 1 -cl 0 -l "后台解算"  J_batchSimFrameLayout;
            formLayout  -numberOfDivisions 100  J_batchSimFormLayout;
                textField -text "workerIp&port&frameRate" J_ipPort;
                button -l "链接服务器" -w $ButtonW  -h $ButtonH -c  "J_connectWorker()" J_buConnectWorker;
                button -l "解算&拍屏" -w $ButtonW  -h $ButtonH -c  "J_simAndPlayBlast()" J_buJ_simAndPlayBlast;
                button -l "解算&渲染" -w $ButtonW  -h $ButtonH -c  "J_simAndRender()" J_buJ_simAndRender;
    /////////////////////////////////////////////////////////编辑窗体  
    formLayout -e 
        -ap J_hairFrameLayout left 0 1
        -ap J_hairFrameLayout right 0 99
        -af J_hairFrameLayout top 0
        
        -ap J_nClothFrameLayout left 0 1
        -ap J_nClothFrameLayout right 0 99
        -ac J_nClothFrameLayout top  1 J_hairFrameLayout
        
        -ap J_nCacheFrameLayout left 0 1
        -ap J_nCacheFrameLayout right 0 99
        -ac J_nCacheFrameLayout top  1 J_nClothFrameLayout
        
        -ap J_batchSimFrameLayout left 0 1
        -ap J_batchSimFrameLayout right 0 99
        -ac J_batchSimFrameLayout top  1 J_nCacheFrameLayout
    J_cfxWorkFlowMain;
    formLayout -e 
        -ap J_allHairSystemNode left 0 0
        -af J_allHairSystemNode top 0
        -ap J_allHairSystemNode right 0 66
        
        -ap J_buHairMark left 0 67
        -af J_buHairMark top 0
        -ap J_buHairMark right 0 100

        -ap J_buHairOut left 0 67
        -ac J_buHairOut top  1 J_buHairMark
        -ap J_buHairOut right 0 100
        
        -ap J_buHairIn left 0 67
        -ac J_buHairIn top  1 J_buHairOut
        -ap J_buHairIn right 0 100
        
        J_hairFormLayout;
    formLayout -e 
        -ap J_allnClothSystemNode left 0 0
        -af J_allnClothSystemNode top 0
        -ap J_allnClothSystemNode right 0 66
        
        -ap J_allnNucleusNode left 0 0
        -ac J_allnNucleusNode top 1 J_allnClothSystemNode
        -ap J_allnNucleusNode right 0 66
        
        -ap J_buNClothMark left 0 67
        -af J_buNClothMark top 0
        -ap J_buNClothMark right 0 100

        -ap J_buNClothOut left 0 67
        -ac J_buNClothOut top  1 J_buNClothMark
        -ap J_buNClothOut right 0 100
        
        -ap J_buNClothOutAbc left 0 67
        -ac J_buNClothOutAbc top  1 J_buNClothOut
        -ap J_buNClothOutAbc right 0 100
        
        -ap J_buNClothOutAbcSep left 0 67
        -ac J_buNClothOutAbcSep top  1 J_buNClothOutAbc
        -ap J_buNClothOutAbcSep right 0 100
        
        -ap J_buNClothIn left 0 67
        -ac J_buNClothIn top  1 J_buNClothOutAbcSep
        -ap J_buNClothIn right 0 100        
        
        J_nClothFormLayout;
    formLayout -e 
        -ap J_buCreateBlend left 0 0
        -af J_buCreateBlend top  0
        -ap J_buCreateBlend right 0 33
        
        -ap J_buCreateColor left 0 34
        -af J_buCreateColor top  0
        -ap J_buCreateColor right 0 66
        
        -ap J_buCachePB left 0 67
        -af J_buCreateColor top  0
        -ap J_buCachePB right 0 100
    J_nCacheFormLayout;
    
    formLayout -e 
        -ap J_ipPort left 0 0
        -af J_ipPort top  0
        -ap J_ipPort right 0 99
        
        
        -ap J_buConnectWorker left 0 0
        -ac J_buConnectWorker top  1 J_ipPort
        -ap J_buConnectWorker right 0 33
        
        -ap J_buJ_simAndPlayBlast left 0 34
        -ac J_buJ_simAndPlayBlast top  1 J_ipPort
        -ap J_buJ_simAndPlayBlast right 0 66
        
        -ap J_buJ_simAndRender left 0 67
        -ac J_buJ_simAndRender top  1 J_ipPort
        -ap J_buJ_simAndRender right 0 100 
    J_batchSimFormLayout;
showWindow J_CFXWorkFlow;
J_CFXWorkFlow_init();
J_CFXWorkFlow_runScriptJob();
catch(loadPlugin("AbcExport.mll"));
}

//J_CFXWorkFlow;
//引用python命令
global proc J_CFXWorkFlow_selNode(string $nodeType)
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_selNode('"+$nodeType+"')");
    print $nodeType;
}
global proc J_CFXWorkFlow_hairOut()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_hairOut()");
}
global proc J_CFXWorkFlow_hairIn()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_hairIn()");
}
//////////////////////////////////////////////////////////////
global proc J_CFXWorkFlow_outInBetweenGeo()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_outInBetweenGeo()");
}
global proc J_CFXWorkFlow_outAbcGeo()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_outAbcGeo()");
}
global proc J_CFXWorkFlow_outAbcGeoSep()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_outAbcGeo(\"\",1)");
}
global proc J_CFXWorkFlow_nClothIn()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_nClothIn()");
}
global proc J_JoinBlend()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_blendToSelectGeo()");
}
global proc J_CreateCachePlayBlast()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_CachePb()");
}

global proc J_connectWorker()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_CachePb()");
}

global proc J_simAndPlayBlast()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_CachePb()");
}

global proc J_simAndRender()
{
    python("JpyModules.vfx.J_CFXWorkFlow.J_CFXWorkFlow_CachePb()");
}

//////////////////////////////////////////////////////////////
///根据场景中的选择,选择列表中的节点
global proc J_CFXWorkFlow_selectNode()
{

    textScrollList -e -deselectAll  J_allHairSystemNode;
    textScrollList -e -deselectAll  J_allnClothSystemNode;
    textScrollList -e -deselectAll  J_allnNucleusNode;
    string $sel[]=`ls -sl`;
    string $listHair[]=`textScrollList -q -ai J_allHairSystemNode`;
    string $listCloth[]=`textScrollList -q -ai J_allnClothSystemNode`;
    string $listNucleus[]=`textScrollList -q -ai J_allnNucleusNode`;
    J_CFXWorkFlow_init();
    
    //根据选择节点，选中列表节点
    for($i in $sel)
    {
    string $chTemp[]=`listRelatives -c $i`;
    if(stringArrayContains( $i, $listHair))
        textScrollList -e -si $i J_allHairSystemNode;
    if(stringArrayContains( $i, $listCloth))
        textScrollList -e -si $i J_allnClothSystemNode;
    if(stringArrayContains( $i, $listNucleus))
        textScrollList -e -si $i J_allnNucleusNode;
    if(stringArrayContains( $chTemp[0], $listHair))
        textScrollList -e -si $chTemp[0] J_allHairSystemNode;
    if(stringArrayContains( $chTemp[0], $listCloth))
        textScrollList -e -si $chTemp[0] J_allnClothSystemNode;
    if(stringArrayContains( $chTemp[0], $listNucleus))
        textScrollList -e -si $chTemp[0] J_allnNucleusNode;
    }
}
///启动后台跟踪程序,同步插件中和场景中的选择对象
global proc J_CFXWorkFlow_runScriptJob()
{
    int $sjId = `scriptJob -e "SelectionChanged" J_CFXWorkFlow_selectNode `;
    string $temp = ("scriptJob -k "+ $sjId);
    scriptJob -uid "J_CFXWorkFlow" $temp;

}
///选择列表中的节点
global proc J_CFXWorkFlow_selectitem(string $tList)
{
    string $temp1[]=`textScrollList -q -si $tList`;
    select $temp1;
}
//链接j living服务端，查看服务端状态
global proc J_connectWorker()
{
    string $ipPort=`textField -q -text J_ipPort`;
    print $ipPort;
    python("JpyModules.compute.J_getJobList('"+$ipPort+"')");
}
global proc J_CFXWorkFlow_init()
{
    textScrollList -e -ra  J_allHairSystemNode;
    textScrollList -e -ra  J_allnClothSystemNode;
    textScrollList -e -ra  J_allnNucleusNode;
    string $allHair[]=`ls -type hairSystem`;
    for ($i in $allHair)
    {
        textScrollList -e -a $i J_allHairSystemNode;
    }
    string $allCloth[]=`ls -type nCloth`;
    for ($i in $allCloth)
    {
        textScrollList -e -a $i J_allnClothSystemNode;
    }   
    string $allNuclues[]=`ls -type nucleus`;
    for ($i in $allNuclues)
    {
        textScrollList -e -a $i J_allnNucleusNode;
    }  
}
//J_CFXWorkFlow()