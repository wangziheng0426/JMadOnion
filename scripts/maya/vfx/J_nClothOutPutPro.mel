//Copyright (C) 2000-2011 
//作者：张千桔
//创建时间：2011-6-21
//版本：1.0.2
//修改记录：增加了错误反馈机制,增加文件转存
global proc J_nClothOutPutPro()
{//ui of cloth
string $apply_preset_dir;
string $sel_objs[]=`ls -sl`;
string $presets[]=`getFileList -folder "D:/SM/ncloth_rig/" -filespec "*.ncd"`;
if (`window -ex nClothPresetsOutPut`)
    {
    deleteUI -window nClothPresetsOutPut;
    }
window -title "布料预设导出工具"  -w 372 -h 460 -s 1 nClothPresetsOutPut;
    columnLayout -adjustableColumn 1 -cal "center" outPutColLy; 
    frameLayout -label "创建布料" -labelAlign "center" -w 370 -h 100 -borderStyle  "etchedIn" -cll 1 fl01;
        formLayout -nd 100 -w 365 -h 243 inPutFl;               
            //textField -tx "D:/SM/ncloth_rig" -width 300 pre_dir;
            //symbolButton -width 20 -image "navButtonBrowse.xpm"   -command prestes_dir brows;
            string $cbu01 =`button -al "center"  -w 90 -h 25 -l "创建布料"  -c create_nmesh_proc`;
            string $cbu02 =`button -al "center"  -w 90 -h 25 -l "创建碰撞"  -c create_passive_proc`;
            string $cbu03 =`button -al "center"  -w 90 -h 25 -l "取消碰撞"  -c diablecol_proc`;
            string $cbu04 =`button -al "center"  -w 90 -h 25 -l "选择元素"  -c selectmember_proc`;
            string $cbu05 =`button -al "center"  -w 90 -h 25 -l "点面约束"  -c pointToSuf_proc`;
            string $cbu06 =`button -al "center"  -w 90 -h 25 -l "元素约束"  -c pointTopoint_proc`;
            
        setParent ..;
    setParent ..;
    frameLayout -label "导入导出" -labelAlign "center" -w 370 -h 240 -borderStyle  "etchedIn" -cll 1 fl02;
        formLayout -nd 100 -w 365 -h 143 outPutFl;
        
                textField -tx "D:/SM/ncloth_rig" -width 300 pre_dir;
                symbolButton -width 20 -image "navButtonBrowse.xpm"   -command prestes_dir brows;
                string $bu01 =`button -al "center"  -w 90 -h 25 -l "导出布料信息"  -c outPutNCData`;
                string $bu02 =`button -al "center"  -w 90 -h 25 -l "添加布料标记"  -c addNClothMark`;
                string $bu03 =`button -al "center"  -w 90 -h 25 -l "帮助"  -c outPutHelp`;
        
                textScrollList  -ams 1 -w 175 -h 100 node_select;
                for ($node_temp in $sel_objs)
                        {
                        textScrollList -e -a $node_temp  node_select;   
                        }                       
                textScrollList -ams 1 -w 180 -h 100 presets_list;                                   
                for ($presets_temp in $presets)
                        {
                        textScrollList -e -a $presets_temp  presets_list;   
                        }
                string $bu05 =`button -al "center"  -w 90 -h 25 -l "导入布料信息"  -c inPutNCData`;
                string $bu06 =`button -al "center"  -w 90 -h 25 -l "刷新列表"  -c refrList`;
                string $bu07 =`button -al "center"  -w 90 -h 25 -l "从文件加载"  -c inPutNCDataN`;   
                //string $bu08 =`button -al "center"  -w 90 -h 25 -l "关闭"  -c "deleteUI nClothPresetsOutPut"`;              
        setParent ..;
    setParent ..;
    
    
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////-------------------------------------------k
//=============================================================================================================
    string $saveOutputClothPath =  `optionVar -q saveOutputClothPath`;       
    frameLayout    -l "创建布料缓存" -bs "etchedIn" -collapsable 1 -marginHeight 5 -marginWidth 20 frameCreateNclothCache;
        string $FTM_OptionColumn = `columnLayout  -rowSpacing 1`;
        string $floEE_N = `floatSliderGrp -cw3 90 60 100 -l "Evaluate every " -field true -min 0.0 -max 5.0 -v 1 -pre 3 -fieldMinValue -100.0 -fieldMaxValue 100.0 floatSliderGrpEvaluatEevery`;
        string $rowCD_Nc  =`rowColumnLayout  -nc 3 -cw 1 90 -cw 2 180 -cw 3 25 rowColumnLayoutNclothCache`;
        string $tT=`text -label "Cache Directory"`;
        textField  Nc_SavePath;
        if(`optionVar -q "s_createNcloth"`)
            textField -e -tx `optionVar -q "s_createNcloth"` Nc_SavePath;
        symbolButton  -image "navButtonBrowse.xpm" -command NclothSavePath symbolButtonImage_N ;
        setParent ..;       
        rowColumnLayout -numberOfRows 1 ;
        string $kB01=`button -l "选择所有布料" -w 90 -h 25 -c "SG_CK_nCloth_SeL_nSolver_M" convertnClothSeLnSolverButton`;
        string $kB02=`button -l "==>创建缓存" -w 90 -h 25 -c "doCreateNclothCache_M" convertCreateNclothCacheButton`; 
        string $kB03=`button -l " ★删除缓存★ " -w 90 -h 25 -c "cgDelCache" convertDeleteNclothCacheButton`;            

    setParent outPutColLy;

//======================================== 创建几何体缓存部分 ===============================================================
                string $saveOutputGeometryPath =  `optionVar -q saveOutputGeometryPath`;
                frameLayout    -l "创建集合体缓存" -bs "etchedIn" -collapsable 1 -marginHeight  5 -marginWidth 20 frameCreateGeometryCache;
                    columnLayout  -rowSpacing 1 ;
                        string $radFD_G=`radioButtonGrp -numberOfRadioButtons 2 -cw 1 90 -cw 2 95 -cw 3 150 -label "Mode（模式） " -labelArray2 "默认物理缓存" "已有缓存并修改" -select 1 radioButtonGeometryCacheMode`;
                        string $rowSE_G   =`rowColumnLayout -nc 3 -cw 1 90 -cw 2 60 -cw 3 60 rowColumnLayoutStartEndGeometry`;
                            string $textf_G = `text -label " Start/End "`;
                            floatField startFrameGeometry;
                            floatField -value 400 endFrameGeometry;
                            floatField -e -value `playbackOptions -q -min` startFrameGeometry;
                            floatField -e -value `playbackOptions -q -max` endFrameGeometry;
                        setParent ..; 
                        string $rowCD_G  =`rowColumnLayout  -nc 3 -cw 1 90 -cw 2 180 -cw 3 25 rowColumnLayoutGeometryCache`;
                            text -label "Geometry Cache ";
                            textField  G_SavePath;
                            if(`optionVar -q "s_GeometryPath"`)
                                textField -e -tx `optionVar -q "s_GeometryPath"` G_SavePath;
                            symbolButton  -image "navButtonBrowse.xpm" -command GeometrySavePath symbolButtonImage_G ;
                        setParent ..;
                        button  -l "△CreateGeometryCache△" -w 300 -h 25 -c "CreateGeometryCache_M" CreateGeoGeometryCacheButton;
                setParent outPutColLy;
//=====================================================================================================================/
                frameLayout    -l "缓存" -bs "etchedIn" -collapsable 1 -marginHeight  5 -marginWidth 20 frameImportCache;
                    columnLayout  -rowSpacing 1 ;
                        string $rowCD_I  =`rowColumnLayout  -nc 3 -cw 1 90 -cw 2 180 -cw 3 25 rowColumnLayoutImportCache`;
                            text -label "Import Cache";
                            textField  savePath;
                            if(`optionVar -q "s_importClothCache"`)
                                textField -e -tx `optionVar -q "s_importClothCache"` savePath;
                            symbolButton  -image "navButtonBrowse.xpm" -command savePath symbolButtonImage ;
                        setParent ..;

                        rowLayout -nc 2 -cw2 150 150 -cl2 "center" "center";
                            button  -l "★一键上缓存★" -w 150 -h 25 -c "importClothCacheMain" convertNewCacheButton;
                            button  -l "一键上缓存(新版本)" -w 150 -h 25 -c "importClothCacheMain_new" convertNewCacheButton_new;
                setParent outPutColLy;
            setParent ..;
        setParent ..;

        //disSelnucleus_M;
///////////////////////////////////////////////////////////////////////////////////////////-----------------------------------------------------------------






    ////////////////////////////////////////////////////////////////////////////////////////////////////////
        formLayout -e   
            -af $cbu01 "top" 3  -ap $cbu01 "left" 0 1    -ap $cbu01 "right" 0 33            
            -af $cbu02 "top" 3  -ap $cbu02 "left" 0 34   -ap $cbu02 "right" 0 66                                
            -af $cbu03 "top" 3  -ap $cbu03 "left" 0 67   -ap $cbu03 "right" 0 99    
            
            -ac $cbu04 "top" 15 $cbu01 -ap $cbu04 "left" 0 1     -ap $cbu04 "right" 0 33            
            -ac $cbu05 "top" 15 $cbu01 -ap $cbu05 "left" 0 34    -ap $cbu05 "right" 0 66                                
            -ac $cbu06 "top" 15 $cbu01 -ap $cbu06 "left" 0 67    -ap $cbu06 "right" 0 99 
        inPutFl;
        formLayout -e   
            -af pre_dir "top" 15 -ap pre_dir "left" 0 1 -ap pre_dir "right" 0 85 
            -af brows "top" 15  -ac brows "left" 5 pre_dir   -ap brows "right" 0 98  
            -ac $bu01 "top" 15 pre_dir -ap $bu01 "left" 0 1   -ap $bu01 "right" 0 33            
            -ac $bu02 "top" 15 pre_dir -ap $bu02 "left" 0 34    -ap $bu02 "right" 0 66                              
            -ac $bu03 "top" 15 pre_dir -ap $bu03 "left" 0 67    -ap $bu03 "right" 0 99 
            
            -ac node_select "top" 3 $bu03   -af node_select "left" 0    -ap node_select "right" 0 50
                
            -ac presets_list "top" 3 $bu03  -ac presets_list "left" 0 node_select   -ap presets_list "right" 0 100
        
            -ac $bu05 "top" 5 node_select -ap $bu05 "left" 0 1  -ap $bu05 "right" 0 33          
            -ac $bu06 "top" 5 node_select -ap $bu06 "left" 0 34 -ap $bu06 "right" 0 66                              
            -ac $bu07 "top" 5 node_select -ap $bu07 "left" 0 67 -ap $bu07 "right" 0 99  
            //-ac $bu08 "top" 5 $bu07       -ap $bu08 "left" 0 1    -ap $bu08 "right" 0 99 
        outPutFl;
        
        /*formLayout -e 
    
            -ac $kB01 "top" 5 $tT -ap $kB01 "left" 0 1  -ap $kB01 "right" 0 33          
            -ac $kB02 "top" 5 $tT -ap $kB02 "left" 0 34 -ap $kB02 "right" 0 66                              
            -ac $kB03 "top" 5 $tT -ap $kB03 "left" 0 67 -ap $kB03 "right" 0 99  
            
        makeCache;*/
    showWindow;
}
    
    
    
global proc prestes_dir()////////////////////////////////////////设定路径
{   string $presets[];
  string $apply_preset_dir = `textField -query -fileName pre_dir`;
    if (`filetest -d $apply_preset_dir`)
    {
        workspace -dir $apply_preset_dir;
    }
    else
    {
        string  $workspace = `workspace -query -fullName`;
        setWorkingDirectory($workspace, "", "");
    }

    fileBrowserDialog -m 4 -fc  "savedir" -an "findPath";
}
global proc int savedir(string $filename,string $fileType)
{
    textField -e -tx $filename pre_dir;
    return 0;
}////////////////////////////////////////////////////////////////设定路径

global proc  addNClothMarkProc(string $markFile)////////////////添加标记
{
    string $ls_ch[]=`ls -sl`;
    string $sel_nameSpace="";
    int $fileIdOfnCloth=`fopen $markFile "r"`;
    string $my_file=`fgetword $fileIdOfnCloth`;
    string $nameOfNucleu=$my_file;
    if (`gmatch $ls_ch[0] "*:*"`)
    {
        string $buffer[];
        tokenize $ls_ch[0] ":" $buffer;
        $sel_nameSpace=($buffer[0]+":");        
        $nameOfNucleu=($sel_nameSpace+$my_file);
    }
    for ($temp=0;size($my_file)>0 && $temp<8000 ; $temp++)
    {
        $my_file=`fgetword $fileIdOfnCloth`;
        
    if ($my_file=="nClothNode")//判定为布料节点
        {
            $my_file=`fgetword $fileIdOfnCloth`;
            $nClothNodeName=($sel_nameSpace+$my_file);
            $my_file=`fgetword $fileIdOfnCloth`;
            $nClothMeshName=($sel_nameSpace+$my_file);
            string $allMesh[]=`ls -type mesh`;
            if (`objExists $nClothMeshName`)
                {for ($currentMeshTemp in $allMesh)
                    {   
                        string $allMeshParent[]=`listRelatives -p $currentMeshTemp`;
                        if(`attributeExists "nClothMark" $allMeshParent[0]`==0)
                            {
                                addAttr -ln "nClothMark"  -dt "string" $allMeshParent[0];
                            }
                        setAttr -type "string" ($allMeshParent[0]+".nClothMark") $markFile;
                    }
                    
                }
        print ($nClothMeshName+"\n");
        break;
            }
    }
      confirmDialog -m "布料标记添加完成" -b "知道了" -t "提示";
    fclose $fileIdOfnCloth;//记录链接关系
    }
global proc  addNClothMark()
    {
        string $ls_ch1=`file -q  -sn`;/////////////////////确定角色名称
        string $buffer0[];
        tokenize $ls_ch1 "/" $buffer0;
        string $buffer1[];
        tokenize $buffer0[size($buffer0)-1]"." $buffer1;///确定角色名称
        string $sel_objs[]=`ls -sl`;
        string $getMark=(`textField -q -tx pre_dir`+"/"+$buffer1[0]+".ncd");
        addNClothMarkProc($getMark);
    }///////////////////////////////////////////////////////////////添加标记

///////////////////////////////////////////////////////////输出布料信息
global proc outPutNCData()
{
    string $allNcloth[]=`ls  -type nCloth`;
    string $allNrigid[]=`ls  -type nRigid`;
    string $nucleusNode[]=`listConnections -t nucleus $allNcloth[0]`;

    string $nDCA0[]={
             "intermediateObject" , 
             "template" , 
             "isDynamic" , 
             "enable" , 
             "constraintMethod" , 
             "connectionMethod" , 
             "constraintRelation" , 
             "componentRelation" , 
             "connectionUpdate" , 
             "connectWithinComponent" , 
             "connectionDensity" , 
             "displayConnections" , 
             "strength" , 
             "restLengthMethod" , 
             "restLength" , 
             "restLengthScale" , 
             "tangentStrength" , 
             "bend" , 
             "bendStrength" , 
             "bendBreakAngle" , 
             "glueStrength" , 
             "glueStrengthScale" , 
             "force" , 
             "motionDrag" , 
             "dropoff" , 
             "dropoffDistance" , 
             "maxDistance" , 
             "damp" , 
             "friction" , 
             "localCollide" , 
             "collideWidthScale" , 
             "excludeCollisions" , 
             "maxIterations" , 
             "minIterations" , 
             "iterations" , 
             "collide" };/////存储约束属性
    string $nClothAttr[]={ "visibility", 
             "intermediateObject",
             "compressionResistance", 
             "stretchResistance", 
             "isDynamic" , 
             "thickness" , 
             "bounce" , 
             "friction" , 
             "damp" , 
             "stickiness" , 
             "collisionFlag" , 
             "selfCollisionFlag" , 
             "maxSelfCollisionIterations" , 
             "maxIterations", 
             "pointMass" , 
             "collide" , 
             "selfCollide" , 
             "collisionLayer" , 
             "selfAttract" , 
             "rigidity", 
             "deformResistance" , 
             "inputMeshAttract" , 
             "inputAttractMap" , 
             "evaluationOrder" , 
             "stretchDamp" , 
             "selfCollideWidthScale" , 
             "selfCrossoverPush" , 
             "selfTrappedCheck" ,
             "inputAttractMapType ",
             "lift" , 
             "scalingRelation",
             "drag" , 
             "tangentialDrag"  };/////存储布料属性
    string $nRigidAttr[]={
             "isDynamic" , 
             "thickness" , 
             "bounce" , 
             "friction" , 
             "collisionFlag" , 
             "selfCollisionFlag" , 
             "collide" , 
             "selfCollide" , 
             "collisionLayer"};/////存储碰撞属性
/////////////////////////////记录布料和碰撞体
    string $ls_ch1=`file -q  -sn`;/////////////////////确定角色名称
    string $buffer0[];
    tokenize $ls_ch1 "/" $buffer0;
    string $buffer1[];
    tokenize $buffer0[size($buffer0)-1]"." $buffer1;///确定角色名称
    string $pathTemp0=(`textField -q -tx pre_dir`+"/");
    int $fileIdOfnCloth=`fopen ($pathTemp0+$buffer1[0]+".ncd") "w"`;
    string $storeNClothNode="";
    if (`size($allNcloth)`)
        {string $nucleusNode[]=`listConnections -t nucleus $allNcloth[0]`;
    $storeNClothNode+=($nucleusNode[0]+"\r\n");}
    for ($nClothArray in $allNcloth)/////记录所有布料节点
        {
            string $NclothMesh[]=`listConnections -t mesh  -d 0 $nClothArray`;
            //$NclothMesh[0]=`longNameOf $NclothMesh[0]`;
            $storeNClothNode+=("nClothNode"+" "+$nClothArray+" "+$NclothMesh[0]+"\r\n"+"   attrOfThisNode:"+"\r\n");
            for($attrTemp in $nClothAttr)
                {
                    string $getAttrTemp=`getAttr ($nClothArray+"."+$attrTemp)`;
                    $storeNClothNode+=("             "+$nClothArray+"."+$attrTemp+" "+$getAttrTemp+"\r\n");
                }
            $storeNClothNode+=("   endOfTheAttrs"+"\r\n");
        }   
    for ($nClothArray in $allNrigid)/////记录所有碰撞节点
        {
        string $NRigidMesh[]=`listConnections -t mesh  -d 0 $nClothArray`;
        //$NRigidMesh[0]=`longNameOf $NRigidMesh[0]`;
        $storeNClothNode+=("nRigidNode"+" "+$nClothArray+" "+$NRigidMesh[0]+"\r\n"+"   attrOfThisNode:"+"\r\n");
            for($attrTemp in $nRigidAttr)
                {
                string $getAttrTemp=`getAttr ($nClothArray+"."+$attrTemp)`;
                $storeNClothNode+=("             "+$nClothArray+"."+$attrTemp+" "+$getAttrTemp+"\r\n");
                }
        $storeNClothNode+=("   endOfTheAttrs"+"\r\n");
        };/////记录所有碰撞节点
///////////////////////////////////记录所有约束属性
    string $allNdynamicConstraint[]=`ls -type dynamicConstraint`;
    for ($nDynamicArray in $allNdynamicConstraint)
    {           
        string $nCtemp[]=`listRelatives -p $nDynamicArray`;
        $storeNClothNode+=("nDynamicConstraint"+" "+$nDynamicArray+" "+$nCtemp[0]+"\r\n"+"   attrOfThisNode:"+"\r\n");
        for($attrTemp in $nDCA0)
            {

                string $getAttrTemp=`getAttr   ($nDynamicArray+"."+$attrTemp)`;
                $storeNClothNode+= ("             "+$nDynamicArray+"."+$attrTemp+" "+$getAttrTemp+"\r\n");
            }
        int $dropTemp[]=`getAttr -mi ($nDynamicArray+".strengthDropoff")`;/////记录衰减属性
        for($attrTemp in $dropTemp)
            {
                string $getAttrTemp0=`getAttr   ($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_Position")`;
                string $getAttrTemp1=`getAttr   ($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_FloatValue")`;
                string $getAttrTemp2=`getAttr   ($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_Interp")`;
                $storeNClothNode+= ("             "+($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_Position")+" "+$getAttrTemp0+"\r\n");
                $storeNClothNode+= ("             "+($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_FloatValue")+" "+$getAttrTemp1+"\r\n");
                $storeNClothNode+= ("             "+($nDynamicArray+"."+"strengthDropoff["+$attrTemp+"].strengthDropoff_Interp")+" "+$getAttrTemp2+"\r\n");
            }
            $storeNClothNode+=("   endOfTheAttrs"+"\r\n");
        
    }
///////////////////////////////////记录所有约束属性
///////////////////////////////////记录所有约束元素节点
string $nComponentNodes[]=`ls -type nComponent`;
for ($nDynamicArray in $nComponentNodes)
    {
    string $nCtemp[]=`listRelatives -p $nDynamicArray`;
    $storeNClothNode+=("nComponent"+" "+$nDynamicArray+" "+$nCtemp[0]+"\r\n"+"   attrOfThisNode:"+"\r\n");
    float $getAttrTemp0=`getAttr ($nDynamicArray+".elements")`;
    float $getAttrTemp1=`getAttr ($nDynamicArray+".componentType")`;
    $storeNClothNode+=("             "+$nDynamicArray+".elements"+" "+$getAttrTemp0+"\r\n");
    $storeNClothNode+=("             "+$nDynamicArray+".componentType"+" "+$getAttrTemp1+"\r\n");
    int $ciArray[]=`getAttr -mi ($nDynamicArray+".componentIndices")`;
    float $ciArrayValue[] =`getAttr ($nDynamicArray+".componentIndices")`;
    for($cTemp=0;$cTemp<`size($ciArrayValue)`;$cTemp++)
        {
            $storeNClothNode+=("             "+$nDynamicArray+".componentIndices["+$ciArray[$cTemp]+"] "+$ciArrayValue[$cTemp]+"\r\n");
        }
    $storeNClothNode+=("   endOfTheAttrs"+"\r\n");
    };
///////////////////////////////////记录所有约束元素节点
///////////////////////////////////记录所有约束元素节点链接关系
    $storeNClothNode+=("connectionsOfAllnComponentNode "+"\r\n");
    for ($nDynamicArray in $nComponentNodes)//记录链接关系
        {
            string $nDCS0[]=`listConnections -p 1  -c 1 -s 0 $nDynamicArray`;////nDCS:nDynamicComponentConnections
            string $nDCS1[]=`listConnections -p 1  -c 1 -d 0 $nDynamicArray`;////nDCS:nDynamicComponentConnections
            {$storeNClothNode+=("             "+$nDCS0[0]+" "+$nDCS0[1]+"\r\n"+"             "+$nDCS1[1]+" "+$nDCS1[0]+"\r\n");}
            
        }
    for ($nDynamicArray in $allNdynamicConstraint)
        {
            string $nDCS0[]=`listConnections -p 1  -c 1 -s 0 $nDynamicArray`;////nDCS:nDynamicConstraintConnections
            string $nDCS1[]=`listConnections -p 1  -c 1 -d 0 $nDynamicArray`;////nDCS:nDynamicComponentConnections
            {$storeNClothNode+=("             "+$nDCS0[0]+" "+$nDCS0[1]+"\r\n"+"             "+$nDCS1[1]+" "+$nDCS1[0]+"\r\n");}
        }   
///存储点权重
    $storeNClothNode+=("   endOfConnections"+"\r\n");
    for ($nClothArray in $allNcloth)
            {
            
            float $inputAttractAttr[]=`getAttr  ($nClothArray+".inputAttractPerVertex")`;
            string $saveInputAttractAttr="";
            int $pointCount=`size($inputAttractAttr)`;
            if ($pointCount>0)
            {$storeNClothNode+=("   InPutMap "+"\r\n");
                for($temp in $inputAttractAttr)
                {   $saveInputAttractAttr+=($temp+" ");}
            $storeNClothNode+=("             "+$nClothArray+".inputAttractPerVertex"+" "+$pointCount+" "+$saveInputAttractAttr+"\r\n");
            $storeNClothNode+=("   endOfInPutMap"+"\r\n");
            }
            
        }///存储点权重
    fwrite $fileIdOfnCloth ($storeNClothNode+"end");
    fclose $fileIdOfnCloth;//记录链接关系
    confirmDialog -m "布料设置保存完成" -b "知道了" -t "提示";
}
///////////////////////////////////////////////////////////输出布料信息
///////////////////////////////////////////////////////////输入布料信息
global proc inPutNCDataProc(string $pathTemp)
{
    /////////////////获取名字空间
    string $ls_ch[]=`ls -sl`;

    string $sel_nameSpace="";
    string $sel_nameSpaceT="";//转存文件名
        string $localPathTemp=`internalVar -ups`;///文件转存
        string $orgFile = $pathTemp;
        string $localFile=($localPathTemp+$sel_nameSpaceT+".nec");
        sysFile -copy $localFile $orgFile;
        $pathTemp=$localFile;///......//////////////文件转存
    int $fileIdOfnCloth=`fopen $pathTemp "r"`;
    string $my_file=`fgetword $fileIdOfnCloth`;
    string $nameOfNucleu=$my_file;
    if (`gmatch $ls_ch[0] "*:*"`)
    {
        string $buffer[];
        tokenize $ls_ch[0] ":" $buffer;
        $sel_nameSpace=($buffer[0]+":");
        $sel_nameSpaceT=($buffer[0]);
        $nameOfNucleu=($sel_nameSpace+$my_file);
    }
    if (`objExists  $nameOfNucleu`!=1 )//////////判定解算器
        {
            createNode nucleus -n $nameOfNucleu;
            connectAttr ("time1.outTime" ) ($nameOfNucleu+".currentTime");
        }
    else if (`nodeType $nameOfNucleu`!="nucleus")
        {
            rename $nameOfNucleu ($nameOfNucleu+"_rn");
            createNode nucleus -n $nameOfNucleu;
            connectAttr ("time1.outTime" ) ($nameOfNucleu+".currentTime");
        }//////////////////////////////////////判定解算器
    

        string $grpOfAllnNodes=`createNode transform -n ($sel_nameSpace+"AllnNodes")`;
int $nClothCount=0;//属性链接计数缓存
    string $errorRec;//错误报告记录
for ($temp=0;size($my_file)>0 && $temp<80000 ; $temp++)
    {
        $my_file=`fgetword $fileIdOfnCloth`;
        
    if ($my_file=="nClothNode")//判定为布料节点
        {$nClothCount++;
            $my_file=`fgetword $fileIdOfnCloth`;
            $nClothNodeName=($sel_nameSpace+$my_file);
            $my_file=`fgetword $fileIdOfnCloth`;
            $nClothMeshName=($sel_nameSpace+$my_file);
            if (`objExists $nClothMeshName`==0)
            {
                print ($nClothMeshName+"不存在\n");$errorRec+=($nClothMeshName+"不存在\n");
                polyCube -n $nClothMeshName;
            }
            
                select $nClothMeshName;
                createNCloth 0;
                string $nClothNodeTemp[]= `listHistory $nClothMeshName`;/////获取布料outcloth节点名称
                string $TranslateClothTemp[]=`listRelatives -p $nClothNodeTemp[1]`;//////获取布料位移节点名称
                                        
                $nClothNodeTemp[0]=`rename  $nClothNodeTemp[0] ($nClothMeshName+"_outcloth")`;
                $TranslateClothTemp[0]=`rename  $TranslateClothTemp[0] ($nClothMeshName+"_cloth")`;
                string $nClothNodeTemp0[]=`listRelatives -c $TranslateClothTemp[0]`;
                rename  $nClothNodeTemp0[0] $nClothNodeName;
    
                string $breakConnTemp[]=`listConnections -c 1 -p 1 -t  nucleus -s 0 $nClothNodeName`;
                parent $TranslateClothTemp[0] $grpOfAllnNodes;
                print ($nClothNodeName+"\n");
                if (`size($breakConnTemp)`==4)
                {disconnectAttr $breakConnTemp[0] $breakConnTemp[1];disconnectAttr $breakConnTemp[2] $breakConnTemp[3];}
                
                if(`isConnected ($nClothNodeName+".currentState") ($nameOfNucleu+".inputActive["+$nClothCount+"]")`==0)
                {connectAttr -f ($nClothNodeName+".currentState") ($nameOfNucleu+".inputActive["+$nClothCount+"]");}
                if(`isConnected ($nClothNodeName+".startState") ($nameOfNucleu+".inputActiveStart["+$nClothCount+"]")`==0)
                {connectAttr -f ($nClothNodeName+".startState") ($nameOfNucleu+".inputActiveStart["+$nClothCount+"]");}
                if(`isConnected ($nameOfNucleu+".startFrame") ($nClothNodeName+".startFrame")`==0)
                {connectAttr -f ($nameOfNucleu+".startFrame") ($nClothNodeName+".startFrame");}
                if(`isConnected ($nameOfNucleu+".outputObjects["+$temp+"]") ($nClothNodeName+".nextState")`==0)
                {connectAttr -f ($nameOfNucleu+".outputObjects["+$temp+"]") ($nClothNodeName+".nextState");}
                print ($nClothMeshName+" finish \n");
        }////////////////////////////判定为布料节点
    else if ($my_file=="nRigidNode")////判定被动碰撞体节点
        {   $nClothCount++; 
            $my_file=`fgetword $fileIdOfnCloth`;
            $nRigidNodeName=($sel_nameSpace+$my_file);
            $my_file=`fgetword $fileIdOfnCloth`;
            $nRigidMeshName=($sel_nameSpace+$my_file);
            if (`objExists $nRigidMeshName`==0)
            {
                print ($nRigidMeshName+"不存在\n");$errorRec+=($nRigidMeshName+"不存在\n");
                polyCube -n $nRigidMeshName;
            }
                select $nRigidMeshName;
                string $nRigidNodeTemp[]=`makeCollideNCloth`;
                rename  $nRigidNodeTemp[0] $nRigidNodeName;
                string $breakConnTemp[]=`listConnections -c 1 -p 1 -t  nucleus -s 0 $nRigidNodeName`;
                string $tempParentOfnRigid[]=`listRelatives -p $nRigidNodeName`;
                parent $tempParentOfnRigid[0] $grpOfAllnNodes;
                if (`size($breakConnTemp)`==4)
                {disconnectAttr $breakConnTemp[0] $breakConnTemp[1];
                disconnectAttr $breakConnTemp[2] $breakConnTemp[3];}
                
                if(`isConnected ($nameOfNucleu+".startFrame") ($nRigidNodeName+".startFrame")`==0)
                {connectAttr -f ($nameOfNucleu+".startFrame") ($nRigidNodeName+".startFrame");}
                if(`isConnected ($nRigidNodeName+".startState") ($nameOfNucleu+".inputPassiveStart["+$nClothCount+"]")`==0)
                {connectAttr -f ($nRigidNodeName+".startState") ($nameOfNucleu+".inputPassiveStart["+$nClothCount+"]");}
                if(`isConnected ($nRigidNodeName+".currentState") ($nameOfNucleu+".inputPassive["+$nClothCount+"]")`==0)
                {connectAttr -f ($nRigidNodeName+".currentState") ($nameOfNucleu+".inputPassive["+$nClothCount+"]");}
                print ($nRigidMeshName+"finish \n");
            
        }/////////////////////////////////判定被动碰撞体节点
    else if ($my_file=="nDynamicConstraint")/////判定约束
        {
            $my_file=`fgetword $fileIdOfnCloth`;
            $nDynamicConstraintShapeName=($sel_nameSpace+$my_file);
            $my_file=`fgetword $fileIdOfnCloth`;
            $nDynamicConstraintTranName=($sel_nameSpace+$my_file);
            string $createNodeTemp;
            if (`objExists  $nDynamicConstraintShapeName`!=1 )
                {
                    $createNodeTemp=`createNode dynamicConstraint -n $nDynamicConstraintShapeName`;
                    string $trNode[]=`listRelatives -p $createNodeTemp`;
                    rename $trNode[0] $nDynamicConstraintTranName;
                    parent $nDynamicConstraintTranName $grpOfAllnNodes;
                }
            else if (`nodeType $nDynamicConstraintShapeName`!="dynamicConstraint")
                {
                    rename $nDynamicConstraintShapeName ($nDynamicConstraintShapeName+"_rn");
                    $createNodeTemp=`createNode dynamicConstraint -n $nDynamicConstraintShapeName`;
                    string $trNode[]=`listRelatives -p $createNodeTemp`;
                    rename $trNode[0] $nDynamicConstraintTranName;
                    parent $nDynamicConstraintTranName $grpOfAllnNodes;
                }
            connectAttr time1.outTime   ($nDynamicConstraintTranName+".currentTime");   
    print ($nDynamicConstraintTranName+" \n");
        }
    else if ($my_file=="nComponent")/////判定约束元素
        {
            $my_file=`fgetword $fileIdOfnCloth`;
            $nComponentName=($sel_nameSpace+$my_file);
            if (`objExists  $nComponentName`!=1 )
                {
                    createNode nComponent -n $nComponentName;
                }
            else if (`nodeType $nComponentName`!="nComponent")
                {
                    rename $nComponentName ($nComponentName+"_rn");
                    createNode nComponent -n $nComponentName;
                }
        print "nComponent finish \n";
        }
    else if ($my_file=="attrOfThisNode:")//导入属性
        {
        for ($temp=0;$my_file!="endOfTheAttrs" && $temp<80000;$temp++)  
            {
                    if ($temp==0){$my_file=`fgetword $fileIdOfnCloth`;}
                    string $attrsOfNode=($sel_nameSpace+$my_file);
                    $my_file=`fgetword $fileIdOfnCloth`;
                    
                    float $attrsOfNodeValue=$my_file;
                    //string $bufferX[];
                    //$numTokens = `tokenize $attrsOfNode "." $bufferX`;
                    //if(`attributeExists $bufferX[1] $bufferX[0]`)
                    setAttr $attrsOfNode $attrsOfNodeValue;
                    //print ($attrsOfNode +" "+$attrsOfNodeValue+"\n");
                    $my_file=`fgetword $fileIdOfnCloth`;
            }
        }////////////////////////////////导入属性
        
        else if ($my_file=="connectionsOfAllnComponentNode")/////链接属性
        {
            for ($temp=0;$my_file!="endOfConnections" && $temp<80000;$temp++)   
            {
                if ($temp==0)
                    {$my_file=`fgetword $fileIdOfnCloth`;}
                string $connections0=($sel_nameSpace+$my_file);
                if ($my_file!="endOfConnections")
                {
                    $my_file=`fgetword $fileIdOfnCloth`;
                    string $connections1=($sel_nameSpace+$my_file);
                    
                    if(`isConnected $connections0 $connections1`==0)
                        {
                        connectAttr -f $connections0 $connections1;
                        }
                    $my_file=`fgetword $fileIdOfnCloth`;
                }
            }
        }
        
        
        else if ($my_file=="InPutMap")/////权重属性
            {
                string $nodeNameTemp="";
                for ($temp=0;$my_file!="endOfInPutMap" && $temp<80000;$temp++)  
                    {
                        if ($temp==0)
                            {
                                $my_file=`fgetword $fileIdOfnCloth`;
                                $nodeNameTemp=($sel_nameSpace+$my_file);
                                $my_file=`fgetword $fileIdOfnCloth`;
                            }
                        
                        $nodeNameTemp+=(" "+$my_file);
                        $my_file=`fgetword $fileIdOfnCloth`;
    
                    }
                    //print ("$nodeNameTemp:");
                    //print $nodeNameTemp;
                    eval ("setAttr -type doubleArray "+$nodeNameTemp);

            print "weight finish \n";
            }
    }       

    fclose $fileIdOfnCloth;//记录链接关系
    confirmDialog -m ($errorRec+"布料设置添加完成") -b "知道了" -t "提示";
    print "finish \n";
    }
    
//、、、、、、 创建布料   
            global proc create_nmesh_proc()
                {
                    string $rn_obj[]= `ls -sl`;
                    string $his_list[];
                    string $get_res[];
                    for($obj_nc in $rn_obj)
                        {
                        select $obj_nc;
                        string $nClothNode[]=`createNCloth 0`;  
                        string $tr[]=`listRelatives -p $nClothNode[0]`;  
                        rename $tr[0] ($obj_nc+"_nClo");
                        $get_res= `listHistory $obj_nc`;
                        $his_list=`listRelatives -p $get_res[1]`;
                        rename  $his_list[0] ($obj_nc+"_cloth");
                        rename  $get_res[0] ($obj_nc+"_outcloth");
                            
                        }
                }   
////////////////////////////////////////////////////创建碰撞
//create passive collider
            global proc create_passive_proc()
                {
                    string $pa_obj[]= `ls -sl`;
                    string $nr_list[]= `makeCollideNCloth`;
                    int $count_pa=0;
                    for ($obj_nc in $pa_obj)
                        {
                            setAttr ($nr_list[$count_pa]+".pushOutRadius") 0.002;
                            setAttr ($nr_list[$count_pa]+".thickness") 0.002;
                            rename  $nr_list[$count_pa] ($obj_nc+"_nRig");
                            $count_pa=$count_pa+1;
                        }


                }
/////////////////////////////////////////   取消碰撞
global proc diablecol_proc()
    {createNConstraint disableCollision 0;} 
//select member
global proc selectmember_proc()
{dynamicConstraintMembership "select";}

//pointToSuf
global proc pointToSuf_proc()
{createNConstraint pointToSurface 0;}

//pointTopoint
global proc pointTopoint_proc()
{createNConstraint pointToPoint 0;} 
    
////////////////////    
global proc inPutNCData()
{   string $sel_objTemp[]=`ls -sl`;
    string $findPath;
    if (`size($sel_objTemp)`==0)
        {confirmDialog -m "请选择一个带布料信息的物体" -b "知道了" -t "错误";}
    else if(`attributeExists "nClothMark" $sel_objTemp[0]`)
        {
            $findPath=`getAttr   ($sel_objTemp[0]+".nClothMark")`;
            inPutNCDataProc($findPath);
        }
    else{confirmDialog -m "选择的物体没有布料信息" -b "知道了" -t "错误";}
        
}
///////////////////////////////////////////////////


global proc inPutNCDataN()
{
string $findPath[]=`fileDialog2 -fileFilter "All Files (*.*)"`;

inPutNCDataProc($findPath[0]);
}


///////////////////////////////////////////////////////////输入布料信息
/////////////////////////////////////////////////////////刷新列表
global proc refrList()
{   
    string $selObjTemp[]=`ls -sl`;
    string $NClothMesh[];
    int $NMeshCountTemp0=0;
    for ($temp=0;$temp<size($selObjTemp);$temp++)
        {
            if (`attributeExists "nClothMark" $selObjTemp[$temp]`)
                {
                    $NClothMesh[$NMeshCountTemp0]=$selObjTemp[$temp];
                    $NMeshCountTemp0++;
                }
        }

    string $chNSTemp[];
    string $allMeshTemp[]=`ls -sl`;
    int $NMeshCountTemp1=1;
    for ($temp=0;$temp<size($allMeshTemp);$temp++)
        {if (`attributeExists "nClothMark" $allMeshTemp[$temp]`)
            {
                string $buffer[];
                tokenize $allMeshTemp[$temp] ":" $buffer;
                $chNSTemp[$temp]=$buffer[0];
            }
        }
    string $presets[]=stringArrayRemoveDuplicates($chNSTemp);
    textScrollList -e -ra  node_select;
        for ($node_temp in $NClothMesh)
                        {
                        textScrollList -e -a $node_temp  node_select;   
                        }                       
    textScrollList -e -ra  presets_list;    
        for ($presets_temp in $presets)
                        {
                        textScrollList -e -a $presets_temp  presets_list;   
                        }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////刷新列表
//////////////////////////////////////////////////////////////////////////////////////////////////////帮助
global proc outPutHelp()
{
    confirmDialog -m "导出使用方法\n第一步：将角色的布料约束等制作完成\n第二步：按照生产规范将场景清理干净\n第三步：点击“导出布料信息”按钮完成操作.\n第四步：打开没有布料设置的文件，点击“添加布料标记”。\n第五步：标记添加完成以后保存文件上传nxn。\n导入使用方法\n第一步：选择要添加布料信息的角色身上的任意一个模型\n第二步：点击“导入布料信息”完成操作。\n"
    -b "知道了" -t "帮助";
}

/////////////////////////////////////////////////帮助
///////////////////////////////////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
global proc SG_CK_nCloth_SeL_nSolver_M()
{
    string $nCloth_Sel[] = `ls -type "nCloth"`;
    if(`size($nCloth_Sel)`>=1)
    {
        string $nCloth_Sel_Con[] = `listConnections $nCloth_Sel`;  
        string $nCloth_Sel_meshes[] = `listRelatives -pa -ni -s -type "mesh" $nCloth_Sel_Con`;
        select -r $nCloth_Sel_meshes;
        pickWalk -d up;
    }
    else
    print "=============>场景中没有nCloth";
}
//=============指定预设==================================================================================================================
global proc applyPresetNcloth_M()
{
    string $presetNcloth[] =`ls-sl`;
    for($eh_pn in $presetNcloth)
    {
        string $preNc_cloth = $eh_pn + "_cloth";
        string $preNc_clothShape = $eh_pn + "_clothShape";

        string $getPreset_v =`optionMenu -q -v optionMenuNclothPreset`;

        string $getPresetTemp ="'"+ $getPreset_v +"'[:'"+ $getPreset_v +"'.find('.mel')"+"]";
        string $getPresetName= `python($getPresetTemp)`;

        string $applyPresetCmd = "applyPresetToNode \"";    
            $applyPresetCmd +=$preNc_clothShape;
            $applyPresetCmd +="\" \"\" \"\" \"";       
            $applyPresetCmd +=$getPresetName;  
            $applyPresetCmd +="\" 1;";
            eval ($applyPresetCmd);
    }
}

//============Win窗口menuItem放下面来写===================================================================
global proc gelPresetMel_Menu()
{                                                                                                  
    string $myPresetsDir = `internalVar -userPresetsDir`;                                      //本地  
    string $pathToPreset = ($myPresetsDir + "attrPresets/nCloth/" );                           //本地 
    //getFileList -folder $pathToPreset  -filespec "*.mel";                                    //本地


    //string $pathToPreset = "//192.168.1.13/fx/Presets/";                                      //T盘
    string $gelPresetMel[]=`getFileList -folder $pathToPreset  -filespec "*.mel"`;
    for($ehMel in $gelPresetMel)
    {       
        menuItem -label $ehMel;
    }
}
//===========================恢复默认============================================
global proc resetUI()                
{
    floatSliderGrp
        -e
        -precision 3
        -value 0.002
        FloatThickness;

    floatSliderGrp
        -e
        -precision 3
        -value 0.5  
        FloatFriction;

    floatSliderGrp       
        -e 
        -precision 3
        -value 1.000
        floatSliderGrpEvaluatEevery;

    radioButtonGrp -e 
        -select 1
        radioButtonGeometryCacheMode;
         
    rowColumnLayout 
        -e 
        -vis 0 
        rowUs_tool;

    floatField -e -value `playbackOptions -q -min` startFrameGeometry;
    floatField -e -value `playbackOptions -q -max` endFrameGeometry;
}

//=========================单显示物体===================================================

global proc isolateSel( ) 
{
    global string $gDynPaintEditorName;
    string $currentPanel = `getPanel -underPointer`;
    if ("" == $currentPanel) 
    {
            $currentPanel = `getPanel -withFocus`;
    }
    if ("" != $currentPanel) 
    {
        string $panelType = `getPanel -typeOf $currentPanel`;
        if ($panelType ==  "modelPanel")
        {
            int $state=`isolateSelect -q -state $currentPanel`; 
            $state=!$state;
            enableIsolateSelect $currentPanel $state;
            isolateSelect -state   $state  $currentPanel;
        } 
        else if (`isTrue "MayaCreatorExists"` && `scriptedPanel -exists $currentPanel` 
                    && `scriptedPanel -query -type $currentPanel` == "dynPaintScriptedPanelType") 
        {
            dynPaintEditor -edit -displayTextures 0 -displayAppearance "smoothShaded"
            -displayLights "default" $gDynPaintEditorName;
        }
    }
}
//==============查看选择的物体===================================================================================

global proc disSelObj_M()
{
    string $selObjName[] =`ls-sl`;
    textScrollList  -e -ra  displaySelObj;
    for ($i in $selObjName)
    {
        textScrollList  -e -append  $i displaySelObj;
    }
    if (size($selObjName) == 0)
    {
        textScrollList  -e -append "Select Object to Ncloth or Edit" displaySelObj;
    }
}

//==============识别nucleus==========================================================================================
/*
global proc disSelnucleus_M()
{

    string $selNucleus[] =`ls -type "nucleus"`;
    textScrollList -e -ra x_OnFileList;
    textScrollList -e -ra x_OffFileList;
    for($eachNs in $selNucleus)
    {
        int $getNum =`getAttr ($eachNs + ".enable")`;
        if($getNum==0)
        {
            textScrollList -e -append $eachNs x_OffFileList;  
        }
        if($getNum==1)
        {
            textScrollList -e -append $eachNs x_OnFileList;  
        }


    }

}*/
//================打开场景关nucleus=========================================================================================

global proc Setnucleus0_M()
{
    string $selNucleus[] =`ls -type "nucleus"`;
    textScrollList -e -ra x_OnFileList;
    textScrollList -e -ra x_OffFileList;
    for($eachNs in $selNucleus)
    {
        int $getNum =`getAttr ($eachNs + ".enable")`;
        if($getNum==0)
        {
            textScrollList -e -append $eachNs x_OffFileList;  
        }
        if($getNum==1)
        {
            setAttr ($eachNs + ".enable") 0;
            textScrollList -e -append $eachNs x_OffFileList;  
        }

    }
}
//======================装换nucleus==========================================================================================

global proc nsOffToOn()
{
    float $startFrameN=`playbackOptions -q -min`;
    string $nucleusName[] =  `textScrollList -q -si x_OffFileList`;
    for($nucleus in $nucleusName)
    {
        textScrollList -e -ri $nucleus x_OffFileList;
        setAttr ($nucleus + ".enable") 1;
        setAttr ($nucleus + ".subSteps") 12;
        setAttr ($nucleus + ".maxCollisionIterations") 24;
        setAttr ($nucleus + ".startFrame") $startFrameN;

        textScrollList -e -a $nucleus x_OnFileList;
    }
}

global proc nsOnToOff()
{
    string $nucleusName[] =  `textScrollList -q -si x_OnFileList`;
    for($nucleus in $nucleusName)
    {
        textScrollList -e -ri $nucleus x_OnFileList;
        setAttr ($nucleus + ".enable") 0;
        setAttr ($nucleus + ".subSteps") 12;
        setAttr ($nucleus + ".maxCollisionIterations") 24;

        textScrollList -e -a $nucleus x_OffFileList;
    }
}

//=====================创建布料====================================================================================================
global proc create_Ncloth_M() 
{   
    //clearRe_Tool;
    NclothCreate;       
    Setnucleus0_M;
}
//=================================================================================================
global proc NclothCreate() 
{
    string $rn_obj[]= `ls -sl`;
    string $his_list[];
    string $get_res[];
    createNCloth 0;
    for ($obj_nc in $rn_obj)
    {
        $get_res= `listHistory $obj_nc`;
        $his_list=`listRelatives -p $get_res[1]`;
        rename  $his_list[0] ($obj_nc+"_cloth");
        rename  $get_res[0] ($obj_nc+"_outcloth");
    }                               
}
//=================清理冒号处理|===========================================================================
global proc clearRe_Tool() 
{
    string $rename_sel[] = `ls -sl`;
    for($ehSel in $rename_sel)
    {
        string $rename_A = substituteAllString ($ehSel,"|","_");
        string $rename_B=substituteAllString ($rename_A,":","_");           
        rename $ehSel $rename_B; 
    }   
                    
}
//=====================创建Passive===============================================================================================
global proc create_MPassive_M() 
{
//clearRe_Tool;  
string $sel_cloth[] = `ls -sl`;  
for ($i = 0;$i < `size $sel_cloth`;$i++)
    {
        string $clothRigidName =   $sel_cloth[$i] + "_" + "nRigid";
        select -r  $sel_cloth[$i] ;  
        string $clothRigidShape[] = ` makeCollideNCloth`;
               
            float $FloatThickness_v =`floatSliderGrp -query -value FloatThickness`;
            float $FloatFriction_v =`floatSliderGrp -query -value FloatFriction`;
        
        setAttr ($clothRigidShape[0]  + ".thickness") $FloatThickness_v;
        setAttr  ($clothRigidShape[0]  +  ".friction") $FloatFriction_v;
        //setAttr ($clothRigidShape[0] + ".displayColor") -type double3 1 0.8 0 ;
        //setAttr ($clothRigidShape[0] + ".solverDisplay") 1;
        string $clothRigid[] = `listRelatives -p $clothRigidShape[0]`;
        rename  $clothRigid[0] $clothRigidName ;

    }
}
//======================开关显示DisplayPassive========================================================================================
global proc DisplayPassive_M() 
{
    string $selectR[] = `ls -sl`;
    string $nrigShape_temp[];
    string $nrig_temp[];
    int $attr_temp;
    for($obj_sel in $selectR)
    {
        $nrigShape_temp =`listHistory $obj_sel`;
        $nrig_temp=`listConnections -type nRigid $nrigShape_temp[0]`;
        $attr_temp=(`getAttr ($nrig_temp[0]+".solverDisplay")`);
        if ($attr_temp)
        {                       
            setAttr ($nrig_temp[0]+".displayColor") -type double3 1 0.8 0 ;
            setAttr ($nrig_temp[0]+".solverDisplay") 0;
        }
        else   
        {
            /////////////////////////////////////////////////////////////////////////////////////////////////
            ///////////////////打勾显示nRigids////////////////////////////////////////////////////////////////
            global string $gDynPaintEditorName;
            string $currentPanel = `getPanel -underPointer`;
            if ("" == $currentPanel) 
            {
                $currentPanel = `getPanel -withFocus`;
            }
            if ("" != $currentPanel) 
            {
                string $panelType = `getPanel -typeOf $currentPanel`;
                if ($panelType ==  "modelPanel")
                {
                    modelEditor -e -nRigids 1 $currentPanel;
                }
                else if (`isTrue "MayaCreatorExists"` && `scriptedPanel -exists $currentPanel` 
                        && `scriptedPanel -query -type $currentPanel` == "dynPaintScriptedPanelType") 
                {
                    modelEditor -e -nRigids 1 $currentPanel;  
                }
            }
            //////////////////////////////////////////////////////////////////////////////////////////////////
                
            float $FloatThickness_v =`floatSliderGrp -query -value FloatThickness`;
            setAttr ($nrig_temp[0]+".thickness") $FloatThickness_v;
            setAttr ($nrig_temp[0]+".displayColor") -type double3 1 0.8 0 ;
            setAttr ($nrig_temp[0]+".solverDisplay") 1;
        }
    }

}

global proc DisplayNcloth_M() 
{
    string $selectR[] = `ls -sl`;
    string $nrigShape_temp[];
    string $nrig_temp[];
    int $attr_temp;
    for($obj_sel in $selectR)
    {
        $nrigShape_temp =`listHistory $obj_sel`;
        $nrig_temp=`listConnections -type nCloth $nrigShape_temp[0]`;
        $attr_temp=(`getAttr ($nrig_temp[0]+".solverDisplay")`);
        if ($attr_temp)
        {                           
            setAttr ($nrig_temp[0]+".displayColor") -type double3 1 0.8 0;
            setAttr ($nrig_temp[0]+".solverDisplay") 0;
        }
        else   
        {
            /////////////////////////////////////////////////////////////////////////////////////////////////
            ///////////////////打勾显示nCloths////////////////////////////////////////////////////////////////
            global string $gDynPaintEditorName;
            string $currentPanel = `getPanel -underPointer`;
            if ("" == $currentPanel) 
            {
                $currentPanel = `getPanel -withFocus`;
            }
            if ("" != $currentPanel) 
            {
                string $panelType = `getPanel -typeOf $currentPanel`;
                if ($panelType ==  "modelPanel")
                {
                    modelEditor -e -nCloths 1 $currentPanel;
                }
                else if (`isTrue "MayaCreatorExists"` && `scriptedPanel -exists $currentPanel` 
                        && `scriptedPanel -query -type $currentPanel` == "dynPaintScriptedPanelType") 
                {
                    modelEditor -e -nRigids 1 $currentPanel;  
                }
            }
            //////////////////////////////////////////////////////////////////////////////////////////////////
                
            setAttr ($nrig_temp[0]+".displayColor") -type double3 1 0 0 ;
            setAttr ($nrig_temp[0]+".solverDisplay") 1;
        }
    }

}
//=============删除Passive=====================================================================================================
global proc removePassive()
{
    string $removenRigid[] = `ls -type "nRigid"`;
    for($i in $removenRigid)
    {
        removeNCloth "selected";
    }
}
//========删除Cache=======================================================================================================
global proc cgDelCache()
{
string $list_obj[]= `ls -sl`;
    for ($eh_obj in $list_obj)
    {
        string $list_His[] =`listHistory $eh_obj`;
        string $selNucleus[] =`ls -type "cacheFile" $list_His`;
        select -r $selNucleus ;
        doDelete;
        select -r $eh_obj;  
    }
}
//=============更新文件路径=========================================================================================================
global proc workspaceProject_M()
{
    SetProject;                            
    string $FTM_CurrentProject = `workspace -q -rd`;
    string $FTM_DataDir = `FTM_GetPath "path" $FTM_CurrentProject`;     
}
//====================文件Browse路径=================================================================================================
global proc string FTM_GetPath (string $FTM_FileOrPath, string $FTM_OldPath)
{
    
    $FTM_OldPath = `substituteAll "\\\\" $FTM_OldPath "/"`;
    if ($FTM_FileOrPath == "file")
        $FTM_OldPath = `dirname $FTM_OldPath`;
        $FTM_OldPath = `substitute "/*$" $FTM_OldPath ""`;
 
    string $FTM_RightPath;
    if (size($FTM_OldPath)) $FTM_RightPath = `toNativePath ($FTM_OldPath + "/")`;
    return $FTM_RightPath;
}

global proc FTM_BrowseCmd (string $FTM_FileOrPath, string $FTM_TextField, string $FTM_WhichButton, int $FTM_BrowseType)
{
    global string $FTM_WorkSpace;
    if (size($FTM_WorkSpace) == 0)
    {
        $FTM_WorkSpace = `workspace -q -rd` + `workspace -q -rte "sourceImages"`;
        $FTM_WorkSpace = `FTM_GetPath "path" $FTM_WorkSpace`;
    }
    workspace -dir $FTM_WorkSpace;

    global int $FTM_NEW_MAYA;
    if ($FTM_NEW_MAYA) 
    { // use 'fileDialog2' for the browser command.
        if ($FTM_BrowseType == 0) $FTM_BrowseType = 1;
        else if ($FTM_BrowseType == 4) $FTM_BrowseType = 3;
        string $return[] = `fileDialog2 -ds 2 -cap $FTM_WhichButton -dir $FTM_WorkSpace -fm $FTM_BrowseType -okc $FTM_WhichButton -cc "Cancel"`;
        string $path = $return[0];
        if (!size($path)) $path = `textFieldButtonGrp -q -text $FTM_TextField`;
        if ($FTM_FileOrPath == "file") $path += "bugQuickFix";
        FTM_ChangeTextField $FTM_FileOrPath $FTM_TextField $path "";
    }
    else 
    {
        string $FTM_Temp = "";
            $FTM_Temp += "FTM_ChangeTextField ";
            $FTM_Temp += ("\"" + $FTM_FileOrPath + "\" ");
            $FTM_Temp += ("\"" + $FTM_TextField + "\" ");
        fileBrowser $FTM_Temp $FTM_WhichButton "" $FTM_BrowseType;
    }
}

global proc FTM_CacheEditControl(string $FTM_OptionColumn)
{
textFieldButtonGrp -e -bc ("FTM_BrowseCmd \"path\" \"" + $FTM_OptionColumn + "|FTM_CacheDirectoryField\" \"Set_T.D.\" 4")
            ($FTM_OptionColumn + "|FTM_CacheDirectoryField");
}

global proc FTM_ChangeTextField (string $FTM_FileOrPath, string $FTM_TextField, string $FTM_File, string $FTM_FileType)
{
    string $FTM_Path = `FTM_GetPath $FTM_FileOrPath $FTM_File`;
    textFieldButtonGrp -e -text (toNativePath($FTM_Path)) $FTM_TextField;
    //Close the dialog for IRIX/Linux.
    string $os = `about -os`;
    if (gmatch($os, "*irix*") || gmatch($os, "*linux*"))
        window -e -vis false projectViewerWindow;

    global string $FTM_WorkSpace;
    $FTM_WorkSpace = $FTM_Path;
}
//===================创建布料缓存===================================================================================================
global proc doCreateNclothCache_M()
{
    string $pathName=`textField -q -fileName Nc_SavePath`+"/";
    float $rate=`floatSliderGrp -q -v floatSliderGrpEvaluatEevery`;
    string $sel[]=`ls -sl -l`;

    string $crtCmd="cacheFile -r -smr "+$rate+" -st `playbackOptions -q -min` -et `playbackOptions -q -max` -dir \""+$pathName+"\" -format OneFile -cf mcc";

    for($selIt in $sel)
    {
        string $sh[]=`listHistory  -f 1 $selIt`;
        $crtCmd+=" -pts "+$sh[0];
        //判断模型的精度。2012年1月29日 咸金辉
        if (`objExists ($selIt+".modelType")`)
        {
            string $t=`getAttr ($selIt+".modelType")`;
            if ($t=="high")
            {
                $crtCmd+=" -ci x_returnHi ";
            }
            else if ($t=="middle")
            {
                $crtCmd+=" -ci x_returnMi ";
            }
            else if ($t=="low")
            {
                $crtCmd+=" -ci x_returnLo ";
            }   
        }
        else{
            string $script=x_getCiScript(x_getModelType($sh[0]));
            if ($script!="")
            {
                $crtCmd+=" -ci "+$script;
            }
        }
    }
    //print ($crtCmd+"\n");
    string $cacheName[]=`eval($crtCmd)`;

    for($selIt in $sel)
    {
        //print ("sel:"+$selIt+"\n");
        string $sh[]=`listHistory  -f 1 $selIt`;

        //新加的_begin
        string $sh_His[]=`listHistory $selIt`;              //得到outcloth

        string $sh_His_nCloth[] = `ls -type "nCloth" $sh_His`; //得到clothShape 
                                        //判断outputMesh与inMesh的连接是否丢失
        //2011年12月15日 咸金辉
        //判断这个模型的上游历史是否有ncloth节点
        if(size($sh_His_nCloth)==0)
        {
            //no ncloth,warning
            warning ($sh_His[0]+" 没有布料节点的输出mesh! 请用HyperGraph窗口检查物体的节点网络图.");
            return;
        }
        string $selIt_om = $sh_His_nCloth[0]+".outputMesh";     //outputMesh属性
        string $selIt_in = $sh[0]+".inMesh";            //inMesh属性
        //print ("out:"+$selIt_om+"  in:"+$selIt_in+"\n");
        if(!`isConnected $selIt_om $selIt_in`)
        {
            connectAttr -f $selIt_om $selIt_in;
        }
        //新加的_end

        string $clothNode[]=`listConnections -s 1 -d 0 ($sh[0]+".inMesh")`;
        string $cacheName[]=`listConnections -s 1 -d 0 ($clothNode[0]+".positions")`;
        if(size($cacheName))
        delete $cacheName;
            /*
        string $vex[]=`ls -fl -l ($sh[0]+".pnts[*]")`;
        for($vexIt in $vex)
        {
            select $vexIt;
            setAttr ".pntx" 0;
            setAttr ".pnty" 0;
            setAttr ".pntz" 0;
        }
        */
    }

    for($i=0;$i<size($sel);$i++)
    {
        string $buffer[];
        $numTokens = `tokenize $sel[$i] "|" $buffer`;
        string $shortName=$buffer[$numTokens-1];

        string $newName=`substitute ":" $shortName "@"`;
  
        string $sh[]=`listHistory  -f 1 $sel[$i]`;
        string $clothNode[]=`listConnections -s 1 -d 0 ($sh[0]+".inMesh")`;

        sysFile -rename  ($pathName+$newName+"_clothShape.mc") ($pathName+$cacheName[$i]+".mc");
        sysFile -rename  ($pathName+$newName+"_clothShape.xml") ($pathName+$cacheName[$i]+".xml");

        cacheFile -attachFile -f ($newName+"_clothShape") -directory $pathName -ia ($clothNode[0]+".positions");
        string $cacheName[]=`listConnections -s 1 -d 0 ($clothNode[0]+".positions")`;
        connectAttr -f ($cacheName[0]+".inRange") ($clothNode[0]+".playFromCache");
    }

    print "+++++++++++++++  缓存创建完成  +++++++++++++++";
}

//===============导入布料缓存路径==============================================================================================================
global proc savePath()
{
    string $initialDirectory = `textField -query -fileName savePath`;
    if (`filetest -d $initialDirectory`)
    {
        workspace -dir $initialDirectory;
    }
    else
    {
        string  $workspace = `workspace -query -fullName`;
        setWorkingDirectory($workspace, "", "");
    }
    fileBrowserDialog -m 4 -fc "audioSave"   -an "save..." ;
}
global proc int audioSave(string $filename,string $fileType)
{
    textField -e -tx $filename savePath;
    optionVar -sv "s_importClothCache" $filename;
    return 1;
}
//===============创建布料缓存路径=========================================================================================================
global proc NclothSavePath()
{
    string $initialDirectory = `textField -query -fileName Nc_SavePath`;
    if (`filetest -d $initialDirectory`)
    {
        workspace -dir $initialDirectory;
    }
    else
    {
        string  $workspace = `workspace -query -fullName`;
        setWorkingDirectory($workspace, "", "");
    }
    fileBrowserDialog -m 4 -fc "NclothaudioSave"   -an "save..." ;
}
global proc int NclothaudioSave(string $filename,string $fileType)
{
    textField -e -tx $filename Nc_SavePath;
    optionVar -sv "s_createNcloth" $filename;
    return 1;
}
global proc CK_about_M()
{
showHelp -absolute "//192.168.1.4/scripts/help/vfx/超级布料工具.html";
}
//=================导入布料几何体缓存路径=========================================================================================================
global proc GeometrySavePath()
{
    string $initialDirectory = `textField -query -fileName G_SavePath`;
    if (`filetest -d $initialDirectory`)
    {
        workspace -dir $initialDirectory;
    }
    else
    {
        string  $workspace = `workspace -query -fullName`;
        setWorkingDirectory($workspace, "", "");
    }
    fileBrowserDialog -m 4 -fc "GeometryaudioSave"   -an "save..." ;
}
global proc int GeometryaudioSave(string $filename,string $fileType)
{
    textField -e -tx $filename G_SavePath;
    optionVar -sv "s_GeometryPath" $filename;
    return 1;
}
//===============创建几何体缓存=============================================================================================================
global proc CreateGeometryCache_M()
{
    //clearRe_Tool;
    string $sel[] = `ls -sl`;
    
    for($s in $sel)
    { 
        if (`gmatch $s "*|*"`)
        {
            warning("物体:"+$s+"有重名，不能生成缓存!");
            continue;
        }   
        string $GeoCahName,$GeoNameCache,$name_clG,$name_End;
        //增加了对曲线物体的支持。咸金辉，2011年8月24日
        string $shapes[]=`listRelatives -c -pa $s`;
        if (`nodeType $shapes[0]`=="nurbsCurve")
        {
            $GeoCahName =$s+"_hairShape";
        }
        else
        {
            $GeoCahName =$s+"_clothShape";
        }
        $name_clG = substituteAllString ($s,":","_");
        $name_End = substituteAllString ($s,":","@");
        $GeoNameCache=$name_End+"_clothShape";  
        int $radFD_G_v =`radioButtonGrp -query -select radioButtonGeometryCacheMode`;
        /////////////////
        if($radFD_G_v==1)
        {
            select -r $s;
            //clearRe_Tool;

            isolateSel;
            string $GeometryFilePath = `textField -q -fi -tx G_SavePath`; 
            float $startFrameG_v =`playbackOptions -q -min`;
            float $endFrameG_v =`playbackOptions -q -max`;

            string $GeometryCacheCmd = "doCreateGeometryCache 5 { \"2\",\"";    
            $GeometryCacheCmd +=$startFrameG_v;
            $GeometryCacheCmd +="\",\"";
            $GeometryCacheCmd +=$endFrameG_v;
            $GeometryCacheCmd +="\", \"OneFile\", \"1\",\"";                       
            $GeometryCacheCmd += $GeometryFilePath;
            $GeometryCacheCmd += "\",\"0\",\"";
            $GeometryCacheCmd += $GeoNameCache;
            $GeometryCacheCmd += "\",\"0\", \"add\", \"0\", \"1\", \"1\",\"0\",\"1\" } ;";

            string $GeoCache_C[] = `eval ($GeometryCacheCmd)`;       
            isolateSel;
                
        }

            /////////////////
        if($radFD_G_v==2)
        {
            string $list_His_G[] =`listHistory $s`;
            string $selNucleus_G[] =`ls -type "cacheFile" $list_His_G`;
            if(""==$selNucleus_G[0])
            {
                string $NoCacheWarningUI = `window -title "Warning"
                                    -widthHeight 200 90`;
                columnLayout -adjustableColumn true;
                    text -label "物体上没有缓存节点";
                    button -label "Close" -command ("deleteUI -window " + $NoCacheWarningUI);
                setParent ..;
                window -e -widthHeight 200 90 $NoCacheWarningUI;
                showWindow $NoCacheWarningUI;
            }
            if(`objExists $selNucleus_G[0]`)
            {
                string  $obj_bg_name =$s + "_bg";
                string  $obj_bg_nameBase =$s + "Base";
                select  $s;
                //clearRe_Tool;
                duplicate -n $obj_bg_name;
                select -r $obj_bg_name ;
                select -tgl $s;
                CreateWrap;
                select -r $obj_bg_name ;

                isolateSel;
                string $GeometryFilePath = `textField -q -fi -tx G_SavePath`; 
                float $startFrameG_v =`playbackOptions -q -min`;
                float $endFrameG_v =`playbackOptions -q -max`;

                string $GeometryCacheCmd = "doCreateGeometryCache 5 { \"2\",\"";    
                    $GeometryCacheCmd +=$startFrameG_v;
                    $GeometryCacheCmd +="\",\"";
                    $GeometryCacheCmd +=$endFrameG_v;
                    $GeometryCacheCmd +="\", \"OneFile\", \"1\",\"";                       
                    $GeometryCacheCmd += $GeometryFilePath;
                    $GeometryCacheCmd += "\",\"0\",\"";
                    $GeometryCacheCmd += $GeoNameCache;
                    $GeometryCacheCmd += "\",\"0\", \"add\", \"0\", \"1\", \"1\",\"0\",\"1\" } ;";
      
                string $GeoCache_C[] = `eval ($GeometryCacheCmd)`;       
                delete $obj_bg_name;
                isolateSel; 
            }
        }
    }
}
//=================大远的合并nucleus======================================================================================================
global proc SGdelNuc()
{
    string $allNuc[]=`ls -typ nucleus`;
    string $nuc[];clear $nuc;
    for($allNucIt in $allNuc)
        {
            if(!`referenceQuery -isNodeReferenced $allNucIt`)
            $nuc[size($nuc)]=$allNucIt;
        }
    string $cloth[]=stringArrayRemoveDuplicates(`listConnections -t nCloth -sh 1 $nuc`);
    string $rigid[]=stringArrayRemoveDuplicates(`listConnections -t nRigid -sh 1 $nuc`);
    string $const[]=stringArrayRemoveDuplicates(`listConnections -t dynamicConstraint -sh 1 $nuc`);
    string $conNuc=$nuc[0];

    for($i=1;$i<size($nuc);$i++)
    delete $nuc[$i];

    for($clothIt in $cloth)
    {
        string $nuced[]=`listConnections -t nucleus $clothIt`;
        if(!size($nuced))
        {
            connectAttr -f ($conNuc+".startFrame") ($clothIt+".startFrame");
            int $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".outputObjects["+$id+"]")`))
                {
                    connectAttr -f ($conNuc+".outputObjects["+$id+"]") ($clothIt+".nextState");
                    break;
                }
                $id++;
            }
        
            $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputActiveStart["+$id+"]")`))
                {
                    connectAttr -f ($clothIt+".startState") ($conNuc+".inputActiveStart["+$id+"]"); 
                    break;
                }
                $id++;
            }
            $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputActive["+$id+"]")`))
                {
                    connectAttr -f ($clothIt+".currentState") ($conNuc+".inputActive["+$id+"]"); 
                    break;
                }
                $id++;
            }
        }
    }
    for($rigidIt in $rigid)
    {
        string $nuced[]=`listConnections -t nucleus $rigidIt`;
        if(!size($nuced))
        {
            connectAttr -f ($conNuc+".startFrame") ($rigidIt+".startFrame");
            int $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputPassiveStart["+$id+"]")`))
                {
                    connectAttr -f ($rigidIt+".startState") ($conNuc+".inputPassiveStart["+$id+"]");
                    break;
                }
                $id++;
            }

            int $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputPassive["+$id+"]")`))
                {
                    connectAttr -f ($rigidIt+".currentState") ($conNuc+".inputPassive["+$id+"]");
                    break;
                }
                $id++;
            }
        }
    }
    for($constIt in $const)
    {
        string $nuced[]=`listConnections -t nucleus $constIt`;
        if(!size($nuced))
        {
            int $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputCurrent["+$id+"]")`))
                {
                    connectAttr -f ($constIt+".evalCurrent[0]") ($conNuc+".inputCurrent["+$id+"]");
                    break;
                }
                $id++;
            }

            int $id=0;
            while(1)
            {
                if(!size(`listConnections ($conNuc+".inputStart["+$id+"]")`))
                {
                    connectAttr -f ($constIt+".evalStart[0]") ($conNuc+".inputStart["+$id+"]");
                    break;
                }
                $id++;
            }
        }
    }
    if(!size(`listConnections -t nCloth -sh 1 $conNuc`))
    delete $conNuc;

//disSelnucleus_M;
}
//=============删除Nucleus================================================================================================================
global proc delNucleus_M()
{
    string $delNucleus[] =`ls -type "nucleus"`;
    for($eachNs in $delNucleus)
    {
        select -r $eachNs;
        doDelete;
    }
}

//上缓存的报告反馈窗口
global proc reportInfoUI()
{
    if(`window -exists "InfoWarningUI"`)
        {deleteUI "InfoWarningUI";};
    window
    -title "Import Cache Report"
        -rtf true
        -width 600
        -height 245
        -mnb false
        -mxb false
        "InfoWarningUI";
    
    //columnLayout -adj true -columnAlign "center" -cat "both" 15;
    //frameLayout -lv 0 -w 600 -h 180;
               
    string $form=`formLayout`; 
    textScrollList -sc "print `textScrollList -q -si InfoWarningMC`" InfoWarningMC;
    formLayout -e 
        -af InfoWarningMC "left" 10 
        -af InfoWarningMC "right" 10
        -af InfoWarningMC "top" 10
        -af InfoWarningMC "bottom" 10
        $form;
    showWindow "InfoWarningUI";
}
//============一键上缓存=============================================================================================================================
global proc importClothCacheMain()
{
    //python("from vfx import x_getXmlValue");
    //string $objExistPz[]=`ls -r 1 "Eye_control.PengZhuang"`;
    //for($attrPz in $objExistPz)
    //{
    //  CBunlockAttr $attrPz;                   //解锁
    //  CBdeleteConnection $attrPz;             //去帧
    //  setAttr $attrPz 1;                  //开启
    //}
    
    string $pathName=`textField -q -fileName savePath`+"/";
    string $cacheNames[]=`getFileList -folder $pathName -filespec "*.mc"`;

    reportInfoUI();

    select -cl;

    for($cacheNameIt in $cacheNames)
    { 
        //print ("cache:"+$cacheNameIt+"\n");
        $cache=`substitute "@" $cacheNameIt ":"`;
        int $num=python("'"+$cache+"'.rfind('_')");
        string $objName=`substring $cache 1 $num `;
        //print ("cloth obj:"+$objName+"\n");
        if(!`objExists $objName`)
        {   
            string $app_Info_F= $cacheNameIt+"______模型不存在，加载失败×××";
            textScrollList -e -append  $app_Info_F  InfoWarningMC;
        }
        else
        {

            //2012年1月29日 咸金辉
            //判断要上缓存的物体文件模型精度是否与缓存中记录的模型精度保持一致
            int $size=size($cacheNameIt);
            string $baseName=substring($cacheNameIt,1,$size-3);
            string $cacheFileName=$pathName+"/"+$baseName+".xml";
            /*string $model=python("x_getXmlValue.main('"+$cacheFileName+"','extra',3)");
            string $rmodel=x_getModelType($objName);
            //print ("script:"+$rscript+"  model:"+$model+"\n");
            if ($rmodel!="" && $model!="" && $rmodel!=$model)
            {
                string $app_Info_F= $cacheNameIt+"______模型的精度版本不对，加载失败×××";
                print $app_Info_F;print "\n";   
                textScrollList -e -append  $app_Info_F  InfoWarningMC;
                continue;
            }
            //print "---start chekc \n";    */
            string $sw[];
            if (`nodeType $objName`=="mesh")
            {
                $sw=`listConnections -s 1 -d 0 -t "historySwitch"  ($objName+".inMesh")`;
            }
            else if (`nodeType $objName`=="nurbsCurve")
            {
                $sw=`listConnections -s 1 -d 0 -t "historySwitch"  ($objName+".create")`;
            }
            //2011年12月15日 咸金辉修改
            //增加了判断是否为物体transform节点，或者是一个组的transform，如果是组，跳过。
            else if (`nodeType $objName`=="transform")
            {
                string $shapes[]=`listRelatives -s $objName`;
                if (size($shapes)==0)
                {               
                    string $app_Info_F= $cacheNameIt+"______物体是transform节点，不是mesh，加载失败×××";
                    textScrollList -e -append  $app_Info_F  InfoWarningMC;
                    continue;
                }
            }
            //print "---chekc end\n";   
            //end
            if(size($sw))
            {
                for($swIt in $sw)
                {
                    string $ca[]=`listConnections -s 1 -d 0 -t cacheFile  $swIt`;
                    if(size($ca))
                    delete $ca;
                }
            }
            //print "---start cache\n"; 
            string $switch = createHistorySwitch($objName,false);
            string $cacheNode = `cacheFile -attachFile -dir $pathName -f $cacheNameIt -ia ($switch+".inp[0]")`;
            setAttr ($switch+".playFromCache") true;
            //print "---end cache\n";   

            select -tgl $objName;
            string $app_Info_T =$cacheNameIt+"______加载成功√√√";
            textScrollList -e -append  $app_Info_T  InfoWarningMC;
        }
    }
}
//==========选择删除解算器===================================================================================================================================

global proc delSelNusWin()
{
if (`window -exists delSelNusUI`)
    deleteUI delSelNusUI;
    window -w 300
        -h 250
        -t "选择删除解算器"
        -mxb off
        delSelNusUI;

        string $form_main = `formLayout -bgc 1 .95 .9 -numberOfDivisions 100`;
            string $num_infoNus =`frameLayout -bgc 1 .95 .9 -borderStyle "etchedOut" num_infoNus`;
            string $List_Nus =`textScrollList -ams 1 -nr 20 -w 300 -h 120 -sc ListNus_M Nus_List`;
            setParent ..;

            string $Del_selM =`button -bgc 1 .95 .9 -w 110 -h 30 -l "强制删除Nucleus" -c selDelNucleus_M`;
            string $ref_selM =`button -bgc 1 .95 .9 -w 110 -h 30 -l "刷新场景中解算器" -c dis_nucleus_M`;
            string $empty_selM =`button -bgc 1 .95 .9 -w 110 -h 30 -l "删除空Nucleus" -c empty_nucleus_M`;
            string $about_text=`text -bgc 1 .95 .9 -label ("_________________________________________↑"+"\n"+" ①直接强制删除Nucleus,链接丢失再合并会出错！"+"\n"+"②先删空Nucleus,再强制删除不要的Nucleus,合并不会出错")  -align "right"`;

        formLayout -edit
        -af $num_infoNus        "top"       5
        -af $num_infoNus        "left"      5
        -af $num_infoNus        "right"     5
        -ac $num_infoNus        "bottom"        8   $Del_selM


        -af $ref_selM       "left"      10
        -af $ref_selM       "bottom"        60
         -ap    $ref_selM           "left"      5   0
         -ac    $ref_selM           "right"     0   $empty_selM

        -af $empty_selM     "bottom"        60
         -ap    $empty_selM             "left"      1   34
        -ac $empty_selM         "right"     0   $Del_selM


        -af $Del_selM       "right"     5
        -af $Del_selM       "bottom"        60
         -ap    $Del_selM           "left"      2   66

        -ac $about_text     "top"   8   $Del_selM
        -af $about_text     "right"     10
        -af $about_text     "bottom"        8   

        $form_main; 
        dis_nucleus_M;
    window -e -h 250 -w 350 delSelNusUI;
showWindow delSelNusUI;
}
global proc ListNus_M()
{
    select `textScrollList -q -si Nus_List`;
    print `textScrollList -q -si Nus_List`;
}
global proc empty_nucleus_M()
{
    string $empty_Nus[] =`ls -type "nucleus"`;
    for($emp_s in $empty_Nus)
    {
        string $listCon_empty[] = `listConnections -d 0 -s 1 $emp_s`;
        if (!`objExists $listCon_empty[1]`)
        {
            select $emp_s;
            delete;
        }
    }
    dis_nucleus_M;
}
global proc dis_nucleus_M()
{
    string $Nus_KNum[]={};
    string $Nus_GNum[]={};
    string $sel_Nus[] =`ls -type "nucleus"`;
    textScrollList -e -ra Nus_List;
    for($e_gNs in $sel_Nus)
    {
        $Nus_GNum[`size $Nus_GNum`]=$e_gNs;
        textScrollList -e -append $e_gNs Nus_List; 
    }

    for($e_Con in $sel_Nus)
    {
        string $list_Nus[] = `listConnections -d 0 -s 1 $e_Con`;
        if (!`objExists $list_Nus[1]`)
        {       
                $Nus_KNum[`size $Nus_KNum`]=$e_Con;
        }
    }
    frameLayout -e -borderStyle "etchedOut" -l ("场景中共有"+`size $Nus_GNum`+"个Nucleus  "+"有"+`size $Nus_KNum`+"个是空Nucleus") num_infoNus;
}

global proc selDelNucleus_M()
{
    string $selDelN[]= `ls -sl`;
    for ($eh_DeN in $selDelN)
    {
        if (`nodeType $eh_DeN`=="nucleus")
        {
        select -r $eh_DeN;
        doDelete;
        }
        else
        {
        warning -showLineNumber true "没有选择nucleus";
        }
    }
    dis_nucleus_M;
}


/*2012年1月29日 咸金辉
根据指定的模型名字，返回它的reference文件的模型精度类型的函数

*/

global proc string x_getCiScript(string $key)
{
    if ($key=="high")
        return "x_returnHi";
    else if ($key=="middle")
        return "x_returnMi";
    else if ($key=="low")
        return "x_returnLo";
    else
        return "";
}
global proc string x_getModelType(string $obj)
{
    if (`referenceQuery -inr $obj`)
    {
        string $file=`referenceQuery -f $obj`;
        if (endsWith($file,"Hi.mb"))
            return "high";
        else if (endsWith($file,"Mi.mb"))
            return "middle";
        else if (endsWith($file,"Lo.mb"))
            return "low";
        else
            return "";
    }
    else 
        return "";
}
global proc string x_returnHi()
{
    return "high";
}
global proc string x_returnMi()
{
    return "middle";
}
global proc string x_returnLo()
{
    return "low";
}
//=======================================================================================================================================

//============一键上缓存  (张千桔开发的新版缓存)=============================================================================================================================
global proc importClothCacheMain_new()
{
    string $nameCaLong_ch;
    string $objExistPz[]=`ls -r 1 "Eye_control.PengZhuang"`;
    for($attrPz in $objExistPz)
    {
        CBunlockAttr $attrPz;                   //解锁
        CBdeleteConnection $attrPz;             //去帧
        setAttr $attrPz 1;                  //开启
    }
    
    string $pathName=`textField -q -fileName savePath`+"/";
    string $cacheNames[]=`getFileList -folder $pathName -filespec "*.mc"`;

    reportInfoUI();

    select -cl;
    for($cacheNameIt in $cacheNames)
    { 
        string $nameCache0 = substituteAllString ($cacheNameIt,"#","|");
        string $nameCache=substituteAllString ($nameCache0,"@",":");

        int $nCnum=python("'"+$nameCache+"'.rfind('_')");
        string $objName=`substring $nameCache 1 $nCnum `;
        
        
        int $name_nCnum=python("'"+$objName+"'.rfind('|')");
        int $cah_name_n =`size($objName)`;
        string $objName_cah=`substring $nameCache ($name_nCnum+2) $cah_name_n`;

        string $long_cah[]=`ls -l $objName_cah`;
        int $nm_cah =`size($long_cah[0])`;
        
        if($nm_cah>60)
        {
            $nameCaLong_ch=substring($long_cah[0],($nm_cah-60),`size($long_cah[0])`);       
        }
        else
        {
            $nameCaLong_ch=$long_cah[0];
        }

        if($objName==$nameCaLong_ch)
        {
            string $sw[];
            if (`nodeType $objName_cah`=="mesh")
                $sw=`listConnections -s 1 -d 0 -t historySwitch  ($objName_cah+".inMesh")`;
            else if (`nodeType $objName_cah`=="nurbsCurve")
                $sw=`listConnections -s 1 -d 0 -t historySwitch  ($objName_cah+".create")`;
            else if (`nodeType $objName_cah`=="transform")
            {
                string $shapes[]=`listRelatives -s $objName_cah`;
                if (size($shapes)==0)
                {               
                    string $app_Info_F= $cacheNameIt+"______加载失败×××";
                    textScrollList -e -append  $app_Info_F  InfoWarningMC;
                    continue;
                }
            }
            if(size($sw))
            {
                    for($swIt in $sw)
                        {
                    string $ca[]=`listConnections -s 1 -d 0 -t cacheFile  $swIt`;
                    if(size($ca))
                    delete $ca;
                }
            }

            string $switch = createHistorySwitch($objName_cah,false);
            string $cacheNode = `cacheFile -attachFile -dir $pathName -f $cacheNameIt -ia ($switch+".inp[0]")`;
            setAttr ($switch+".playFromCache") true;

            //select -tgl $cacheNameIt;
            string $app_Info_T ="√√√加载成功......"+$cacheNameIt;
            textScrollList -e -append  $app_Info_T  InfoWarningMC;
        }
        else
        {
            string $app_Info_F= "×××加载失败......"+$cacheNameIt;
            textScrollList -e -append  $app_Info_F  InfoWarningMC;
        }       
    }
}

///////////////////////////////////////////////////////////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
