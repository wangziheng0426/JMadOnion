/////////////////////////////////////////////////////////////
///\file J_easyFire.mel
///
///\brief    叫我桔子_烟火工具
///
///\author 桔
///\version 1.0
///\date  15:23 2018/3/6
///History:  
///
///////////////////////////////////////////////////////////////
global proc J_easyFire()
{
if (`window -ex pacloud_dustWin`)
	deleteUI -window pacloud_dustWin;
	window -title "Create fire&smoke Tool" -widthHeight 290 450 pacloud_dustWin;
      formLayout frm;
				string $bu01=`button -w 90 -h 30 -l "创建面发射器" -c createEm      -ann "为选择的物体建立发射器"`;
				string $bu02=`button -w 90 -h 30 -l "创建点发射器" -c pointEmitterCreate     -ann "为选择的发射器建立发射器"`;
				string $bu03=`button -w 90 -h 30 -l "流体粒子"   -c fluid_particle   -ann "为选择的发射器建立流体粒子"`;
				string $bu04=`button -w 90 -h 30 -l "粒子火焰"   -c create_pa -ann "为选择的发射器建立火焰"`;
				string $bu05=`button -w 90 -h 30 -l "云烟雾"     -c create_sm  -ann "在视图中选择粒子，然后点击按钮"`;
				string $bu06=`button -w 90 -h 30 -l "精灵烟雾"   -c J_crSpritPa  -ann ""`;
				string $bu07=`button -w 90 -h 30 -l "火把工具"   -c crTorchPa  -ann "选择火把模型，点击此按钮即可"`;
				string $bu08=`button -w 90 -h 30 -l "显示流体"   -c J_showFluid  -ann "选择左侧流体，点击此按钮即可"`;
				string $bu09=`button -w 90 -h 30 -l "刷新"   -c "refresh"`;

				string $tsl01=`textScrollList -ams 1 -w 170 -h 120 em_list`;
						for ($xxx in ($all_emi=`ls -type pointEmitter`))
								{
								textScrollList -e -a $xxx em_list;
								}
				string $tsl02=`textScrollList -ams 1 -w 170 -h 120 pa_list`;
						for ($xxx in ($all_pa=`ls -type particle`))
								{
								textScrollList -e -a $xxx pa_list;
								}
				string $tsl03=`textScrollList -ams 1 -w 170 -h 110 fluid_list`;
						for ($xxx in ($all_fluid=`ls -type fluidShape`))
								{
								textScrollList -e -a $xxx fluid_list;
								}
      formLayout -e
      		-af em_list "left" 3
      		-ap em_list "right" 0 65
      		-af em_list "top" 3
      		-af pa_list "left" 3
      		-ap pa_list "right" 0 65
      		-af pa_list "top" 133
      		-af fluid_list "left" 3
      		-ap fluid_list "right" 0 65
      		-af fluid_list "top" 263
      		
      		-ac $bu01 "left" 2 em_list
      		-ac $bu02 "left" 2 em_list
      		-ac $bu03 "left" 2 em_list
      		-ac $bu04 "left" 2 em_list
      		-ac $bu05 "left" 2 em_list
      		-ac $bu06 "left" 2 em_list
      		-ac $bu07 "left" 2 em_list
      		-ac $bu08 "left" 2 em_list
      		-ac $bu09 "left" 2 em_list
      		-af $bu01 "top" 3
      		-af $bu02 "top" 45
      		-af $bu03 "top" 87
      		-af $bu04 "top" 129
      		-af $bu05 "top" 171
      		-af $bu06 "top" 213
      		-af $bu07 "top" 255
      		-af $bu08 "top" 297
      		-af $bu09 "top" 339
      	

             frm;
showWindow pacloud_dustWin;
//scriptJob -e "SelectionChanged" select_obj -p pacloud_dustWin;
}
//////////////////////////////
///////////////////////////////////////////////////fluid_pa
global proc string juCreateFluid(string $sel[])
{
	//string $sel[]=`ls -sl`;
	int $count=0;
	string $nameOfFluids;
	if (size($sel))
		{
			vector $pos=`xform -q -ws -t $sel[0]`;
			//string $fluidTemp=`createNode fluidShape -n ($sel[0]+"FluidShape")`;
			string $fluidTemp=`create3DFluid 10 10 10 10 10 10`;
			$fluidTemp =`rename $fluidTemp ($sel[0]+"FluidShape")`;
			string $parentTemp[]=`listRelatives -p $fluidTemp`;
			$parentTemp[0]=`rename $parentTemp[0] ($sel[0]+"Fluid")`;
			string $childTemp[]=`listRelatives -c $parentTemp[0]`;
			$fluidTemp=`rename $childTemp[0] ($sel[0]+"FluidShape")`;
			setAttr ($parentTemp[0]+".translateX") ($pos.x) ;
			setAttr ($parentTemp[0]+".translateY") ($pos.y) ;
			setAttr ($parentTemp[0]+".translateZ") ($pos.z) ;
			$nameOfFluids=$fluidTemp;
			//connectAttr -f time1.outTime ($fluidTemp+".currentTime");
			setAttr ($nameOfFluids+".baseResolution") 10;
			setAttr ($nameOfFluids+".boundaryX") 0;
			setAttr ($nameOfFluids+".boundaryY") 0;
			setAttr ($nameOfFluids+".boundaryZ") 0;
			setAttr ($nameOfFluids+".shadedDisplay") 0;
			setAttr ($nameOfFluids+".boundaryDraw") 5;
			setAttr ($nameOfFluids+".velocityDraw") 1;
			setAttr ($nameOfFluids+".velocityDrawSkip") 3;
			setAttr ($nameOfFluids+".velocityDraw") 0;
			setAttr ($nameOfFluids+".viscosity") 0.01;
			setAttr ($nameOfFluids+".friction") 0.01;
			setAttr ($nameOfFluids+".velocityDamp") 0.005;
			setAttr ($nameOfFluids+".autoResize") 1;
			setAttr ($nameOfFluids+".resizeClosedBoundaries") 0;
			setAttr ($nameOfFluids+".densityDissipation") 1;
			setAttr ($nameOfFluids+".densityBuoyancy") 0.5;
			setAttr ($nameOfFluids+".densityDiffusion") 0.005;
			setAttr ($nameOfFluids+".velocitySwirl") 15;
			setAttr ($nameOfFluids+".velocityNoise") 0.1;
			setAttr ($nameOfFluids+".turbulenceStrength") 0.05;
			setAttr ($nameOfFluids+".selfShadowing") 1;
		}
	else
		{print "nothing selected";}
		return $nameOfFluids;
	refresh;
}
global proc J_showFluid()
{	string $nameOfFluids[]=`textScrollList -q -si fluid_list`;
	setAttr ($nameOfFluids[0]+".boundaryDraw") 4;
	setAttr ($nameOfFluids[0]+".shadedDisplay") 1;
}
global proc juCreateExp(string $juParticle,string $juFluid)
{
	addAttr -ln "followFluid0"  -dt doubleArray  $juParticle;
	addAttr -ln "followFluid"  -dt doubleArray  $juParticle;
	setAttr -e-keyable true ($juParticle+".followFluid");
	
	addAttr -ln "speedMulti"  -at double  -dv 1 $juParticle;
	setAttr -e-keyable true ($juParticle+".speedMulti");
	
	addAttr -ln "rate"  -at double  -dv 0.2 $juParticle;
	setAttr -e-keyable true ($juParticle+".rate");
	
	string $exp="{\n"
		+"vector $positionOfPa="+$juParticle+".position;\n"
		+"vector $indexOfFluid= `fluidVoxelInfo "+
			"-v ($positionOfPa.x) ($positionOfPa.y) ($positionOfPa.z) "+$juFluid+"`;\n"
		+"int $inside =`fluidVoxelInfo "+
			"-inBounds ($indexOfFluid.x) ($indexOfFluid.y) ($indexOfFluid.z) "+$juFluid+"`;\n"
		+"\n"
		+"if ($inside)\n"
		+" {\n"
		+" vector $velocityOfFluid=`getFluidAttr -at "+"\""+"velocity"+"\""+
			 "-xi ($indexOfFluid.x) -yi ($indexOfFluid.y) -zi ($indexOfFluid.z) "+$juFluid+"`;\n"
		+"if ("+$juParticle+".followFluid<1)\n"
		+"  {\n"
		+"  float $mixSpeed="+$juParticle+".followFluid;\n"
		+"  float $mixSpeedX=(1-$mixSpeed);\n"
		+"  vector $velocityOfPa="+$juParticle+".velocity/"+$juParticle+".speedMulti;\n"
		+"  $velocityOfPa=$velocityOfFluid*$mixSpeed+$velocityOfPa*$mixSpeedX;\n"
		+"  vector $newVelocity=$velocityOfPa;\n"
		+"  "+$juParticle+".velocity=$newVelocity*"+$juParticle+".speedMulti;\n"
		+"  setFluidAttr -at "+"\""+"velocity"+"\""+
			" -xi ($indexOfFluid.x) -yi ($indexOfFluid.y) -zi ($indexOfFluid.z)"+ 
			" -vv ($velocityOfPa.x) ($velocityOfPa.y) ($velocityOfPa.z) "+$juFluid+";\n"
		+"  "+$juParticle+".followFluid+="+$juParticle+".rate;\n"
		+" }else\n"
		+"  {$newVelocity=$velocityOfFluid;\n"
		+"  "+$juParticle+".velocity=$newVelocity*"+$juParticle+".speedMulti;\n"
		+"  }\n"
		+"}else\n"
		+"{"+$juParticle+".followFluid=0;}\n"
		+"}\n";
	string $temp0=`dynExpression -rbd -s $exp  $juParticle`;
	
	setAttr ($juParticle+".lifespanMode") 2;
	setAttr ($juParticle+".lifespan") 2;
	setAttr ($juParticle+".lifespanRandom") 1;
	setAttr ($juParticle+".depthSort") 1;
	
	
	select -cl;
	select $juParticle;
	select -tgl $juFluid;
	EmitFluidFromObject;
		
}

global proc fluid_particle()
{
	string $selEmitter[]=`textScrollList -q -si em_list`;
	string $selParticle=`juCreateParticle($selEmitter)`;
	string $trans[]=`listRelatives -p $selEmitter[0]`;
	string $fluidNodeName=`juCreateFluid($trans)`;
	juCreateExp ($selParticle,$fluidNodeName);
	string $paParent=`createNode transform -n ($selParticle+"_GRP")`;
	parent `listRelatives -p $selParticle` $paParent;
	parent `listRelatives -p $fluidNodeName` $paParent;
	refresh;
}
///////////////////////////////////////////////////
global proc createEm()
{
	string $sel[]=`ls -sl`;
	juCreateEmitter($sel);
}
global proc string[] juCreateEmitter(string $sel[])
{
//string $sel[]=`ls -sl`;
string $emitterCreate[]=`emitter -type surface  -name "J_Smoke_#" 
	-r 100  -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 `;
string $emitterOfObjs[]=stringArrayRemove($sel,$emitterCreate);
refresh;
return $emitterOfObjs;
}
/////////////////////////////////创建粒子
	
////////////////////////////////////////创建面发射
global proc su_em()
{
FreezeTransformations;
CenterPivot;
string $nxxtemp[];
string $emsobj[]=`emitter -type surface -r 100 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0`;

for ($n=0;$n<`size($emsobj)`;$n++ )
	{
	if ($n%2==1)
		{$nxxtemp=`listRelatives -p $emsobj[$n]`;
		rename $emsobj[$n] ("J_"+$nxxtemp[0]+"emitter");
		}
	}				
refresh;			
}
global proc refresh()
{
	  	textScrollList -e -ra  em_list;
		for ($xxx in ($all_emi=`ls -type pointEmitter`))
				{
				textScrollList -e -a $xxx em_list;
				}
		textScrollList -e -ra  pa_list;
		for ($xxx in ($all_pa=`ls -type particle`))
				{
				textScrollList -e -a $xxx pa_list;
				}	
		textScrollList -e -ra  fluid_list;
		for ($xxx in ($all_fl=`ls -type fluidShape`))
				{
				textScrollList -e -a $xxx fluid_list;
				}
}
global proc pointEmitterCreate()
{
	string $sel[]=`ls -sl`;
	string $temp=`createNode pointEmitter -n ("J_pointEm"+$sel[0])`;
	connectAttr time1.outTime ($temp+".currentTime");
	if (size($sel))
		{vector $pos =`xform -q -ws -t $sel[0]`;
			setAttr ($temp+".translateX") ($pos.x);
			setAttr ($temp+".translateY") ($pos.y);
			setAttr ($temp+".translateZ") ($pos.z);
			parent $temp $sel[0];
		}
	refresh;
}
/////////////////////////////////////////////////////////////////创建粒子
global proc string juCreateParticle(string $enitter_input[])
{
	string $nameOfPa[];
	string $nameOfPaTemp=($enitter_input[0]+"Par");
	$nameOfPa=`particle -n $nameOfPaTemp`;
	string $expOfConnectPa="connectDynamic ";
	for ($i in $enitter_input)
		{
		$expOfConnectPa+=("-em "+$i+" ");
		}
	$expOfConnectPa+=$nameOfPa[1];
	//print $expOfConnectPa;
	eval $expOfConnectPa;
	return $nameOfPa[1];
	refresh;
}
global proc create_pa()
{
string $sel[]=`textScrollList -q -si em_list`;
if (`size $sel`>0 )
	{
	string $empTemp[]=`listRelatives -p $sel[0]`;
	string $parName[];
	$parName[1]=`juCreateParticle($sel)`;
	string $tempP[]=`listRelatives -p $parName[1]`;
	$parName[0]=$tempP[0];
	setAttr ($parName[1]+".conserve") 0.95;
//////////////////////////////////////////////添加控制属性
	setAttr ($parName[1]+".particleRenderType") 8;
	addAttr -ln radiusPP -dt doubleArray $parName[1];
	
	addAttr -ln "fireLifeSpan"      -at double -dv 0.5   -min 0 $parName[1];
	addAttr -ln "fireSpeed"         -at double -dv 1   -min 0 $parName[1];
	//addAttr -ln "fireDensity"       -at double -dv 5   -min 0 $parName[1];
	addAttr -ln "fireRadius"        -at double -dv 3   -min 0 $parName[1];
	addAttr -ln "fireRadiusRatio"   -at double -dv .3   -min 0 $parName[1];
	//addAttr -ln "fireIntensity"     -at double -dv 0.2 -min 0 $parName[1];
	addAttr -ln "fireMass"          -at double -dv 0.5 -min 0 $parName[1];
	addAttr -ln "fireMassRatio"     -at double -dv 0.9 -min 0   $parName[1];
	addAttr -ln "fireUpForce"       -at double -dv 6 -min -10 $parName[1];
	addAttr -ln "fireturbulence"     -at double -dv 6 -min 0 $parName[1];
///////////////////////////////////////设置半径

string $pa_arraymap[]=`arrayMapper -target $parName[1] -destAttr radiusPP -inputV ageNormalized -type ramp`;
string $ramp_node[]=`listConnections -type "ramp" $pa_arraymap[0]`;
string $rampTemp=`rename $ramp_node[0] ($parName[0]+"RadiusRamp")`;
setAttr ($rampTemp+".colorEntryList[3].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[0].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[3].position") 1;
setAttr ($rampTemp+".colorEntryList[2].position") 0.98;
setAttr ($rampTemp+".colorEntryList[1].position") 0.02;
setAttr ($rampTemp+".colorEntryList[0].position") 0;
string $exp="{\n"
+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".fireRadius;\n"
+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[2].colorR="+$parName[1]+".fireRadius*"+$parName[1]+".fireRadiusRatio"+";\n"
+$rampTemp+".colorEntryList[2].colorG="+$rampTemp+".colorEntryList[2].colorR;\n"
+$rampTemp+".colorEntryList[2].colorB="+$rampTemp+".colorEntryList[2].colorR;\n"
+"}\n";
expression -s $exp -n "fire_radius_rampexp" -ae 1 -uc all;
////////////////////////////////质量
string $pa_arraymap_1[]=`arrayMapper -target $parName[1] -destAttr mass -inputV ageNormalized -type ramp`;
string $ramp_node_1[]=`listConnections -type "ramp" $pa_arraymap_1[0]`;
$rampTemp=`rename $ramp_node_1[0] ($parName[0]+"MassRamp")`;

setAttr ($rampTemp+".colorEntryList[2].position") 1;
setAttr ($rampTemp+".colorEntryList[1].position") 0.8;
setAttr ($rampTemp+".colorEntryList[0].position") 0;
string $exp="{\n"
+$rampTemp+".colorEntryList[0].colorR="+$parName[1]+".fireMass;\n"
+$rampTemp+".colorEntryList[0].colorG="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[0].colorB="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[2].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
+$rampTemp+".colorEntryList[2].colorG="+$rampTemp+".colorEntryList[2].colorR;\n"
+$rampTemp+".colorEntryList[2].colorB="+$rampTemp+".colorEntryList[2].colorR;\n"
+"}\n";
expression -s $exp -n "fire_mass" -ae 1 -uc all;
//////////////////////////////////寿命
string $exp="{\n"
+$parName[1]+".lifespanPP"+"=(rand(1)+5)*"+$parName[1]+".fireLifeSpan;"
+"\n}";
dynExpression -s $exp -c $parName[1];
setAttr ($parName[1]+".lifespanMode") 3;
parent -a $parName[0] $empTemp[0];
////////////////////////////////////场
///////统一场
string $uniformTemp[]=`uniform -pos 0 0 0 -m 5 -att 0 -dx 0 -dy 1 -dz 0  
			-mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($empTemp[0]+"UniformField")`;
connectDynamic -f $uniformTemp[0] $parName[1];
vector $trTempWrp=`xform -q -ws -rp $empTemp[0]`;
float $trTempWrpX=($trTempWrp.x);/////////板属性
setAttr ($uniformTemp[0]+".translateX") $trTempWrpX;
float $trTempWrpY=($trTempWrp.y);/////////板属性
setAttr ($uniformTemp[0]+".translateY") $trTempWrpY;
float $trTempWrpZ=($trTempWrp.z);/////////板属性
setAttr ($uniformTemp[0]+".translateZ") $trTempWrpZ;

$exp="{\n"
+$uniformTemp[0] +".magnitude="+$parName[1]+".fireSpeed*"+$parName[1]+".fireUpForce;\n"
+"}\n";
expression -s $exp -n "fire_uniform" -ae 1 -uc all;

parent -a $uniformTemp[0] $empTemp[0];
////////扰动场
string $turbulenceTemp[]=`turbulence -pos 0 0 0 -m 5 -att 0 -f 1 -phaseX 0 -phaseY 0 -phaseZ 0 
			-noiseLevel 0 -noiseRatio 0.707  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($empTemp[0]+"TurbulenceField")`;
connectDynamic -f $turbulenceTemp[0] $parName[1];
setAttr ($turbulenceTemp[0]+".translateX") $trTempWrpX;
setAttr ($turbulenceTemp[0]+".translateY") $trTempWrpY;
setAttr ($turbulenceTemp[0]+".translateZ") $trTempWrpZ;

$exp="{\n"
+$turbulenceTemp[0] +".translateY=time*"+$parName[1]+".fireSpeed;\n"
+$turbulenceTemp[0] +".phaseZ=time;\n"
+$turbulenceTemp[0] +".magnitude="+$parName[1]+".fireturbulence;\n"

+"}\n";
expression -s $exp -n "fire_turbulence" -ae 1 -uc all;
parent -a $turbulenceTemp[0] $empTemp[0];

/////////放射场
string $radialTemp[]=`radial -pos 0 0 0 -m -0.2 -att 0.3 -typ 0  
			-mxd 20  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($empTemp[0]+"RadialField")`;
setAttr ($radialTemp[0]+".translateX") $trTempWrpX;
setAttr ($radialTemp[0]+".translateY") ($trTempWrpY+10);
setAttr ($radialTemp[0]+".translateZ") $trTempWrpZ;

connectDynamic -f $radialTemp[0] $parName[1];

parent -a $radialTemp[0] $empTemp[0];
////控制器

string $LocatorTemp[]=`spaceLocator -p 0 0 0 -n ($empTemp[0]+"CtrlHandle")`;
setAttr ($LocatorTemp[0]+".translateX") $trTempWrpX;
setAttr ($LocatorTemp[0]+".translateY") ($trTempWrpY+10);
setAttr ($LocatorTemp[0]+".translateZ") $trTempWrpZ;
parent -a $LocatorTemp[0] $empTemp[0];
///////////////////////////////////材质
string $cloudShading=`shadingNode -asShader particleCloud -n ($empTemp[0]+"fire_cloud_m")`;
string $cloudSet=`sets -renderable true -noSurfaceShader true -empty -name ($empTemp[0]+"fire_cloud_mSG")`;
connectAttr -f ($cloudShading+".outColor") ($cloudSet+".volumeShader");
select -r $parName[1];
sets -e -forceElement $cloudSet;
setAttr ($cloudShading+".density") 0.5;
setAttr ($cloudShading+".translucence") 0.711;
setAttr ($cloudShading+".noise") 0.5;
setAttr ($cloudShading+".noiseFreq") 0.5;
setAttr ($cloudShading+".noiseAspect") -0.2;
setAttr ($cloudShading+".glowIntensity") 0.05;
setAttr ($cloudShading+".diffuseCoeff") .3;
setAttr ($cloudShading+".translucenceCoeff") 0.2;

///////云材质基本色
string $colorRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"ColorRamp")`;
string $colorRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"ColorRampTX")`;
connectAttr ($colorRampTempTX+".outUV") ($colorRampTemp+".uv");
connectAttr ($colorRampTempTX+".outUvFilterSize") ($colorRampTemp+".uvFilterSize");
connectAttr -f ($colorRampTemp+".outColor") ($cloudShading+".color");
string $paSampInfoTemp=`shadingNode -asUtility particleSamplerInfo -n ($cloudShading+"paSampInfo")`;
connectAttr -f ($paSampInfoTemp+".outUvCoord") ($colorRampTempTX+".uvCoord");
setAttr ($colorRampTemp+".colorEntryList[0].color") -type double3 1 0.886317 0.641 ;
setAttr ($colorRampTemp+".colorEntryList[0].position") 0 ;
setAttr ($colorRampTemp+".colorEntryList[1].color") -type double3 0.844 0.509776 0.10128 ;
setAttr ($colorRampTemp+".colorEntryList[1].position") 0.5 ;
setAttr ($colorRampTemp+".colorEntryList[2].color") -type double3 0.851 0.31531 0.089355 ;
setAttr ($colorRampTemp+".colorEntryList[2].position") 1 ;
////////云材质透明
string $TranRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"TranRamp")`;
string $TranRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"TranRampTX")`;
connectAttr ($TranRampTempTX+".outUV") ($TranRampTemp+".uv");
connectAttr ($TranRampTempTX+".outUvFilterSize") ($TranRampTemp+".uvFilterSize");
connectAttr -f ($TranRampTemp+".outColor") ($cloudShading+".transparency");
connectAttr -f ($paSampInfoTemp+".outUvCoord") ($TranRampTempTX+".uvCoord");
setAttr ($TranRampTemp+".colorEntryList[0].color") -type double3 0.835 0.835 0.835 ;
setAttr ($TranRampTemp+".colorEntryList[0].position") 0 ;
setAttr ($TranRampTemp+".colorEntryList[1].color") -type double3 0.89 0.89 0.89  ;
setAttr ($TranRampTemp+".colorEntryList[1].position") 0.175 ;
setAttr ($TranRampTemp+".colorEntryList[2].color") -type double3 0.950 0.950 0.950 ;
setAttr ($TranRampTemp+".colorEntryList[2].position") 0.7 ;
////////云材质自发光
string $IncanRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"IncanRamp")`;
string $IncanRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"IncanRampTX")`;
connectAttr ($IncanRampTempTX+".outUV") ($IncanRampTemp+".uv");
connectAttr ($IncanRampTempTX+".outUvFilterSize") ($IncanRampTemp+".uvFilterSize");
connectAttr -f ($IncanRampTemp+".outColor") ($cloudShading+".incandescence");
connectAttr -f ($paSampInfoTemp+".outUvCoord") ($IncanRampTempTX+".uvCoord");
setAttr ($IncanRampTemp+".colorEntryList[0].color") -type double3 0.120 0.120 0.120 ;
setAttr ($IncanRampTemp+".colorEntryList[0].position") 0 ;
setAttr ($IncanRampTemp+".colorEntryList[1].color") -type double3 0.400 0.400 0.400  ;
setAttr ($IncanRampTemp+".colorEntryList[1].position") 0.42;
setAttr ($IncanRampTemp+".colorEntryList[2].color") -type double3 0.100 0.100 0.100 ;
setAttr ($IncanRampTemp+".colorEntryList[2].position") 1 ;
////////云斑点
string $CraterTemp=`shadingNode -asTexture crater -n ($cloudShading+"Crater")`;
string $CraterTempTX=`shadingNode -asUtility place3dTexture -n ($cloudShading+"CraterTX")`;
connectAttr ($CraterTempTX+".wim[0]") ($CraterTemp+".pm");
//connectAttr -f ($CraterTemp+".outColor") ($cloudShading+".blobMap");
setAttr ($CraterTemp+".channel1") -type double3 0.694 0.472805 0.228326 ;
setAttr ($CraterTemp+".channel2") -type double3 0.413 0.224693 0.14042  ;
setAttr ($CraterTemp+".channel3") -type double3 0.2 0.117778 0.0392  ;
setAttr ($CraterTemp+".shaker") 12;
setAttr ($CraterTemp+".melt") 0.05;
setAttr ($CraterTemp+".frequency") 0.72;
setAttr ($CraterTemp+".balance") 0.57;;
setAttr ($CraterTempTX+".scaleX") 2;
setAttr ($CraterTempTX+".scaleY") 5;
setAttr ($CraterTempTX+".scaleZ") 2;
setAttr ($CraterTempTX+".translateX") $trTempWrpX;
setAttr ($CraterTempTX+".translateY") $trTempWrpY;
setAttr ($CraterTempTX+".translateZ") $trTempWrpZ;

string $CraterTemp_1=`shadingNode -asTexture crater -n ($cloudShading+"Crater_1")`;
string $CraterTemp_1TX=`shadingNode -asUtility place3dTexture -n ($cloudShading+"Crater_1TX")`;
connectAttr ($CraterTemp_1TX+".wim[0]") ($CraterTemp_1+".pm");


//connectAttr -f ($CraterTemp_1+".outColor") ($cloudShading+".blobMap");
setAttr ($CraterTemp_1+".channel1") -type double3 0.694 0.472805 0.228326 ;
setAttr ($CraterTemp_1+".channel2") -type double3 0.413 0.224693 0.14042  ;
setAttr ($CraterTemp_1+".channel3") -type double3 0.2 0.117778 0.0392  ;
setAttr ($CraterTemp_1+".shaker") 12;
setAttr ($CraterTemp_1+".melt") 0.05;
setAttr ($CraterTemp_1+".frequency") 0.72;
setAttr ($CraterTemp_1+".balance") 0.57;;
setAttr ($CraterTemp_1TX+".scaleX") 2;
setAttr ($CraterTemp_1TX+".scaleY") 5;
setAttr ($CraterTemp_1TX+".scaleZ") 2;
setAttr ($CraterTemp_1TX+".translateX") $trTempWrpX;
setAttr ($CraterTemp_1TX+".translateY") $trTempWrpY;
setAttr ($CraterTemp_1TX+".translateZ") $trTempWrpZ;

string $CraterRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"CraterRamp")`;
string $CraterRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"CraterRampTX")`;
connectAttr ($CraterRampTempTX+".outUV") ($CraterRampTemp+".uv");
connectAttr ($CraterRampTempTX+".outUvFilterSize") ($CraterRampTemp+".uvFilterSize");
connectAttr -f ($CraterRampTemp+".outColor") ($cloudShading+".blobMap");
connectAttr -f ($paSampInfoTemp+".outUvCoord") ($CraterRampTempTX+".uvCoord");
setAttr ($CraterRampTemp+".colorEntryList[0].color") -type double3 0.120 0.120 0.120 ;
setAttr ($CraterRampTemp+".colorEntryList[0].position") 0 ;
setAttr ($CraterRampTemp+".colorEntryList[1].color") -type double3 0.400 0.400 0.400  ;
setAttr ($CraterRampTemp+".colorEntryList[1].position") 0.25;
setAttr ($CraterRampTemp+".colorEntryList[2].color") -type double3 0.100 0.100 0.100 ;
setAttr ($CraterRampTemp+".colorEntryList[2].position") 1 ;
connectAttr -force ($CraterTemp+".outColor") ($CraterRampTemp+".colorEntryList[0].color");
connectAttr -force ($CraterTemp_1+".outColor") ($CraterRampTemp+".colorEntryList[1].color");
connectAttr -force ($CraterTemp_1+".outColor") ($CraterRampTemp+".colorEntryList[2].color");
parent -a $CraterTempTX $empTemp[0];
parent -a $CraterTemp_1TX $empTemp[0];

/////////////////////////////添加表达式
$exp="{\n"
+"vector $pos0=`xform -q -ws -rp "+$LocatorTemp[0]+"`;\n"
+"vector $pos1=`xform -q -ws -rp "+$empTemp[0]+"`;\n"
+"vector $pos2=`xform -q -os -rp "+$empTemp[0]+"`;\n"
+"vector $pos=$pos0-$pos1;\n"
+"vector $myangs=`angleBetween -er -v1 0 1 0 -v2 ($pos.x) ($pos.y) ($pos.z)`;\n"
+$CraterTemp_1TX+".rotateX=($myangs.x);\n"
+$CraterTemp_1TX+".rotateY=($myangs.y);\n"
+$CraterTemp_1TX+".rotateZ=($myangs.z);\n"
+"vector $unitPos=unit($pos);\n"
+$CraterTemp_1TX+".translateX=time*0.7*"+$uniformTemp[0]+".magnitude*($unitPos.x)+($pos2.x);\n"
+$CraterTemp_1TX+".translateY=time*0.7*"+$uniformTemp[0]+".magnitude*($unitPos.y)+($pos2.y);\n"
+$CraterTemp_1TX+".translateZ=time*0.7*"+$uniformTemp[0]+".magnitude*($unitPos.z)+($pos2.z);\n"
+$CraterTemp_1TX+".scaleX="+$parName[1]+".fireRadius*0.75;\n"
+$CraterTemp_1TX+".scaleY="+$parName[1]+".fireRadius*2.2;\n"
+$CraterTemp_1TX+".scaleZ="+$parName[1]+".fireRadius*0.75;\n"

+$CraterTempTX+".translateY=time*0.7*"+$uniformTemp[0]+".magnitude*($unitPos.y);\n"
+$CraterTempTX+".scaleX="+$parName[1]+".fireRadius*0.75;\n"
+$CraterTempTX+".scaleY="+$parName[1]+".fireRadius*2.2;\n"
+$CraterTempTX+".scaleZ="+$parName[1]+".fireRadius*0.75;\n"

+$uniformTemp[0]+".directionX=($unitPos.x);\n"
+$uniformTemp[0]+".directionY=($unitPos.y);\n"
+$uniformTemp[0]+".directionZ=($unitPos.z);\n"
+$radialTemp[0]+".translateX="+$LocatorTemp[0]+".translateX+noise(time+300);\n"
+$radialTemp[0]+".translateY="+$LocatorTemp[0]+".translateY+noise(time+200);\n"
+$radialTemp[0]+".translateZ="+$LocatorTemp[0]+".translateZ+noise(time);\n"
+"}\n";
expression -s $exp -n "fire_text_exp" -ae 1 -uc all;

  }
refresh;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////建立云烟
global proc  create_sm()
{
string $sel_list[]=`textScrollList -q -si pa_list`;
//string $sel[]=`ls -sl`;
string $sel[]=`listRelatives -p $sel_list[0]`;
select -cl ;
for ($xx in $sel)
{select -tgl $xx;}
string $emitTemp[]=`emitter -type direction -r 2 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 
                            -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 0 -dy 1 -dz 0 -sp 0`;
$emitTemp[1]=`rename $emitTemp[1] ($sel[0]+"smoke")`;
string $parName[]=`particle -n ("clSmoke_"+$emitTemp[0])`;
connectDynamic -em $emitTemp[1] $parName[0];

  setAttr ($parName[1]+".lifespanMode") 2;
  setAttr ($parName[1]+".lifespan") 5.5;
  setAttr ($parName[1]+".lifespanRandom") 1;
  setAttr ($parName[1]+".particleRenderType") 8;
  addAttr -is true -ln "betterIllumination" -at bool -dv false $parName[1];
  setAttr ($parName[1]+".betterIllumination") 1;
	
	string $uniformTemp[]=`listConnections -type uniformField ($sel[0]+"Shape")`;
	string $turbulenceTemp[]=`listConnections -type turbulenceField ($sel[0]+"Shape")`;
	if (`objExists $uniformTemp[0]`)
	connectDynamic -f $uniformTemp[0] $parName[0]; 
	if (`objExists $turbulenceTemp[0]`)
	connectDynamic -f $turbulenceTemp[0] $parName[0]; 
  setAttr ($parName[1]+".conserve") 0.95;

string $reTemp[]=`listRelatives -p $sel[0]`;
if (`objExists $reTemp[0]`)
parent -a $parName[0] $reTemp[0];
//////////////////////////////////////////////添加控制属性
addAttr -ln radiusPP -dt doubleArray $parName[1];

addAttr -ln "smokeLifeSpan"      -at double -dv 1   -min 0 $parName[1];
addAttr -ln "smokeSpeed"         -at double -dv 1   -min 0 $parName[1];
addAttr -ln "smokeRadius"        -at double -dv 2   -min 0 $parName[1];
addAttr -ln "smokeRadiusRatio"   -at double -dv 3   -min 0 $parName[1];
addAttr -ln "smokeMass"          -at double -dv 0.5 -min 0 $parName[1];
addAttr -ln "smokeMassRatio"     -at double -dv 0.9 -min 0 $parName[1];

///////////////////////////////////////设置半径

string $pa_arraymap[]=`arrayMapper -target $parName[1] -destAttr radiusPP -inputV ageNormalized -type ramp`;
string $ramp_node[]=`listConnections -type "ramp" $pa_arraymap[0]`;
string $rampTemp=`rename $ramp_node[0] ($parName[0]+"RadiusRamp")`;
setAttr ($rampTemp+".colorEntryList[0].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[2].color") -type double3 1 1 1;
setAttr ($rampTemp+".colorEntryList[2].position") 1;
setAttr ($rampTemp+".colorEntryList[1].position") 0.98;
setAttr ($rampTemp+".colorEntryList[0].position") 0;
string $exp="{\n"
+$rampTemp+".colorEntryList[0].colorR="+$parName[1]+".smokeRadius;\n"
+$rampTemp+".colorEntryList[0].colorG="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[0].colorB="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".smokeRadius*"+$parName[1]+".smokeRadiusRatio"+";\n"
+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
+"}\n";
expression -s $exp -n "smoke_radius_rampexp" -ae 1 -uc all;
////////////////////////////////质量
string $pa_arraymap_1[]=`arrayMapper -target $parName[1] -destAttr mass -inputV ageNormalized -type ramp`;
string $ramp_node_1[]=`listConnections -type "ramp" $pa_arraymap_1[0]`;
$rampTemp=`rename $ramp_node_1[0] ($parName[0]+"MassRamp")`;

setAttr ($rampTemp+".colorEntryList[2].position") 1;
setAttr ($rampTemp+".colorEntryList[1].position") 0.8;
setAttr ($rampTemp+".colorEntryList[0].position") 0;
string $exp="{\n"
+$rampTemp+".colorEntryList[0].colorR="+$parName[1]+".smokeMass;\n"
+$rampTemp+".colorEntryList[0].colorG="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[0].colorB="+$rampTemp+".colorEntryList[0].colorR;\n"
+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".smokeMass*"+$parName[1]+".smokeMassRatio"+";\n"
+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
+$rampTemp+".colorEntryList[2].colorR="+$parName[1]+".smokeMass*"+$parName[1]+".smokeMassRatio"+";\n"
+$rampTemp+".colorEntryList[2].colorG="+$rampTemp+".colorEntryList[2].colorR;\n"
+$rampTemp+".colorEntryList[2].colorB="+$rampTemp+".colorEntryList[2].colorR;\n"
+"}\n";
expression -s $exp -n "smoke_mass" -ae 1 -uc all;
//////////////////////////////////寿命
string $exp="{\n"
+$parName[1]+".lifespanPP"+"=(rand(1)+5)*"+$parName[1]+".smokeLifeSpan;"
+"\n}";
dynExpression -s $exp -c $parName[1];
setAttr ($parName[1]+".lifespanMode") 3;

////////////////////////////////////场
/////////放射场
string $radialTemp[]=`radial -pos 0 0 0 -m 0.2 -att 1 -typ 0  
			-mxd 20  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($emitTemp[1]+"RadialField")`;

connectDynamic -f $radialTemp[0] $parName[1];
select -cl;
select -tgl $parName[0];
select -tgl $radialTemp[0];
AttachSelectedAsSourceField;



///////////////////////////////////添加发射比率
addPP -atr rate $emitTemp[1] ;
string $pa_arraymap_1[]=`arrayMapper -target ($sel[0]+"Shape") -destAttr ($emitTemp[1]+"RatePP") -inputV ageNormalized -type ramp`;
string $ramp_node_1[]=`listConnections -type "ramp" $pa_arraymap_1[0]`;
string $rampTemp_1=`rename $ramp_node_1[0] ($parName[0]+"RatePPRamp")`;
setAttr ($rampTemp_1+".interpolation") 0;
setAttr ($rampTemp_1+".colorEntryList[0].color") -type double3 0 0 0;
setAttr ($rampTemp_1+".colorEntryList[1].color") -type double3 2 2 2;
setAttr ($rampTemp_1+".colorEntryList[2].color") -type double3 2 2 2;
setAttr ($rampTemp_1+".colorEntryList[2].position") 1;
setAttr ($rampTemp_1+".colorEntryList[1].position") 0.5;
setAttr ($rampTemp_1+".colorEntryList[0].position") 0;



//////////////////////////////////////材质
string $cloudShading=`shadingNode -asShader particleCloud -n ($emitTemp[0]+"smoke_m")`;
string $cloudSet=`sets -renderable true -noSurfaceShader true -empty -name ($emitTemp[0]+"smoke_mSG")`;
connectAttr -f ($cloudShading+".outColor") ($cloudSet+".volumeShader");
select -r $parName[1];
sets -e -forceElement $cloudSet;
setAttr ($cloudShading+".density") 0.5;
setAttr ($cloudShading+".translucence") 0.1;
setAttr ($cloudShading+".roundness") 0.09;
setAttr ($cloudShading+".noise") 1;
setAttr ($cloudShading+".noiseFreq") 0.15;
setAttr ($cloudShading+".noiseAspect") -0.14;
setAttr ($cloudShading+".glowIntensity") 0;
setAttr ($cloudShading+".diffuseCoeff") 1.5;
setAttr ($cloudShading+".translucenceCoeff") 0.7;
setAttr ($cloudShading+".color") -type double3 0.15 0.15 0.15 ;
setAttr ($cloudShading+".surfaceColor") -type double3 0.175 0.175  0.175;
setAttr ($cloudShading+".surfaceShadingShadow") 1;

/////////////////////////////////////透明
string $colorRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"ColorRamp")`;
string $colorRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"ColorRampTX")`;
connectAttr ($colorRampTempTX+".outUV") ($colorRampTemp+".uv");
connectAttr ($colorRampTempTX+".outUvFilterSize") ($colorRampTemp+".uvFilterSize");
connectAttr -f ($colorRampTemp+".outColor") ($cloudShading+".transparency");
string $paSampInfoTemp=`shadingNode -asUtility particleSamplerInfo -n ($cloudShading+"paSampInfo")`;
connectAttr -f ($paSampInfoTemp+".outUvCoord") ($colorRampTempTX+".uvCoord");
setAttr ($colorRampTemp+".colorEntryList[0].color") -type double3 0.93 0.93 0.93;
setAttr ($colorRampTemp+".colorEntryList[0].position") 0 ;
setAttr ($colorRampTemp+".colorEntryList[1].color") -type double3 0.8 0.8 0.8 ;
setAttr ($colorRampTemp+".colorEntryList[1].position") 0.45 ;
setAttr ($colorRampTemp+".colorEntryList[2].color") -type double3 0.9 0.9 0.9 ;
setAttr ($colorRampTemp+".colorEntryList[2].position") .86 ;
setAttr ($colorRampTemp+".colorEntryList[3].color") -type double3 1 1 1 ;
setAttr ($colorRampTemp+".colorEntryList[3].position") 1 ;
//////////////////////////////////////斑点
string $CraterTemp=`shadingNode -asTexture crater -n ($cloudShading+"Crater")`;
string $CraterTempTX=`shadingNode -asUtility place3dTexture -n ($cloudShading+"CraterTX")`;
connectAttr ($CraterTempTX+".wim[0]") ($CraterTemp+".pm");
//connectAttr -f ($CraterTemp+".outColor") ($cloudShading+".blobMap");
setAttr ($CraterTemp+".channel1") -type double3 0.48 0.48 0.48 ;
setAttr ($CraterTemp+".channel2") -type double3 0.32 0.32 0.32 ;
setAttr ($CraterTemp+".channel3") -type double3 0.28 0.28 0.28 ;
setAttr ($CraterTemp+".shaker") 1.5;
setAttr ($CraterTemp+".melt") 0.0;
setAttr ($CraterTemp+".frequency") 2;
setAttr ($CraterTemp+".balance") 0;;
setAttr ($CraterTempTX+".scaleX") 2;
setAttr ($CraterTempTX+".scaleY") 3;
setAttr ($CraterTempTX+".scaleZ") 2;
vector $trTempWrp=`xform -q -ws -rp $emitTemp[0]`;
float $trTempWrpX=($trTempWrp.x);/////////板属性
setAttr ($uniformTemp[0]+".translateX") $trTempWrpX;
float $trTempWrpY=($trTempWrp.y);/////////板属性
setAttr ($uniformTemp[0]+".translateY") $trTempWrpY;
float $trTempWrpZ=($trTempWrp.z);/////////板属性
setAttr ($uniformTemp[0]+".translateZ") $trTempWrpZ;
setAttr ($CraterTempTX+".translateX") $trTempWrpX;
setAttr ($CraterTempTX+".translateY") $trTempWrpY;
setAttr ($CraterTempTX+".translateZ") $trTempWrpZ;

string $nodeTemp[]=`listRelatives -p $sel[0]`;
string $nodeTemp01[]=`listRelatives -type place3dTexture -c $nodeTemp[0]`;

connectAttr -f ($CraterTemp+".outColor") ($cloudShading+".blobMap");
parent -a $CraterTempTX $reTemp[0];
/////////////////////////////添加表达式

$exp="{\n"
+$CraterTempTX+".translateX="+$nodeTemp01[1]+".translateX*1.2;\n"
+$CraterTempTX+".translateY="+$nodeTemp01[1]+".translateY*1.2;\n"
+$CraterTempTX+".translateZ="+$nodeTemp01[1]+".translateZ*1.2;\n"
+$CraterTempTX+".rotateX="+$nodeTemp01[1]+".rotateX;\n"
+$CraterTempTX+".rotateY="+$nodeTemp01[1]+".rotateY;\n"
+$CraterTempTX+".rotateZ="+$nodeTemp01[1]+".rotateZ;\n"
+"}\n";
expression -s $exp -n "fire_text_exp" -ae 1 -uc all;
refresh;
}
/////////////////////////////////创建精灵粒子
global proc J_crSpritPa()
{
	print "a";
}
global proc J_crSpritsSmoke(string $objToEmitte)
{
string $emitTemp[]=`emitter -type omni -r 2 -sro 0 -nuv 0 -cye none -cyi 1 -spd 3 
                            -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 0 -dy 1 -dz 0 -sp 0 $objToEmitte`;
$emitTemp[1]=`rename $emitTemp[1] ($objToEmitte+"_smoke")`;
string $parName[]=`particle -n ("J_"+$emitTemp[0])`;
connectDynamic -em $emitTemp[1] $parName[0];

  setAttr ($parName[1]+".lifespanMode") 3;
  setAttr ($parName[1]+".lifespan") 5.5;
  setAttr ($parName[1]+".lifespanRandom") 1;
  setAttr ($parName[1]+".particleRenderType") 5;
  setAttr ($parName[1]+".inheritFactor") 0.2;

  setAttr ($parName[1]+".conserve") 0.95;
  

//////////////////////////////////////////////添加控制属性
addAttr -ln radiusPP -dt doubleArray $parName[1];

addAttr -ln "smokeLifeSpan"      -at double -dv 1   -min 0 $parName[1];
addAttr -ln "smokeOpacity"       -at double -dv 0.5 -min 0 $parName[1];
addAttr -ln "smokeDissipation"         -at double -dv 2   -min 0 $parName[1];
addAttr -ln "smokeScale"    -at double -dv 1   -min 0 $parName[1];
addAttr -ln "smokeTwist"         -at double -dv 1   -min 0 $parName[1];
addAttr -ln "smokeMass"          -at double -dv 0.5 -min 0 $parName[1];


string $parShap[]=`listRelatives -s $parName[1]`;
addAttr -ln spriteNumPP    -dt doubleArray $parName[1];
addAttr -ln spriteTwistPP  -dt doubleArray $parName[1];
addAttr -ln spriteScaleXPP -dt doubleArray $parName[1];
addAttr -ln spriteScaleYPP -dt doubleArray $parName[1];
addAttr -ln "opacityPP"    -dt doubleArray $parName[1];
addAttr -ln "opacityRamp"    -dt doubleArray $parName[1];
addAttr -ln rand_v  -dt doubleArray $parName[1];
addAttr -ln dissipationPP  -dt doubleArray $parName[1];
addAttr -ln dissipationRamp  -dt doubleArray $parName[1];
///////////////////////////////////////设置半径

string $pa_arraymap[]=`arrayMapper -target $parName[1] -destAttr dissipationRamp -inputV ageNormalized -type ramp`;
string $ramp_node[]=`listConnections -type "ramp" $pa_arraymap[0]`;
string $rampTemp=`rename $ramp_node[0] ($parName[0]+"dissipationRamp")`;
setAttr ($rampTemp+".colorEntryList[0].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[1].color") -type double3 0.5 0.5 0.5;
setAttr ($rampTemp+".colorEntryList[2].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[2].position") 1;
setAttr ($rampTemp+".colorEntryList[1].position") 0.5;
setAttr ($rampTemp+".colorEntryList[0].position") 0;

///////////////////////////////////////设置不透明

string $pa_arraymapOp[]=`arrayMapper -target $parName[1] -destAttr opacityRamp -inputV ageNormalized -type ramp`;
string $ramp_nodeOp[]=`listConnections -type "ramp" $pa_arraymapOp[0]`;
string $rampTemp=`rename $ramp_node[0] ($parName[0]+"opacityRamp")`;
setAttr ($rampTemp+".colorEntryList[0].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[1].color") -type double3 0.5 0.5 0.5;
setAttr ($rampTemp+".colorEntryList[2].color") -type double3 0 0 0;
setAttr ($rampTemp+".colorEntryList[2].position") 1;
setAttr ($rampTemp+".colorEntryList[1].position") 0.5;
setAttr ($rampTemp+".colorEntryList[0].position") 0;

//创建时表达式
string $exp="{\n"
+$parName[1]+".spriteScaleYPP="+$parName[1]+".spriteScaleXPP="+$parName[1]+".smokeScale*rand(1,2)"+";\n"
+$parName[1]+".lifespanPP="+$parName[1]+".smokeLifeSpan*rand(1,2)"+";\n"
+$parName[1]+".dissipationPP="+$parName[1]+".smokeDissipation*rand(1,2)"+";\n"
+$parName[1]+".spriteTwistPP=rand(360)"+";\n"
+$parName[1]+".opacityPP=0"+";\n"
+"}\n";
dynExpression  -s $exp -n "smoke_Scale_rampexp" -c $parName[1];

//运行时表达式
string $exp="{\n"
+$parName[1]+".spriteScaleYPP="+$parName[1]+".spriteScaleXPP+="+$parName[1]+".dissipationRamp*"+$parName[1]+".dissipationPP"+";\n"
+$parName[1]+".opacityPP="+$parName[1]+".opacityRamp*"+$parName[1]+".smokeOpacity*(noise(id)*0.48+0.5)"+";\n"

+$parName[1]+".spriteTwistPP+="+$parName[1]+".smokeTwist*noise(id)"+";\n"

+"}\n";
dynExpression  -s $exp -n "smoke_Scale_rampexp" -rbd $parName[1];


//////////////////////////////////////材质
string $spriteShading=`shadingNode -asShader lambert -n ($emitTemp[0]+"smoke_m")`;
string $spriteSet=`sets -renderable true -noSurfaceShader true -empty -name ($emitTemp[0]+"smoke_mSG")`;
connectAttr -f ($spriteShading+".outColor") ($spriteSet+".surfaceShader");
select -r $parName[1];
sets -e -forceElement $spriteSet;
/////贴图

string $fileTemp=`shadingNode -asTexture file -n ($spriteShading+"file")`;
string $p2dTemp=`shadingNode -asUtility place2dTexture -n ($spriteShading+"p2d")`;
connectAttr -f ($p2dTemp+".coverage") ($fileTemp+".coverage");
connectAttr -f ($p2dTemp+".translateFrame") ($fileTemp+".translateFrame");
connectAttr -f ($p2dTemp+".rotateFrame") ($fileTemp+".rotateFrame");
connectAttr -f ($p2dTemp+".mirrorU") ($fileTemp+".mirrorU");
connectAttr -f ($p2dTemp+".mirrorV") ($fileTemp+".mirrorV");
connectAttr -f ($p2dTemp+".stagger") ($fileTemp+".stagger");
connectAttr -f ($p2dTemp+".wrapU") ($fileTemp+".wrapU");
connectAttr -f ($p2dTemp+".wrapV") ($fileTemp+".wrapV");
connectAttr -f ($p2dTemp+".repeatUV") ($fileTemp+".repeatUV");
connectAttr -f ($p2dTemp+".offset") ($fileTemp+".offset");
connectAttr -f ($p2dTemp+".rotateUV") ($fileTemp+".rotateUV");
connectAttr -f ($p2dTemp+".noiseUV") ($fileTemp+".noiseUV");
connectAttr -f ($p2dTemp+".vertexUvOne") ($fileTemp+".vertexUvOne");
connectAttr -f ($p2dTemp+".vertexUvTwo") ($fileTemp+".vertexUvTwo");
connectAttr -f ($p2dTemp+".vertexUvThree") ($fileTemp+".vertexUvThree");
connectAttr -f ($p2dTemp+".vertexCameraOne") ($fileTemp+".vertexCameraOne");
connectAttr -f ($p2dTemp+".outUV") ($fileTemp+".uv");
connectAttr -f ($p2dTemp+".outUvFilterSize") ($fileTemp+".uvFilterSize");
setAttr -type "string" ($fileTemp+".fileTextureName") "your texture file";
connectAttr -f ($fileTemp+".outTransparency") ($spriteShading+".transparency");
connectAttr -f ($fileTemp+".outColor") ($spriteShading+".color");


////////////////////////////添加表达式

$exp="{\n"
+$fileTemp+".frameExtension=frame%12;\n"
+"}\n";
expression -s $exp -n "file_exp" -ae 1 -uc all;

setAttr ($fileTemp+".useFrameExtension") 1;
setAttr ($fileTemp+".useHardwareTextureCycling") 1;
setAttr ($fileTemp+".startCycleExtension") 0;
setAttr ($fileTemp+".endCycleExtension") 12;

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc crTorchPa()///////////////////火把
	{
	string $sel[]=`ls -sl`;
	vector $emiPos=`xform -q -ws -rp $sel[0]`;
	string $cylinderTemp[] =`cylinder -p ($emiPos.x) ($emiPos.y+0.55) ($emiPos.z) -ax 0 1 0 -ssw 0 -esw 360 -r 0.05 -hr 4.6 -d 3 -ut 0 -tol 0.01 -s 8 -nsp 4 -ch 1 -n ($sel[0]+"emiSur")`;
	rebuildSurface -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kc 0 -su 4 -du 3 -sv 8 -dv 3 -tol 0.1 -fr 0  -dir 2 $cylinderTemp[0];
	FreezeTransformations;
	CenterPivot;
	string $nxxtemp[];
	string $emiTemp[]=`emitter -type surface -r 200 -sro 0 -nuv 1 -cye none -cyi 1 -spd .2 -srn 0 -nsp .2 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0`;
	$emiTemp[1]=`rename $emiTemp[1] ($sel[0]+"emitter")`;
	parent -a $cylinderTemp[0] $sel[0];
	/*	textScrollList -e -ra  em_list;
			for ($xxx in ($all_emi=`ls -type pointEmitter`))
					{
					textScrollList -e -a $xxx em_list;
					}	
	*/
	
	
	string $emitRampTemp=`shadingNode -asTexture ramp -n ($emiTemp[1]+"Ramp")`;
	string $emitRampTempTX=`shadingNode -asUtility place2dTexture -n ($emiTemp[1]+"RampTX")`;
	connectAttr ($emitRampTempTX+".outUV") ($emitRampTemp+".uv");
	connectAttr ($emitRampTempTX+".outUvFilterSize") ($emitRampTemp+".uvFilterSize");
	connectAttr -force ($emitRampTemp+".outColor") ($emiTemp[1]+".textureRate");
	setAttr ($emitRampTemp+".colorEntryList[0].color") -type double3 0 0 0 ;
	setAttr ($emitRampTemp+".colorEntryList[0].position") 0 ;
	setAttr ($emitRampTemp+".colorEntryList[1].color") -type double3 1 1 1 ;
	setAttr ($emitRampTemp+".colorEntryList[1].position") 0.4 ;
	setAttr ($emitRampTemp+".colorEntryList[2].color") -type double3 1 1 1 ;
	setAttr ($emitRampTemp+".colorEntryList[2].position") 0.6 ;
	setAttr ($emitRampTemp+".colorEntryList[3].color") -type double3 0 0 0 ;
	setAttr ($emitRampTemp+".colorEntryList[3].position") 1 ;
	setAttr ($emitRampTemp+".type") 1;
	setAttr ($emiTemp[1]+".enableTextureRate") 1;
		//string $sel[]=`ls -sl`;
		string $parName[]=`particle -n ($emiTemp[1]+"Cloud")`;
		connectDynamic -em $emiTemp[1] $parName[0];
		
	setAttr ($parName[1]+".conserve") 0.95;
	//////////////////////////////////////////////添加控制属性
	setAttr ($parName[1]+".particleRenderType") 8;
	addAttr -ln radiusPP -dt doubleArray $parName[1];
	addAttr -ln parentV -dt doubleArray $parName[1];
	addAttr -ln parentU -dt doubleArray $parName[1];
	addAttr -ln "fireLifeSpan"       -at double -dv 1   -min 0   $parName[1];
	addAttr -ln "fireSpeed"          -at double -dv 1   -min 0   $parName[1];
	//addAttr -ln "fireDensity"      -at double -dv 5   -min 0   $parName[1];
	addAttr -ln "fireRadius"         -at double -dv 1   -min 0   $parName[1];
	addAttr -ln "fireRadiusRatio"    -at double -dv 0.5 -min 0   $parName[1];
	//addAttr -ln "fireIntensity"    -at double -dv 0.2 -min 0   $parName[1];
	addAttr -ln "fireMass"           -at double -dv 1   -min 0   $parName[1];
	addAttr -ln "fireMassRatio"      -at double -dv 0.9 -min 0   $parName[1];
	addAttr -ln "fireUpForce"        -at double -dv 1   -min -10 $parName[1];
	addAttr -ln "fireFollowForce"    -at double -dv 1   -min -10 $parName[1];
	addAttr -ln "fireturbulence"     -at double -dv 1   -min 0   $parName[1];
	addAttr -ln "disSpeed"     -at double -dv 0   -min -20 $parName[1];
	addAttr -ln "disDirection"       -at double3  $parName[1];
	addAttr -ln "disDirectionX"      -at double -p disDirection  $parName[1];
	addAttr -ln "disDirectionY"      -at double -p disDirection  $parName[1];
	addAttr -ln "disDirectionZ"      -at double -p disDirection  $parName[1];
	
	///////////////////////////////////////设置半径
	
	string $pa_arraymap[]=`arrayMapper -target $parName[1] -destAttr radiusPP -inputV ageNormalized -type ramp`;
	string $ramp_node[]=`listConnections -type "ramp" $pa_arraymap[0]`;
	string $rampTemp=`rename $ramp_node[0] ($parName[0]+"RadiusRamp")`;
	setAttr ($rampTemp+".colorEntryList[3].color") -type double3 0 0 0;
	setAttr ($rampTemp+".colorEntryList[0].color") -type double3 0 0 0;
	setAttr ($rampTemp+".colorEntryList[3].position") 1;
	setAttr ($rampTemp+".colorEntryList[2].position") 0.98;
	setAttr ($rampTemp+".colorEntryList[1].position") 0.02;
	setAttr ($rampTemp+".colorEntryList[0].position") 0;
	string $exp="{\n"
	+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".fireRadius*0.1;\n"
	+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
	+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
	+$rampTemp+".colorEntryList[2].colorR="+$parName[1]+".fireRadius*"+$parName[1]+".fireRadiusRatio*0.1"+";\n"
	+$rampTemp+".colorEntryList[2].colorG="+$rampTemp+".colorEntryList[2].colorR;\n"
	+$rampTemp+".colorEntryList[2].colorB="+$rampTemp+".colorEntryList[2].colorR;\n"
	+"vector $getPos0=`xform -q -ws -rp "+$emiTemp[1]+"`;\n"
	+"vector $getPos1;\n"
	+"vector $getPos=$getPos0-$getPos1;\n"
	+"vector $getDir=unit($getPos);\n"
	+$parName[1]+".disSpeed=mag($getPos);\n"
	+$parName[1]+".disDirectionX=($getDir.x);\n"
	+$parName[1]+".disDirectionY=($getDir.y);\n"
	+$parName[1]+".disDirectionZ=($getDir.z);\n"
	+"vector $getPos1=$getPos0;\n"
	+"}\n";
	expression -s $exp -n "fire_radius_rampexp" -ae 1 -uc all;
	////////////////////////////////质量
	string $pa_arraymap_1[]=`arrayMapper -target $parName[1] -destAttr mass -inputV ageNormalized -type ramp`;
	string $ramp_node_1[]=`listConnections -type "ramp" $pa_arraymap_1[0]`;
	$rampTemp=`rename $ramp_node_1[0] ($parName[0]+"MassRamp")`;
	
	setAttr ($rampTemp+".colorEntryList[2].position") 0.55;
	setAttr ($rampTemp+".colorEntryList[1].position") 0.45;
	setAttr ($rampTemp+".colorEntryList[0].position") 0;
	setAttr ($rampTemp+".colorEntryList[3].position") 0.65;
	setAttr ($rampTemp+".colorEntryList[4].position") 0.72;
	setAttr ($rampTemp+".colorEntryList[5].position") 0.82;
	setAttr ($rampTemp+".colorEntryList[6].position") 0.9;
	setAttr ($rampTemp+".colorEntryList[7].position") 0.98;
	string $exp="{\n"
	+$rampTemp+".colorEntryList[0].colorR="+$parName[1]+".fireMass;\n"
	+$rampTemp+".colorEntryList[0].colorG="+$rampTemp+".colorEntryList[0].colorR;\n"
	+$rampTemp+".colorEntryList[0].colorB="+$rampTemp+".colorEntryList[0].colorR;\n"
	+$rampTemp+".colorEntryList[1].colorR="+$parName[1]+".fireMass;\n"
	+$rampTemp+".colorEntryList[1].colorG="+$rampTemp+".colorEntryList[1].colorR;\n"
	+$rampTemp+".colorEntryList[1].colorB="+$rampTemp+".colorEntryList[1].colorR;\n"
	+$rampTemp+".colorEntryList[2].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
	+$rampTemp+".colorEntryList[2].colorG="+$rampTemp+".colorEntryList[2].colorR;\n"
	+$rampTemp+".colorEntryList[2].colorB="+$rampTemp+".colorEntryList[2].colorR;\n"
	+$rampTemp+".colorEntryList[3].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio*0.3"+";\n"
	+$rampTemp+".colorEntryList[3].colorG="+$rampTemp+".colorEntryList[3].colorR;\n"
	+$rampTemp+".colorEntryList[3].colorB="+$rampTemp+".colorEntryList[3].colorR;\n"
	+$rampTemp+".colorEntryList[4].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
	+$rampTemp+".colorEntryList[4].colorG="+$rampTemp+".colorEntryList[4].colorR;\n"
	+$rampTemp+".colorEntryList[4].colorB="+$rampTemp+".colorEntryList[4].colorR;\n"
	+$rampTemp+".colorEntryList[5].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
	+$rampTemp+".colorEntryList[5].colorG="+$rampTemp+".colorEntryList[5].colorR;\n"
	+$rampTemp+".colorEntryList[5].colorB="+$rampTemp+".colorEntryList[5].colorR;\n"
	+$rampTemp+".colorEntryList[6].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio*0.2"+";\n"
	+$rampTemp+".colorEntryList[6].colorG="+$rampTemp+".colorEntryList[6].colorR;\n"
	+$rampTemp+".colorEntryList[6].colorB="+$rampTemp+".colorEntryList[6].colorR;\n"
	+$rampTemp+".colorEntryList[7].colorR="+$parName[1]+".fireMass*"+$parName[1]+".fireMassRatio"+";\n"
	+$rampTemp+".colorEntryList[7].colorG="+$rampTemp+".colorEntryList[7].colorR;\n"
	+$rampTemp+".colorEntryList[7].colorB="+$rampTemp+".colorEntryList[7].colorR;\n"
	+"}\n";
	expression -s $exp -n "fire_mass" -ae 1 -uc all;
	//////////////////////////////////寿命
	string $exp="{\n"
	+$parName[1]+".lifespanPP"+"=(rand(.4)+1)*(1-linstep(0,1,(abs("+$parName[1]+".parentU-0.5))))*"+$parName[1]+".fireLifeSpan;"
	+"\n}";
	dynExpression -s $exp -c $parName[1];
	setAttr ($parName[1]+".lifespanMode") 3;
	
	////////////////////////////////////场
	///////统一场
	string $uniformTemp[]=`uniform -pos 0 0 0 -m 5 -att 0 -dx 0 -dy 1 -dz 0  
				-mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($emiTemp[1]+"UniformField")`;
	connectDynamic -f $uniformTemp[0] $parName[1];
	vector $trTempWrp=`xform -q -ws -rp $emiTemp[1]`;
	float $trTempWrpX=($trTempWrp.x);/////////板属性
	setAttr ($uniformTemp[0]+".translateX") $trTempWrpX;
	float $trTempWrpY=($trTempWrp.y);/////////板属性
	setAttr ($uniformTemp[0]+".translateY") $trTempWrpY;
	float $trTempWrpZ=($trTempWrp.z);/////////板属性
	setAttr ($uniformTemp[0]+".translateZ") $trTempWrpZ;
	
	$exp="{\n"
	+$uniformTemp[0] +".magnitude=("+$parName[1]+".fireSpeed*"+$parName[1]+".fireUpForce)*(1/(1+"+$parName[1]+".disSpeed*30));\n"
	+"}\n";
	expression -s $exp -n "fire_uniform" -ae 1 -uc all;
	///////统一场_1
	
	
	string $uniformTemp_1[]=`uniform -pos 0 0 0 -m 5 -att 0 -dx 0 -dy 1 -dz 0  
				-mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($emiTemp[1]+"FollowField")`;
	connectDynamic -f $uniformTemp_1[0] $parName[1];
	vector $trTempWrp=`xform -q -ws -rp $emiTemp[1]`;
	float $trTempWrpX=($trTempWrp.x);/////////板属性
	setAttr ($uniformTemp_1[0]+".translateX") $trTempWrpX;
	float $trTempWrpY=($trTempWrp.y);/////////板属性
	setAttr ($uniformTemp_1[0]+".translateY") $trTempWrpY;
	float $trTempWrpZ=($trTempWrp.z);/////////板属性
	setAttr ($uniformTemp_1[0]+".translateZ") $trTempWrpZ;
	
	$exp="{\n"
	+$uniformTemp_1[0] +".magnitude=(20*"+$parName[1]+".disSpeed);\n"
	+$uniformTemp_1[0] +".directionX="+$parName[1]+".disDirectionX;\n"
	+$uniformTemp_1[0] +".directionY="+$parName[1]+".disDirectionY;\n"
	+$uniformTemp_1[0] +".directionZ="+$parName[1]+".disDirectionZ;\n"
	+"}\n";
	expression -s $exp -n "fire_uniform" -ae 1 -uc all;
	
	////////扰动场
	string $turbulenceTemp[]=`turbulence -pos 0 0 0 -m 5 -att 0 -f 12 -phaseX 0 -phaseY 0 -phaseZ 0 
				-noiseLevel 0 -noiseRatio 0.707  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($emiTemp[1]+"TurbulenceField")`;
	connectDynamic -f $turbulenceTemp[0] $parName[1];
	setAttr ($turbulenceTemp[0]+".translateX") $trTempWrpX;
	setAttr ($turbulenceTemp[0]+".translateY") $trTempWrpY;
	setAttr ($turbulenceTemp[0]+".translateZ") $trTempWrpZ;
	
	$exp="{\n"
	+$turbulenceTemp[0] +".translateY=time*"+$parName[1]+".fireSpeed;\n"
	+$turbulenceTemp[0] +".phaseZ=time;\n"
	+$turbulenceTemp[0] +".magnitude="+$parName[1]+".fireturbulence;\n"
	
	+"}\n";
	expression -s $exp -n "fire_turbulence" -ae 1 -uc all;
	
	
	/////////放射场
	string $radialTemp[]=`radial -pos 0 0 0 -m -0.2 -att 0.3 -typ 0  
				-mxd 20  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($emiTemp[1]+"RadialField")`;
	setAttr ($radialTemp[0]+".translateX") $trTempWrpX;
	setAttr ($radialTemp[0]+".translateY") ($trTempWrpY+0.5);
	setAttr ($radialTemp[0]+".translateZ") $trTempWrpZ;
	
	connectDynamic -f $radialTemp[0] $parName[1];
	
			parent -a $uniformTemp[0] $sel[0];
			parent -a $turbulenceTemp[0] $sel[0];
			parent -a $uniformTemp_1[0] $sel[0];
			parent -a $radialTemp[0] $sel[0];
	
	///////////////////////////////////材质
	string $cloudShading=`shadingNode -asShader particleCloud -n ($emiTemp[1]+"fire_cloud_m")`;
	string $cloudSet=`sets -renderable true -noSurfaceShader true -empty -name ($emiTemp[1]+"fire_cloud_mSG")`;
	connectAttr -f ($cloudShading+".outColor") ($cloudSet+".volumeShader");
	select -r $parName[1];
	sets -e -forceElement $cloudSet;
	setAttr ($cloudShading+".density") 1;
	setAttr ($cloudShading+".translucence") 0.5;
	setAttr ($cloudShading+".noise") 0.5;
	setAttr ($cloudShading+".noiseFreq") 0.2;
	setAttr ($cloudShading+".noiseAspect") -0.1;
	setAttr ($cloudShading+".glowIntensity") 0.05;
	setAttr ($cloudShading+".diffuseCoeff") .3;
	setAttr ($cloudShading+".translucenceCoeff") 0.2;
	
	///////云材质基本色
	string $colorRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"ColorRamp")`;
	string $colorRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"ColorRampTX")`;
	connectAttr ($colorRampTempTX+".outUV") ($colorRampTemp+".uv");
	connectAttr ($colorRampTempTX+".outUvFilterSize") ($colorRampTemp+".uvFilterSize");
	connectAttr -f ($colorRampTemp+".outColor") ($cloudShading+".color");
	string $paSampInfoTemp=`shadingNode -asUtility particleSamplerInfo -n ($cloudShading+"paSampInfo")`;
	connectAttr -f ($paSampInfoTemp+".outUvCoord") ($colorRampTempTX+".uvCoord");
	setAttr ($colorRampTemp+".colorEntryList[0].color") -type double3 1 0.886317 0.641 ;
	setAttr ($colorRampTemp+".colorEntryList[0].position") 0 ;
	setAttr ($colorRampTemp+".colorEntryList[1].color") -type double3 0.844 0.509776 0.10128 ;
	setAttr ($colorRampTemp+".colorEntryList[1].position") 0.5 ;
	setAttr ($colorRampTemp+".colorEntryList[2].color") -type double3 0.851 0.31531 0.089355 ;
	setAttr ($colorRampTemp+".colorEntryList[2].position") 1 ;
	////////云材质透明
	string $TranRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"TranRamp")`;
	string $TranRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"TranRampTX")`;
	connectAttr ($TranRampTempTX+".outUV") ($TranRampTemp+".uv");
	connectAttr ($TranRampTempTX+".outUvFilterSize") ($TranRampTemp+".uvFilterSize");
	connectAttr -f ($TranRampTemp+".outColor") ($cloudShading+".transparency");
	connectAttr -f ($paSampInfoTemp+".outUvCoord") ($TranRampTempTX+".uvCoord");
	setAttr ($TranRampTemp+".colorEntryList[0].color") -type double3 0.3 0.3 0.3 ;
	setAttr ($TranRampTemp+".colorEntryList[0].position") 0 ;
	setAttr ($TranRampTemp+".colorEntryList[1].color") -type double3 0.4 0.4 0.4  ;
	setAttr ($TranRampTemp+".colorEntryList[1].position") 0.3 ;
	setAttr ($TranRampTemp+".colorEntryList[2].color") -type double3 0.7 0.7 0.7 ;
	setAttr ($TranRampTemp+".colorEntryList[2].position") 1 ;
	////////云材质自发光
	string $IncanRampTemp=`shadingNode -asTexture ramp -n ($cloudShading+"IncanRamp")`;
	string $IncanRampTempTX=`shadingNode -asUtility place2dTexture -n ($cloudShading+"IncanRampTX")`;
	connectAttr ($IncanRampTempTX+".outUV") ($IncanRampTemp+".uv");
	connectAttr ($IncanRampTempTX+".outUvFilterSize") ($IncanRampTemp+".uvFilterSize");
	connectAttr -f ($IncanRampTemp+".outColor") ($cloudShading+".incandescence");
	connectAttr -f ($paSampInfoTemp+".outUvCoord") ($IncanRampTempTX+".uvCoord");
	setAttr ($IncanRampTemp+".colorEntryList[0].color") -type double3 0.120 0.120 0.120 ;
	setAttr ($IncanRampTemp+".colorEntryList[0].position") 0 ;
	setAttr ($IncanRampTemp+".colorEntryList[1].color") -type double3 0.400 0.400 0.400  ;
	setAttr ($IncanRampTemp+".colorEntryList[1].position") 0.42;
	setAttr ($IncanRampTemp+".colorEntryList[2].color") -type double3 0.100 0.100 0.100 ;
	setAttr ($IncanRampTemp+".colorEntryList[2].position") 1 ;
	////////云斑点
	string $CraterTemp=`shadingNode -asTexture crater -n ($cloudShading+"Crater")`;
	string $CraterTempTX=`shadingNode -asUtility place3dTexture -n ($cloudShading+"CraterTX")`;
	connectAttr ($CraterTempTX+".wim[0]") ($CraterTemp+".pm");
	connectAttr -f ($CraterTemp+".outColor") ($cloudShading+".blobMap");
	setAttr ($CraterTemp+".channel1") -type double3 0.694 0.472805 0.228326 ;
	setAttr ($CraterTemp+".channel2") -type double3 0.413 0.224693 0.14042  ;
	setAttr ($CraterTemp+".channel3") -type double3 0.2 0.117778 0.0392  ;
	setAttr ($CraterTemp+".shaker") 12;
	setAttr ($CraterTemp+".melt") 0.05;
	setAttr ($CraterTemp+".frequency") 0.65;
	setAttr ($CraterTemp+".balance") 0.57;;
	setAttr ($CraterTempTX+".scaleX") 0.08;
	setAttr ($CraterTempTX+".scaleY") 0.15;
	setAttr ($CraterTempTX+".scaleZ") 0.08;
	setAttr ($CraterTempTX+".translateX") $trTempWrpX;
	setAttr ($CraterTempTX+".translateY") $trTempWrpY;
	setAttr ($CraterTempTX+".translateZ") $trTempWrpZ;
	parent -a $CraterTempTX $sel[0];
	
	$exp="{\n"
	+$CraterTempTX +".translateY=time*"+$parName[1]+".fireSpeed;\n"
	+$CraterTempTX +".rotateY=time;\n"
	+"}\n";
	expression -s $exp -n "fire_turbulence" -ae 1 -uc all;
	
	
	/////////////////////////////分组
	select $sel[0];
	string $selTemp[];
	string $selTemp1;
	for ($i=0;$i<12;$i++)
		{
			$selTemp=`pickWalk -d up`;
			if ($selTemp[0]==$selTemp1)
			{
			parent -a $parName[0] $selTemp;
			break;
			}
			$selTemp1=$selTemp[0];
	  }
	
refresh;
	}

//////////////////////////////////////////////////////////
global proc  select_obj()
{
	//string $sel[]=`ls -sl`;
	
	
	
	
	/*string $selEmitter[]=`textScrollList -q -si em_list`;
	string $selParticle[]=`textScrollList -q -si pa_list`;
	string $selFluid[]=`textScrollList -q -si fluid_list`;
	select -cl;
	for ($i in $selEmitter)
	{select -tgl $i;}
	for ($i in $selParticle)
	{select -tgl $i;}
	for ($i in $selFluid)
	{select -tgl $i;}*/
}
J_easyFire;
/*
                                  使用说明
   窗口中包含一个列表框和5个按钮，制作烟火时首先选择需要建立烟火的物体，点击
第一个按钮，为物体创建发射器。同时列表也会显示出场景中所有发射器，在列表中选
择需要建立火焰的发射器，然后点击创建火焰按钮，云粒子火焰基本形态即建立完成。
云粒子型节点有多个控制属性：LifeSpan为粒子寿命，Speed影响粒子运动速度，Radius
为粒子创建时的半径，RadiusRatio为粒子半径比率，粒子半径与半径比率的乘积为粒子
死亡时的半径，Mass为粒子创建时的质量，MassRatio为粒子质量比率，粒子质量与质量
比率的乘积为粒子死亡时的质量，fireUpForce为火焰运动方向场强，fireturbulence为
粒子扰动场强。每套火焰粒子会附带一个控制火焰方向的locator，移动此locator可以影
响火焰方向，向那个方向挪，火就向哪里烧。
   烟雾的建立：在视图或outline中选择已经建立的火焰粒子，单击第三个按钮“云烟雾”
可以建立云粒子烟雾，在粒子型节点下有附加属性可以控制烟雾形态，用法与火粒子类似
   除了云粒子外，还可以建立精灵粒子。使用方法：在视图或outline中选择已经建立的
火焰粒子，单击第三个按钮“精灵烟雾”可以建立精灵粒子烟雾，在粒子型节点下有附加属
性可以控制烟雾形态，用法与火粒子类似。
	 火把工具只需要在场景中选择火把模型，然后点击添加火把工具，便会自动生成一个
nurbs发射曲面，修整其形态，匹配到火把上即可。


注意：建议每个模型只建立一个发射器，每个发射器只建立一套火焰或者多个发射器共用
一套火焰，以避免发生错误，两种烟粒子可以同时建立，但是每种烟粒子对于一套火焰最
好只建立一套。

*/