/////////////////////////////////////////////////////////////
///\file J_autoLayer.mel
///
///\brief    自动分层  
///
///\author 桔
///\version 1.0
///\date  09:23 2021/3/13
///History:  
///
///////////////////////////////////////////////////////////////
global proc J_autoLayer()//主程序
{
/////////////////////////////////////////////////////////////生成窗体
string $checkBoxs[];
int $ButtonW=80;
int $ButtonH=20;
if (`window -ex J_autoLayerWin`)
    deleteUI -window J_autoLayerWin;
    window -w 600 -h 360 -title "批量渲染自动分层" J_autoLayerWin;
    formLayout  -numberOfDivisions 100  J_autoLayerMain;
    frameLayout -cll 1 -cl 0 -h 200-l "资产"  J_assetsFrameLayout;
        formLayout  -numberOfDivisions 100  J_assetsFormLayout;
            textScrollList  -dcc "J_autoLayerTextScrollAssets(0)"  -allowMultiSelection 1 -h 110 J_allReferenceFiles;
            text -label "要替换路径" J_autoLayerTextIn;
            textField J_autoLayerTextFieldIn;
            button -l "<" -w 40  -h $ButtonH -c  "J_autoLayerQuickPath(\"J_autoLayerTextFieldIn\")" J_buTextFieldIn;

            text -label "替换为路径" J_autoLayerTextOut;
            textField J_autoLayerTextFieldOut;
            button -l "<" -w 40 -h $ButtonH -c  "J_autoLayerQuickPath(\"J_autoLayerTextFieldOut\")" J_buTextFieldOut;

            button -l "替换路径" -w $ButtonW  -h $ButtonH -c  "J_autoLayerSwithAssets(\"Sw\")" J_buLoadSwithAssets;
            button -l "换高模" -w $ButtonW  -h $ButtonH -c  "J_autoLayerSwithAssets(\"_Hi\")" J_buLoadHi;
            button -l "换低模" -w $ButtonW  -h $ButtonH -c  "J_autoLayerSwithAssets(\"_Lo\")" J_buLoadLo;
            button -l "换毛发资产" -w $ButtonW  -h $ButtonH -c  "J_autoLayerSwithAssets(\"_Fur\")" J_buLoadFur;
        setParent ..;
    setParent ..;

    frameLayout -cll 1 -cl 0 -h 300 -l "渲染设置"  J_settingFrameLayout;
        formLayout  -numberOfDivisions 100  J_settingFormLayout;            
            text -label "灯光文件目录" J_autoLayerTextLight;
            textField               J_autoLayerTextLightFile;
            button -l "选择灯光文件" -w $ButtonW  -h $ButtonH -c "J_autoLayerLoadFile(\"J_autoLayerTextLightFile\")" J_buSelectLightFile;

            text -label"批量操作目录" J_textQueue;
            textField               J_textQueuePath;
            button -l "批量操作目录" -w $ButtonW  -h $ButtonH -c "J_autoLayerLoadPath(\"J_textQueuePath\")"  J_buQueuePath;

            optionMenu -label "renderer:" rendererSelect;
            menuItem -label "redshift";
            menuItem -label "mtoa";
            //menuItem -label "vray";


            checkBox -label "拆分场景" J_checkBoxSeprateScene ;
            checkBox -label "替换映射" J_checkBoxReplaceSource ;
            textField               J_textFieldReplaceSource;

            button -l "保存渲染设置" -w $ButtonW  -h $ButtonH -c  "J_autoLayerReadAttr()" J_buReadRenderSetting;
            button -l "自动分层" -w $ButtonW  -h $ButtonH -c  "J_autoLayerRun()" J_buAutoLayer;
            string $tably = `tabLayout -innerMarginWidth 5 -innerMarginHeight 5  J_renderSettingTableLayout`;
            setParent ..;
        setParent ..;
    setParent ..;

    formLayout -e 
        -ap J_assetsFrameLayout left 0 1
        -ap J_assetsFrameLayout right 0 99
        -af J_assetsFrameLayout top 0
        
        -ap J_settingFrameLayout left 0 1
        -ap J_settingFrameLayout right 0 99
        -ac J_settingFrameLayout top  1 J_assetsFrameLayout
        -ap J_settingFrameLayout bottom 0 100
    J_autoLayerMain;

    formLayout -e 
        -ap J_allReferenceFiles left 0 1
        -ap J_allReferenceFiles right 0 99
        -af J_allReferenceFiles top 0
        
        -ap J_autoLayerTextIn left 0 1
        -ap J_autoLayerTextIn right 0 10
        -ac J_autoLayerTextIn top  3 J_allReferenceFiles

        -ap J_autoLayerTextFieldIn left 0 11
        -ap J_autoLayerTextFieldIn right 0 92
        -ac J_autoLayerTextFieldIn top  3 J_allReferenceFiles

        -ac J_buTextFieldIn left 0  J_autoLayerTextFieldIn
        -ap J_buTextFieldIn right 0 98
        -ac J_buTextFieldIn top  3 J_allReferenceFiles

        -ap J_autoLayerTextOut left 0 1
        -ap J_autoLayerTextOut right 0 10
        -ac J_autoLayerTextOut top  7 J_autoLayerTextIn

        -ap J_autoLayerTextFieldOut left 0 11
        -ap J_autoLayerTextFieldOut right 0 92
        -ac J_autoLayerTextFieldOut top  7 J_autoLayerTextIn

        -ac J_buTextFieldOut left 0 J_autoLayerTextFieldOut
        -ap J_buTextFieldOut right 0 98
        -ac J_buTextFieldOut top  7 J_autoLayerTextIn

        -ap J_buLoadSwithAssets left 0 1
        -ap J_buLoadSwithAssets right 0 24
        -ac J_buLoadSwithAssets top  1 J_autoLayerTextFieldOut

        -ap J_buLoadHi left 0 25
        -ap J_buLoadHi right 0 49
        -ac J_buLoadHi top  1 J_autoLayerTextFieldOut

        -ap J_buLoadLo left 0 50
        -ap J_buLoadLo right 0 74
        -ac J_buLoadLo top  1 J_autoLayerTextFieldOut

        -ap J_buLoadFur left 0 75
        -ap J_buLoadFur right 0 99
        -ac J_buLoadFur top  1 J_autoLayerTextFieldOut

    J_assetsFormLayout;

    formLayout -e 
        -ap J_autoLayerTextLight left 0 1
        -ap J_autoLayerTextLight right 0 10
        -af J_autoLayerTextLight top 1

        -ap J_autoLayerTextLightFile left 0 11
        -ap J_autoLayerTextLightFile right 0 85
        -af J_autoLayerTextLightFile top 1

        -ap J_buSelectLightFile left 0 86
        -ap J_buSelectLightFile right 0 99
        -af J_buSelectLightFile top 1

        -ap J_textQueue left 0 1
        -ap J_textQueue right 0 10
        -ac J_textQueue top  1 J_buSelectLightFile

        -ap J_textQueuePath left 0 11
        -ap J_textQueuePath right 0 85
        -ac J_textQueuePath top  1 J_buSelectLightFile

        -ap J_buQueuePath left 0 86
        -ap J_buQueuePath right 0 99
        -ac J_buQueuePath top  1 J_buSelectLightFile

        -ap rendererSelect left 0 2
        -ap rendererSelect right 0 33
        -ac rendererSelect top  1 J_buQueuePath


        -ap J_checkBoxSeprateScene left 0 40
        -ap J_checkBoxSeprateScene right 0 49
        -ac J_checkBoxSeprateScene top  1 J_buQueuePath



        -ap J_checkBoxReplaceSource left 0 50
        -ap J_checkBoxReplaceSource right 0 59
        -ac J_checkBoxReplaceSource top  1 J_buQueuePath

        -ap J_textFieldReplaceSource left 0 60
        -ap J_textFieldReplaceSource right 0 70
        -ac J_textFieldReplaceSource top  1 J_buQueuePath



        -ap J_buReadRenderSetting left 0 72
        -ap J_buReadRenderSetting right 0 85
        -ac J_buReadRenderSetting top  1 J_buQueuePath

        -ap J_buAutoLayer left 0 86
        -ap J_buAutoLayer right 0 99
        -ac J_buAutoLayer top  1 J_buQueuePath

        -ap J_renderSettingTableLayout left 0 1
        -ap J_renderSettingTableLayout right 0 99
        -ac J_renderSettingTableLayout top  1 rendererSelect
        -ap J_renderSettingTableLayout bottom 0 99


    J_settingFormLayout;    
showWindow J_autoLayerWin;
J_autoLayerInit();
    //常规渲染参数
    string $J_autoLayerCommondSet=`formLayout  -numberOfDivisions 100 -p J_renderSettingTableLayout`;
    textScrollList -p $J_autoLayerCommondSet J_autoLayerRenderInfo;
    tabLayout -edit  -tabLabel $J_autoLayerCommondSet "渲染信息" J_renderSettingTableLayout;
    formLayout -e
    -ap J_autoLayerRenderInfo left 0 1
        -ap J_autoLayerRenderInfo right 0 99
        -ap J_autoLayerRenderInfo top  1 1
        -ap J_autoLayerRenderInfo bottom 0 99
        $J_autoLayerCommondSet;
}
global proc J_autoLayerInit()
{
    string $allRef[]=`ls -type reference`;
    int $currentRender=`optionMenu -q -sl rendererSelect`;
    textScrollList  -e -ra J_allReferenceFiles;
    for ($item in $allRef)
    {
        if ($item!="_UNKNOWN_REF_NODE_" &&$item!="sharedReferenceNode")
        {string $filePath=`referenceQuery -f  $item `;
        textScrollList -e -a $filePath J_allReferenceFiles;}
    }


}

global proc J_autoLayerTextScrollAssets(int $mode)
{
    if ($mode ==0)
    {
        string $file[]=`textScrollList -q -si J_allReferenceFiles`;
        textField -e -text $file[0] J_autoLayerTextFieldIn;
    }
    if ($mode ==1)
    {
        
    }
}
global proc J_autoLayerLoadFile(string $contral)
{
    string $file[]=`fileDialog2 -fileMode 1 -caption "选择一个文件"`;
    textField -e -text $file[0] $contral;
}
global proc J_autoLayerLoadPath(string $contral)
{
    string $file[]=`fileDialog2 -fileMode 2 -caption "选择一个路径"`;
    textField -e -text $file[0] $contral;
}
global proc J_autoLayerQuickPath(string $contral)
{
    python("JpyModules.render.J_autoLayerQuickPath('"+$contral+"')");
}
global proc J_autoLayerReadAttr()
{
    string $renderer="redshift";
    python("JpyModules.render.J_autoLayerRenderSettings('"+$renderer+"','w')");
}
global proc J_autoLayerRun()
{
    python("JpyModules.render.J_autoLayer()");

}
global proc J_autoLayerSwithAssets(string $prefx)
{
    string $items[]=`textScrollList -q -si J_allReferenceFiles`;
    string $pfxs[]={"_Hi","_Lo","_Fur"};
    if (size($items)==0){
        $items=`textScrollList -q -ai J_allReferenceFiles`;
    }
    string $res="";
    for ($item in $items)
    {        
        string $refNode=`referenceQuery -rfn $item`;
        string $newFile="";
        $item =`referenceQuery -f -wcn $refNode`;
        if ($prefx=="Sw")
        {
            string $oldPath=`textField -q -text J_autoLayerTextFieldIn`;
            string $newPath=`textField -q -text J_autoLayerTextFieldOut`;
            $newFile=substituteAllString($item,$oldPath,$newPath);
        }
        else
        {
            for ($itemPf in $pfxs)
            {
                if (endsWith($item,($itemPf +".mb")))
                    $newFile=substituteAllString($item,($itemPf +".mb"),($prefx+".mb"));
                if (endsWith($item,($itemPf +".ma"))) 
                    $newFile=substituteAllString($item,($itemPf +".ma"),($prefx+".ma"));      
            }
        
            if ($newFile =="")
            {
                if (endsWith($item,(".mb")))
                    $newFile=substituteAllString($item,".mb",($prefx+".mb"));
                if (endsWith($item,(".ma"))) 
                    $newFile=substituteAllString($item,".ma",($prefx+".ma"));   
            }
        }
        if ($newFile !="")
        {
            if (`objExists( $refNode )`)
            {            
                if (`file -q -exists $newFile`)
                {
                    catch(`file -lr $refNode $newFile `);}
                else{
                    $res+=$newFile+"文件不存在\n";
                }
            }
        }
        
    }
    J_autoLayerInit();
}
global proc J_autoLayer_saveSetting()
{
    string $id=`textField -q -text J_livingQueueId`;
    string $ip=`textField -q -text J_livingQueueIp`;
    string $po=`textField -q -text J_livingQueuePort`;
    string $ra=`textField -q -text J_livingQueueRate`;
    string $pf=`textField -q -text J_livingQueueNamePrefx`;
    string $info=$id+" "+$ip+" "+$po+" "+$ra+" "+$pf+" ";
    string $mypath=`internalVar -ups`+"J_autoLayerSettings.mel";
    $fileId=`fopen $mypath "w"`;
    fwrite $fileId $info;
    fclose $fileId;
}


/////J_autoLayer