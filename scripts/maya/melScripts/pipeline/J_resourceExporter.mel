/////////////////////////////////////////////////////////////
///\file animationExporter.mel
///\brief fbx导出工具
///
///\author 桔
///\version 1.4.2
///\date  9:45 2022/4/6
///History:  导出动画工具
///
///////////////////////////////////////////////////////////////
global proc J_resourceExporter()//主窗口
{
    if (`window -ex J_resourceExporterWin`)
        deleteUI -window J_resourceExporterWin;
    window -w 300 -h 400 -title "资源导出" J_resourceExporterWin;
    //文件导出设置
    string $geoSetting[]={"SmoothingGroup","SmoothMesh","Triangulate","IncludeChildren",
     "Animation","BakeAnimation","Deformation","Skins","BlendShape",
     "Resample"};
    string $fbxAttr[]={"Export|IncludeGrp|Geometry|SmoothingGroups",
    "Export|IncludeGrp|Geometry|SmoothMesh",
    "Export|IncludeGrp|Geometry|Triangulate",
    "Export|IncludeGrp|InputConnectionsGrp|IncludeChildren" ,
    "Export|IncludeGrp|Animation",
    "Export|IncludeGrp|Animation|BakeComplexAnimation",
    "Export|IncludeGrp|Animation|Deformation",
    "Export|IncludeGrp|Animation|Deformation|Skins",
    "Export|IncludeGrp|Animation|Deformation|Shape",
    "Export|IncludeGrp|Animation|BakeComplexAnimation|ResampleAnimationCurves"      
    };
    string $geoSettingCheckBox[];
    formLayout  -numberOfDivisions 100  J_resourceExporter_FromLayout0;
        frameLayout -cll 1 -cl 0 -l "模型选项"  J_resourceExporter_rigframeLayout;
            string $formLayout_Temp0=`formLayout -numberOfDivisions 100 `;
            //创建所有勾选控件，并附带修改命令
                for ($iItem=0;$iItem<size($geoSetting);$iItem++)
                {
                    string $cbname="checkBox_"+ $geoSetting[$iItem];
                    $geoSettingCheckBox[$iItem]=`checkBox 
                    -onCommand ("FBXProperty "+$fbxAttr[$iItem] +" -v 1")
                    -offCommand ("FBXProperty "+$fbxAttr[$iItem] +" -v 0")
                    -label $geoSetting[$iItem] $cbname`;

                    checkBox -e -v `FBXProperty $fbxAttr[$iItem] -q` $geoSettingCheckBox[$iItem];
                    formLayout -e 
                    -ap $geoSettingCheckBox[$iItem] left 0 (1+50*($iItem%2))
                    -ap $geoSettingCheckBox[$iItem] right 0 (49+50*($iItem%2))
                    -af $geoSettingCheckBox[$iItem] top (15*floor($iItem/2)) $formLayout_Temp0;
                }
            setParent ..;
            button -l "导出绑定" -c  "J_resourceExporterExportRig" J_expRig;   
            separator -style "in"; 
        setParent ..;
        frameLayout -cll 1 -cl 0 -l "动画选项"  J_resourceExporter_aniframeLayout;
            formLayout  -numberOfDivisions 100  J_resourceExporter_animationFromLayout;
                textScrollList -h 80 -sc "J_resourceExporterSelitem"  -allowMultiSelection 1  J_allCameraNode;
                textScrollList  -sc "" -allowMultiSelection 1 J_allRefNode;
                
                checkBox -label "曲线平滑" -v 1 J_resourceExporter_chbox01;
                checkBox -label "曲线打平"  J_resourceExporter_chbox02;
                checkBox -label "根骨归零"  J_resourceExporter_chbox03;

                checkBox -label "相机->fbx" -v 1 J_resourceExporter_chbox04;
                checkBox -label "动画->fbx"  J_resourceExporter_chbox05;

                optionMenu -label "差值模式"  J_resourceExporter_optionMenu01;
                menuItem  -label "resample";
                menuItem  -label "euler";
                menuItem  -label "quaternion";

                button -l "导出相机" -c  "J_resourceExporterExportCam" J_expCam;
                button -l "导出动画" -c  "J_resourceExporterExportAniBut" J_expAni;
                button -l "批量导" -c  "J_resourceExporterBatchExportAniBut" J_expAniBat;
            setParent ..;
        setParent ..;
       
    formLayout -e 
        -ap J_resourceExporter_rigframeLayout left 0 1
        -ap J_resourceExporter_rigframeLayout right 0 99
        -af J_resourceExporter_rigframeLayout top 0
        
        -ap J_resourceExporter_aniframeLayout left 0 1
        -ap J_resourceExporter_aniframeLayout right 0 99
        -ac J_resourceExporter_aniframeLayout top 1 J_resourceExporter_rigframeLayout
        -af J_resourceExporter_aniframeLayout bottom 0

    J_resourceExporter_FromLayout0;

    formLayout -e        
        
        -ap J_allCameraNode left 1 1
        -ap J_allCameraNode right 1 99
        -af J_allCameraNode top  1 

        -ap J_allRefNode left 1 1
        -ap J_allRefNode right 1 99
        -ac J_allRefNode top 1 J_allCameraNode
        -ap J_allRefNode bottom 90 99
        
        -ap J_resourceExporter_chbox01 left 0 1
        -ap J_resourceExporter_chbox01 right 0 33
        -ac J_resourceExporter_chbox01 top  2 J_allRefNode

        -ap J_resourceExporter_chbox02 left 0 34
        -ap J_resourceExporter_chbox02 right 0 66
        -ac J_resourceExporter_chbox02 top  2 J_allRefNode

        -ap J_resourceExporter_chbox03 left 0 67
        -ap J_resourceExporter_chbox03 right 0 99
        -ac J_resourceExporter_chbox03 top  2 J_allRefNode

        -ap J_resourceExporter_optionMenu01 left 0 1
        -ap J_resourceExporter_optionMenu01 right 0 99
        -ac J_resourceExporter_optionMenu01 top  2 J_resourceExporter_chbox03

        -ap J_resourceExporter_chbox04 left 0 1
        -ap J_resourceExporter_chbox04 right 0 33
        -ac J_resourceExporter_chbox04 top  2 J_resourceExporter_optionMenu01

        -ap J_resourceExporter_chbox05 left 0 34
        -ap J_resourceExporter_chbox05 right 0 66
        -ac J_resourceExporter_chbox05 top  2 J_resourceExporter_optionMenu01        

        -ap J_expCam left 0 1
        -ap J_expCam right 0 33
        -ac J_expCam top  2 J_resourceExporter_chbox05

        -ap J_expAni left 0 34
        -ap J_expAni right 0 66
        -ac J_expAni top 2 J_resourceExporter_chbox05        

        -ap J_expAniBat left 0 67
        -ap J_expAniBat right 0 99
        -ac J_expAniBat top 2 J_resourceExporter_chbox05
       
    J_resourceExporter_animationFromLayout;


    
    showWindow J_resourceExporterWin;
    J_resourceExporterInit();
    J_resourceExporterRunScriptJob();
    python("JpyModules.public.J_deleteUnknownNode()");
    python("JpyModules.public.J_cleanVaccine_gene()");
}
//初始化窗体
global proc J_resourceExporterInit()
{
    string $allCamera[]=`ls -type "camera"`;
    string $allCamTr[]=`listRelatives  -fullPath -p $allCamera`;
    string $sysCam[]={"|back","|front","|left","|persp","|side","|top"};
    textScrollList  -e -ra  J_allCameraNode;
    textScrollList  -e -ra   J_allRefNode;
    for ($item0 in $allCamTr)
    {
        int $temp=0;
        for ($item1 in $sysCam)
        {
            if ($item0==$item1)$temp=1;
        }
        if ($temp==0)
        textScrollList  -e -a $item0  J_allCameraNode;
    }
    string $allRefFile[]=`file -q -r`;
    for ($item0 in $allRefFile)
    {   
        string $refNode=`referenceQuery -referenceNode $item0`;

        textScrollList  -e -a $refNode  J_allRefNode;
    }
}

//导出摄像机
global proc J_resourceExporterExportCam()
{
    string $selCam[]=`textScrollList  -q -si  J_allCameraNode`;    
    string $outPath=J_resourceExporterGetFilePath()+"/cache/";
    if (size ($outPath)<3)
        $outPath= "c:/temp";
    if (size($selCam)>0)
    {
        for ($item in $selCam)
        {
            if (`checkBox -q -v J_resourceExporter_chbox04`==1)
            {
                python("JpyModules.pipeline.J_resourceExporter.J_animationExportCamera2Fbx('"+$item+"')"); 
            }
            else
            {
                python("JpyModules.pipeline.J_resourceExporter.J_animationExportCamera2Abc('"+$item+"')");    
            }
        }
        string $cmd="os.startfile(\""+$outPath+"\")";
        python("import os");
        python($cmd); 
    }
    
}
//导出动画,动画导出有4种状况,1用ref文件导出abc ,2用ref导出fbx ,3非ref导出abc ,4非ref导出fbx
global proc J_resourceExporterExportAniBut()
{
    string $selRef[]=`textScrollList  -q -si  J_allRefNode`;
    //如果在ref列表里选择了对象,则导出选择的ref,未选任何ref节点,则导出所选对象
    if (size($selRef)>0)
    {
        //按ref导出
        for ($item in $selRef)
        {  
            //动画->fbx未勾选,则导出abc,勾选则导出fbx
            if (`checkBox -q -v J_resourceExporter_chbox05`==0)
            {
                python("JpyModules.pipeline.J_resourceExporter.J_exportAnimationFromRefToAbc('"+$item +"')");
            }
            else
            {
                python("JpyModules.pipeline.J_resourceExporter.J_exportAnimationFromRefNodeToFbx('"+$item +"')");
            }
        }
    }
    else
    {
        //将选择的物体导出
        //动画->fbx未勾选,则导出abc,勾选则导出fbx
            if (`checkBox -q -v J_resourceExporter_chbox05`==0)
            {
                python("JpyModules.public.J_exportAbc(mode=1,exportMat=False)");
            }
            else
            {
                python("JpyModules.public.J_exportFbx() ");
            }
    }
    string $outPath=J_resourceExporterGetFilePath()+"/cache/";
    //导出后打开文件夹
    string $cmd="os.startfile(\""+$outPath+"\")";
    python("import os");
    python($cmd); 
    
}
//批量导出相机动画
global proc J_resourceExporterBatchExportAniBut()
{
    string $file[]=`fileDialog2 -fileMode 2 `;
    string $mayaFiles[]=`getFileList -folder $file[0] -filespec "*.m?" `;

    for ($fItem in $mayaFiles)
    {
        if (`endsWith $fItem ".mb"` ||`endsWith $fItem ".ma"` )
        {
            //逐个打开文件
            file -f  -prompt false   -open ($file[0]+"/"+$fItem );
            //批量导出相机
            string $allCamera[]=`ls -type "camera"`;
            string $sysCam[]={"|back","|front","|left","|persp","|side","|top"};
            string $allCamTr[]=`listRelatives  -fullPath -p $allCamera`;
            string $exportCam[]= `stringArrayRemove $sysCam $allCamTr `;
            for ($itemC in $exportCam)
            {
                if (`checkBox -q -v J_resourceExporter_chbox04`==1)
                {
                    python("JpyModules.pipeline.J_resourceExporter.J_animationExportCamera2Fbx('"+$itemC+"')"); 
                }
                else
                {
                    python("JpyModules.pipeline.J_resourceExporter.J_animationExportCamera2Abc('"+$itemC+"')");    
                }
            }
            //批量导出动画
            string $allRefFile[]=`file -q -r`;
            for ($itemR in $allRefFile)
            {   
                string $refNode=`referenceQuery -referenceNode -tr $itemR`; 
                //动画->fbx未勾选,则导出abc,勾选则导出fbx
                if (`checkBox -q -v J_resourceExporter_chbox05`==0)
                {
                    python("JpyModules.pipeline.J_resourceExporter.J_exportAnimationFromRefToAbc('"+$refNode +"')");
                }
                else
                {
                    python("JpyModules.pipeline.J_resourceExporter.J_exportAnimationFromRefNodeToFbx('"+$refNode +"')");
                }               
            }
        }
    }

}
//随选择修改窗体内容
global proc J_resourceExporterRunScriptJob()
{
    int $sjId = `scriptJob -e "SelectionChanged" J_resourceExporterScriptJob `;
    string $temp = ("scriptJob -k "+ $sjId);
    scriptJob -uid "J_resourceExporterWin" $temp;

}
global proc J_resourceExporterScriptJob()
{
    J_resourceExporterInit();
    textScrollList -e -deselectAll  J_allCameraNode;
    textScrollList -e -deselectAll  J_allRefNode;
    string $allListCam[]=`textScrollList  -q -ai  J_allCameraNode`;
    string $allRefNode[]=`textScrollList  -q -ai  J_allRefNode`;
    string $sel[]=`ls -sl -allPaths -l`;
    for($i in $sel)
    {
        if(stringArrayContains( $i, $allListCam))
        textScrollList -e -si $i J_allCameraNode;
        if (`referenceQuery -isNodeReferenced $i`)
        {
        if (stringArrayContains(`referenceQuery  -referenceNode -tr $i `,$allRefNode))
        textScrollList -e -si `referenceQuery  -referenceNode -tr $i ` J_allRefNode;
        }
    }
}
/////////
global proc J_resourceExporterSelitem()
{
    string $allListCam[]=`textScrollList  -q -si  J_allCameraNode`;
    select $allListCam;
}

//单独导出fbx文件
global proc  J_resourceExporterExportRig()
{
    python("JpyModules.pipeline.J_resourceExporter.J_exportFbxFromSelection()");
}
global proc  J_resourceExporterRemoveAllNameSpace()
{
    string $nameSpaces[]=`namespaceInfo -listOnlyNamespaces`;
    string $items[] = { "shared", "UI"};
    string $diff[] = stringArrayRemove($items, $nameSpaces);
    if(size($diff)>0)
    {
        for($i in $diff)
        {
            namespace -mergeNamespaceWithRoot -removeNamespace $i ;
            print ($i +"被删除\n");
        }
        J_resourceExporterRemoveAllNameSpace();
    }
}
global proc string[] J_resourceExporterGetRootJoint(string $refNode)
{
    string $rootJoint="";
    string $allNodes[]= `referenceQuery -nodes  $refNode `;
    if (size($allNodes)<1) return {""};
    string $allSkinClustersFromRef[]=`ls -type skinCluster  -allPaths $allNodes`;
    if (size($allSkinClustersFromRef)<1) return {""};
    string $skinClustersHis[]=`listHistory $allSkinClustersFromRef`;
    if (size($skinClustersHis)<1) return {""};
    string $allJointFromSkinClusters[]=`ls -long -type joint $skinClustersHis`;
    if (size($allJointFromSkinClusters)<1) return {""};
    string $refNamespace=`referenceQuery -namespace $refNode`;
    $refNamespace=`substring $refNamespace 2 (size($refNamespace))`+":";
    string $res[];
    int $jointCount=0;
    if (size($allJointFromSkinClusters)>0)
    {   
        for ($itemSC in $allJointFromSkinClusters)
        {
            $rootJoint=$itemSC ;
            string $par[]=`listRelatives -p -f $itemSC`;
            if (size($par)>0)
            {
                while (`objectType $par[0]`!="transform")
                {
                    $rootJoint=$par[0];
                    $par=`listRelatives -p -f $par[0]`;
                }
            }
            $res[$jointCount]=$rootJoint;
            $jointCount++;
        }
    }
    //$rootJoint=python("\""+$rootJoint+"\".replace("+"\""+$refNamespace+"\",\"\")");
    return stringArrayRemoveDuplicates($res);
}
//查文件路径,未保存,则以c:/temp为准
global proc string J_resourceExporterGetFilePath()
{       
    python("import os");
    string $filePath=python("os.path.dirname(maya.cmds.file(query=True,sceneName=True))")+"/";
    if (size ($filePath)<3)
        return "c:/temp/";
    return $filePath;
}
//获取文件名
global proc string J_resourceExporterGetFileNameWithOutExtension()
{       
    python("import os");
    string $filePath=python("os.path.basename(maya.cmds.file(query=True,sceneName=True))[:-3]");
    if (size ($filePath)<3)
        return "temp";
    return $filePath;
}

//J_resourceExporter;