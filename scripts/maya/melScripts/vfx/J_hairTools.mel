/////////////////////////////////////////////////////////////
///\file J_curveTools.mel
///\brief hair工具
///
///\author 桔
///\version 1.0
///\date  11:05 2018/1/27
///History:  
///
///////////////////////////////////////////////////////////////

///工具界面
///\return success
global proc string J_hairTools()
{
if (`window -ex J_hairTool`)
    deleteUI -window J_hairTool;
    window -title "毛发工具" -widthHeight 400 148  J_hairTool;
    formLayout textureNameLayout;   

     radioButtonGrp -numberOfRadioButtons 3 -sl 2 
                 -label "方向" -labelArray3 " X" " Y" " Z" radioButton1;
     radioButtonGrp -numberOfRadioButtons 3  -shareCollection radioButton1
                  -label "" -labelArray3 "-X" "-Y" "-Z" radioButton2;
    string $but[];
    $but[0]=`button -l "改方向"    -c J_curveTools_convertDir `;
    $but[1]=`button -l "反转曲线方向"  -c  "reverseCurve -ch 1 -rpo 1;"  `;
    $but[2]=`button -l "poly切曲线"  -c  "J_cutCurByPoly"  `;
    $but[3]=`button -l "修改曲线轴心"  -c  "J_curPivot"  `;
    $but[4]=`button -l "删除多余shape"  -c  "J_removeShape"  `;
    $but[5]=`button -l "删除未知节点"  -c  "J_deleteUnknownNodes"  `;
    intSliderGrp -field 1 -label "曲线分段数" -minValue 3 -maxValue 20 -value 8 segcount;
    $but[6]=`button -l "曲线转骨骼"  -c  "J_createJointsWithCurve"  `;
    $but[7]=`button -l "骨骼转曲线"  -c  "J_createCurveWithJoints"  `;
    $but[8]=`button -l "生成动力学骨骼"  -c "J_createDynCurve"  `;
    $but[9]=`button -l "创建经典hair碰撞体"  -c  "J_createHairConstraint"  `;
    
    formLayout -e

        -af  radioButton1 top 25
        -af  radioButton1 left -70
        -ac  radioButton2 top 5 radioButton1
        -af  radioButton2 left -70
        
        textureNameLayout;
    for ($item=0;$item<10;$item++)
        {
            formLayout -e
            -ap $but[$item] left 0 (1+50*($item%2))
            -af $but[$item] top (25*($item/2) +90)
            -ap $but[$item] right 0 (49+50*($item%2))
            textureNameLayout;
        }
showWindow J_hairTool;
return "success";
}

///转换曲线方向
global proc J_curveTools_convertDir()
{
    int $na=`radioButtonGrp -q -sl radioButton1`;
    int $nb=`radioButtonGrp -q -sl radioButton2`;
    int $nn;
    if(!$na==0)
     $nn=$na;
    else 
     $nn=$nb+3;
    string $sel[]=`filterExpand -sm 9`;
    for ($n in $sel)
    {
    select $n;
    selectCurveCV("first");
    string $p[]=`ls -sl`;
    float $a[]=`xform -q -ws -t $p[0]`;
    select $n;
    selectCurveCV("last");
    $p=`ls -sl`;
    float $b[]=`xform -q -ws -t $p[0]`;
    switch ($nn){ 
        case 1:
    if($a[0]<$b[0])
     {
      select $n;
      reverseCurve ;
      }
    break;
          
        case 2: 
    if($a[1]<$b[1])
     {
      select $n;
      reverseCurve ;
      }
    break;
          
        case 3: 
    if($a[2]<$b[2])
     {
      select $n;
      reverseCurve ;
      }
    break;
        case 4: 
    if($a[0]>$b[0])
     {
      select $n;
      reverseCurve ;
      }
    break;
        case 5: 
    if($a[1]>$b[1])
     {
      select $n;
      reverseCurve ;
      }
    break;
        case 6: 
    if($a[2]>$b[2])
     {
      select $n;
      reverseCurve ;
      }
    break;
           
    }

    }
    select -cl;
}
global proc J_createJointsWithCurve()
{
    python("JpyModules.vfx.J_nHairTool.J_createJointsWithCurve("+`intSliderGrp -q -value segcount`+")");
}
global proc J_createCurveWithJoints()
{
    python("JpyModules.vfx.J_nHairTool.J_createCurveWithJoints()");
}
global proc J_createDynCurve()
{
    python("JpyModules.vfx.J_nHairTool.J_createDynCurve()");
}

global proc J_deleteUnknownNodes()
{
    python("JpyModules.public.J_deleteUnknownNode()");
    python("JpyModules.public.J_cleanVaccine_gene()");
}
