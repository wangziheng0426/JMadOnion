/////////////////////////////////////////////////////////////
///\file J_attrTransfor.mel
///\brief 传递节点属性工具  用于多个相同节点间互相传递参数.
///
///\author 桔
///\version 1.0
///\date  15:44 2018/1/9
///History:  
///
///////////////////////////////////////////////////////////////

///判断窗口是否有物体被选择
///\return success
global proc string J_attrTransfor()
{
	string $sel[]=`ls -sl`;
	if(size($sel))
	{
		J_runAttr($sel);
	}
	else
	{
	confirmDialog -title "错误" -message "啥也不选？你tm在逗我？" -button  "哦";
	}
	return "success";
}
///打开主界面窗口
///\param string $sel 选择的节点
///\return success
global proc string J_runAttr(string $sel[])
{
if (`window -ex J_attr`)
	deleteUI -window J_attr;
	window -w 300 -h 650 -title "预设批量传递" J_attr;
	formLayout  -nd 100  -h 295 J_attr_mainFormLayout;
	textScrollList -fn "boldLabelFont" -sc "J_selectitem" -allowMultiSelection true J_sourcesNodes;
	
	textScrollList -fn "boldLabelFont" -allowMultiSelection 0 J_sourcesPresets;


	string $button01=`button -l "保存预设" -c "J_savePresets"`;
	string $button02=`button -l "读取预设" -c "J_readPresets"`;
	string $button03=`button -l "删除预设" -c "J_delPresets"`;
	string $button04=`button -l "刷新窗口" -c "J_reFrashAttrTransformWin"`;
	checkBox -label "忽略变换节点" -v 1 J_ignoreTransform;
	

	formLayout  -e
		-af J_sourcesNodes top 3
		-af J_sourcesNodes left 2
		-ap J_sourcesNodes right 0 49
		-ap J_sourcesNodes bottom 0 70

		-af J_sourcesPresets top 3
		-ac J_sourcesPresets left 2 J_sourcesNodes
		-ap J_sourcesPresets right 0 99
		-ap J_sourcesPresets bottom 0 70

		-ac J_ignoreTransform top 3 J_sourcesNodes
		-ap J_ignoreTransform left 2 40
		-af J_ignoreTransform right 2
		
		-ac $button01 top 3 J_ignoreTransform
		-af $button01 left 2
		-af $button01 right 2

		-ac $button02 top 3 $button01
		-af $button02 left 2
		-af $button02 right 2

		-ac $button03 top 3 $button02
		-af $button03 left 2
		-af $button03 right 2

		-ac $button04 top 3 $button03
		-af $button04 left 2
		-af $button04 right 2

	J_attr_mainFormLayout;


	J_readSelectedNode($sel);
	J_selectNode();
	J_delPresets();
	J_runScriptJob();
	
	showWindow J_attr;
	return "success";
}

///读取本地预设,并刷新预设列表
///\param string $selectedType 所选节点类型
///\param string $uiTextScrollList 
///\return success
proc string J_getPresets(string $selectedType,string $uiTextScrollList)
	{
	string $J_ppath = `internalVar -userPrefDir`;
	$J_ppath = substitute( "/prefs", $J_ppath, "");
	$J_ppath+="presets/attrPresets/"+$selectedType +"/";

	string $J_presets[]=`getFileList -folder $J_ppath  -filespec "*.mel"`;
	textScrollList -e -ra $uiTextScrollList;
	for($i in $J_presets)
	{
		textScrollList -e -a $i $uiTextScrollList;
	}
	return "success";
	}
///保存预设到本地,并刷新预设列表
///\return success
proc string J_savePresets()
{
	string $selTextScrollList[]=`textScrollList -q -si J_sourcesNodes`;
	string $preName = substituteAllString($selTextScrollList[0],":", "_");
	if(size($selTextScrollList))
	{
	saveAttrPreset($selTextScrollList[0],($preName+"pre"),0);
	string $selectedType=`objectType $selTextScrollList[0]`;
	textScrollList -e -ra J_sourcesPresets;
	J_getPresets($selectedType,"J_sourcesPresets");
	}
	return "success";
}
///读取选择的预设,并将参数赋予选择的节点
///\return success
proc string  J_readPresets()
{
	string $J_selNode[]=`textScrollList -q -si J_sourcesNodes`;
	string $J_selPresets[]=`textScrollList -q -si J_sourcesPresets`;
	for($i in $J_selNode)
	{
		string $selectedType=`objectType $i`;
		string $J_ppath = `internalVar -userPrefDir`;
		$J_ppath = substitute( "/prefs", $J_ppath, "");
		$J_ppath+="presets/attrPresets/"+$selectedType+"/" + $J_selPresets[0];
			applyAttrPreset $i $J_ppath 1;//读取预设
	}
	return "success";
}

///删除选择的预设
///\return success
proc string J_delPresets()
{	string $J_selNode[]=`textScrollList -q -ai J_sourcesNodes`;
	string $J_selPresets[]=`textScrollList -q -si J_sourcesPresets`;
		string $selectedType=`objectType $J_selNode[0]`;
		string $J_ppath = `internalVar -userPrefDir`;
		$J_ppath = substitute( "/prefs", $J_ppath, "");
		$J_ppath+="presets/attrPresets/"+$selectedType+"/" + $J_selPresets[0];
		sysFile -del  $J_ppath;//删除垃圾
		textScrollList -e -ri $J_selPresets[0] J_sourcesPresets;
		return "success";
}
///查询选择的节点,根据第一个选择的节点类型,列出同类型节点.并列出此类型本地预设
///根据单选框决定是否选择变换节点
///\param string $sel 选择的节点
///\return success
proc string  J_readSelectedNode(string $sel[])
{
	textScrollList -e -ra J_sourcesNodes;
	int $J_ignoreTransform_state =`checkBox -q -v J_ignoreTransform`;
	string $selectedType=`objectType $sel[0]`;
	if($J_ignoreTransform_state==1&&$selectedType=="transform")
	{
		string $tempNodeType[]=`listRelatives -c $sel[0]`;
		$selectedType=`objectType $tempNodeType[0]`;
	}
	
	string $allselTypeNode[]=`ls -type $selectedType`;
	for($i in $allselTypeNode)
	{
		textScrollList -e -a $i J_sourcesNodes;
	}
	J_getPresets($selectedType,"J_sourcesPresets");
	return "success";
}
///选择列表中的节点
///\return success
proc string J_selectitem()
{
	string $nn[]=`textScrollList -q -si J_sourcesNodes`;
	select $nn;
	return "success";
}
///根据场景中的选择,选择列表中的节点
///\return success
proc string J_selectNode()
{
    textScrollList -e -da  J_sourcesNodes;
	string $sel[]=`ls -sl`;
	string $list[]=`textScrollList -q -ai J_sourcesNodes`;
	for($i in $sel)
	{
	if(stringArrayContains( $i, $list))
	textScrollList -e -si $i J_sourcesNodes;
	}
	return "success";
}
///启动后台跟踪程序,同步插件中和场景中的选择对象
///\return success
proc string  J_runScriptJob()
{
	int $ff = `scriptJob -e "SelectionChanged" J_selectNode `;
	string $ss = ("scriptJob -k "+ $ff);
	scriptJob -uid "J_attr" $ss;
	return "success";
}
///刷新窗体
///\return success
proc string J_reFrashAttrTransformWin()
{
	string $sel[]=`ls -sl`;
	J_readSelectedNode($sel);
	return "success";
}