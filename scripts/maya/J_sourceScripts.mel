/////////////////////////////////////////////////////////////
///\file J_sourceScripts.mel
///
///\brief  加载插件主体,查询插件目录
///
///\author 桔
///\version 1.0
///\date  15:44 2018/1/9
///History:  
///
///////////////////////////////////////////////////////////////


///加载插件主体,并导入python库
///\param string $inPath 通过userSetup输入路径\
///\return success
global proc string J_sourceScripts(string $inPath)
{
    string $pluginTitle="DY_Tool";
    //加载mel工具
    J_scripts(J_getScriptsPath(),$pluginTitle);
    //加载python内置模块
    python("import maya.cmds as cmds");
    python("import sys");
    python("import os");
    python("import shutil");
    //根据maya版本加载py对应模块
    if (`about -v`==2024||`about -v`==2023)
    {
        python("sys.path.append('"+`J_getScriptsPath`+"/J_py3"+"')");
        python("import JpyModules");
    }
    else{
        python("sys.path.append('"+`J_getScriptsPath`+"/J_py2"+"')");
        python("import JpyModules");
    }   
    
    print "PlugIn Loaded***********************\n";
    return "success";
}

///\return string 插件文件目录
global proc string J_getScriptsPath()
{
    string $J_path=`whatIs J_sourceScripts`;
    int $k=sizeBytes($J_path);
    $J_path=`substring $J_path 25 $k`;
    string $buffer[];
    string $numTokens=`tokenize $J_path "/" $buffer`;
    if(size($buffer))
    {
        string $pluginPath=$buffer[0];
        for ($i=1;$i< size($buffer)-1;$i++)
        {
            $pluginPath+="/"+$buffer[$i];
        }
        if(`gmatch $J_path "//*" ` )
        {$pluginPath="//"+$pluginPath;}
        return $pluginPath;
    }
    return("load plugin failed");
}

global proc J_scripts(string $J_mainPath,string $J_menuName)
{
    ////////////////////////////////////////////////////////////////创建菜单
    if (`menu -exists  $J_menuName`) deleteUI $J_menuName;
    string $menu=`menu  -l $J_menuName -p MayaWindow  $J_menuName`; 
    
    //读取菜单列表
    string $J_menuList=$J_mainPath+"/config/menuList.txt";
    //加载abc插件
    string $mayapath=`getenv MAYA_LOCATION`+"/bin/plug-ins/AbcExport.mll";
    loadPlugin( $mayapath); 
    int $J_fileId=`fopen $J_menuList "r"`;
    //按照配置文件加载界面
    fgetline $J_fileId;
    string $J_getWord=`fgetword $J_fileId`;
    print "----------------------------------------------------------------";
    print $J_getWord;
    print "\n";
    string $J_mainMenuName="";
    string $J_mainMenuLabel="";
    string $J_subInfo[];
    string $J_menuItems[];
    int $J_menuItemsCount=0;
    while ( 1 ) 
    {
        if($J_getWord=="<MainMenu>")
        {
            $J_getWord = `fgetword $J_fileId`;
            $J_mainMenuLabel=$J_getWord;
            $J_getWord = `fgetword $J_fileId`;
            $J_mainMenuName=$J_getWord ;
            $J_menuItems[$J_menuItemsCount]=`menuItem -p $menu -subMenu 1 -label $J_mainMenuLabel -to 1 -aob 1 $J_mainMenuName`;
            $J_menuItemsCount++;
            $J_getWord = `fgetword $J_fileId`;
        }
        else{ $J_getWord = `fgetword $J_fileId`;}                   
        if($J_getWord=="<SubMenu>")
        {
            $J_getWord = `fgetword $J_fileId`;
            $J_subInfo[0]=$J_getWord;
            $J_getWord = `fgetword $J_fileId`;
            $J_subInfo[1]=$J_getWord ;
            $J_getWord = `fgetword $J_fileId`;
            $J_subInfo[2]=$J_getWord ;
            print $J_subInfo[2];print"-------------\n";
            string $fileToSource="source \""+$J_mainPath+"/melScripts/"+$J_subInfo[2]+"\"";
            catch(`eval $fileToSource `);
            menuItem -p $J_mainMenuName -label $J_subInfo[0] -c $J_subInfo[1] -to 1 ;
            $J_getWord = `fgetword $J_fileId`;
        }
        if($J_getWord==""){break;}
        
    }
    menuItem -p $menu -label "更新工具" -c "J_updataMadOnion" -to 1 ;
    fclose $J_fileId;
    ////////////////////////////////////////////////////////////////创建菜单
    ////////////////////////////////////////////////////////////////读取mel命令
    string $JmodulesfilePath[];
    $JmodulesfilePath[0]=J_getScriptsPath()+"/melScripts/Jmodules";
    J_getFolders($JmodulesfilePath,$JmodulesfilePath[0]);
    for ($JmodulesfilePathItem in $JmodulesfilePath)
    {
        string $J_modules[]=`getFileList  -folder $JmodulesfilePathItem -filespec "*.mel" `;
        for ($J_modelesItem in $J_modules)
        {
            catch(eval("source  \"" +$JmodulesfilePathItem+"/"+$J_modelesItem+"\""));
            print ("source  \"" +$JmodulesfilePathItem+"/"+$J_modelesItem+"\"");
            print "\n";
        }
    }
    ////////////////////////////////////////////////////////////////读取mel命令
    
    //menuItem -p $J_menuName -label "命令工具集" -c J_madOnionTools -aob 1 flying0; 
    //添加插件环境变量
    string $pluginsPath=J_getScriptsPath()+"/plugins;";
    putenv "MAYA_PLUG_IN_PATH" ($pluginsPath +`getenv "MAYA_PLUG_IN_PATH"`);
}
//递归找文件夹
global proc J_getFolders(string $resFolders[],string $inPutPath)
{
    string $JmodulesfilePath[]=` getFileList  -folder  $inPutPath`;
    $orgCount=size($resFolders);
    $count=0;
    for ($item in $JmodulesfilePath)
    {
        if (size(`getFileList  -folder  ($inPutPath+"/"+$item)`))
            {
                $resFolders[$count+$orgCount]=$inPutPath+"/"+$item;
                $count++;
                J_getFolders($resFolders,($inPutPath+"/"+$item));
            }
    }
}

///\return string 插件文件目录
global proc string J_getSysPath()
{
    string $J_path=`whatIs J_sourceScripts`;
    int $k=sizeBytes($J_path);
    $J_path=`substring $J_path 25 $k`;
    string $buffer[];
    string $numTokens=`tokenize $J_path "/" $buffer`;
    if(size($buffer))
    {
        string $pluginPath=$buffer[0];
        for ($i=1;$i< size($buffer)-1;$i++)
        {
            $pluginPath+="/"+$buffer[$i];
        }
        if(`gmatch $J_path "//*" ` )
        {$pluginPath="//"+$pluginPath;}
        return $pluginPath;
    }
    return("error");
}
//更新工具
global proc string J_updataMadOnion()
{
string $toolp=`J_getSysPath`;
python "import os";
python "tcwd=os.getcwd()";
python ("os.chdir('"+$toolp+"')");
python "os.popen('git.exe pull')";
python "os.chdir(tcwd)";

print ("更新完成需要重启maya");

}